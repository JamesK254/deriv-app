{"version":3,"file":"trader/js/trader.src_Modules_Trading_Components_Form_TradeParams_Accumulator_accumulators-info-display_jsx-src-47ad29.69dff2a0b50c11689838.js","mappings":"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","sources":["webpack://@deriv/trader/./src/App/Components/Form/fieldset.jsx","webpack://@deriv/trader/./src/App/Components/Form/number-selector.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/LabeledQuantityInputMobile/labeled-quantity-input-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/LabeledQuantityInputMobile/index.js","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/cancel-deal-info.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-info-display.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/expiration.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/stop-loss.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Turbos/barrier-selector.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barriers-list-body.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barriers-list.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/min-max-stake-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/strike-param-modal.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/strike.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/trade-type-tabs.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/accumulator-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/turbos-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/trade-categories.tsx","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-asian.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-close-to-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-ends-in-out.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-even-odd.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-to-close.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-to-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-match-diff.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-multiplier.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-over-under.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-reset.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-rise-fall.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-run-high-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-spread.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-tick-high-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-touch.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-turbos.svg","webpack://@deriv/trader/./src/Assets/Trading/Categories/contract-type-description-video.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/trade-categories-gif.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-glossary.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-info-header.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/index.js","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/search-input.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/no-results-message.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/contract-type-menu.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/index.js","webpack://@deriv/trader/./src/Assets/Trading/Categories/icon-trade-categories.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-display.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-item.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-list.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-dialog.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-widget.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/index.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/contract-type.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-buttons-overlay.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-button.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-fieldset.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/purchase.jsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/allow-equals.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/multiplier.js"],"sourcesContent":["import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Popover } from '@deriv/components';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    header_tooltip,\n    is_center,\n    is_tooltip_disabled,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', {\n        'center-text': is_center,\n        'trade-container__fieldset-header--inline': header_tooltip,\n    });\n    const fieldset_info_class = classNames(\n        'trade-container__fieldset-info',\n        !is_center && 'trade-container__fieldset-info--left'\n    );\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header && (\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                    {header_tooltip && (\n                        <span\n                            className={classNames('', {\n                                'trade-container__fieldset-header--tooltip-disabled': is_tooltip_disabled,\n                            })}\n                        >\n                            <Popover\n                                alignment='left'\n                                icon='info'\n                                is_bubble_hover_enabled\n                                message={header_tooltip}\n                                margin={216}\n                                relative_render\n                            />\n                        </span>\n                    )}\n                </div>\n            )}\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    className: PropTypes.string,\n    header: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    header_tooltip: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n    is_center: PropTypes.bool,\n    is_tooltip_disabled: PropTypes.bool,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({ arr_arr_numbers, name, onChange, selected_number, should_show_in_percents }) => {\n    const handleSelect = item => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) => (\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i => (\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', {\n                                'number-selector__selection--selected': selected_number === i,\n                                'number-selector__selection--percentage': should_show_in_percents,\n                            })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {should_show_in_percents ? `${i * 100}%` : i}\n                        </span>\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    selected_number: PropTypes.number,\n    should_show_in_percents: PropTypes.bool,\n};\n\nexport default NumberSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputField } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\n\nconst LabeledQuantityInputMobile = ({ input_label, ...props }) => (\n    <div\n        className={`${props.name}__widget ${props.wrapper_classname && props.wrapper_classname}`}\n        data-testid={`dt_${props.name}_widget`}\n    >\n        <Fieldset className={`${props.name}__fields`}>\n            <InputField {...props} />\n        </Fieldset>\n        <h2 className={`${props.name}__widget-title`}>{input_label}</h2>\n    </div>\n);\n\nLabeledQuantityInputMobile.propTypes = {\n    input_label: PropTypes.string,\n    ...InputField.propTypes,\n};\n\nexport default React.memo(LabeledQuantityInputMobile);\n","import LabeledQuantityInputMobile from './labeled-quantity-input-mobile.jsx';\n\nexport default LabeledQuantityInputMobile;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money } from '@deriv/components';\nimport { isDesktop, isMobile, getDecimalPlaces } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst CancelDealInfo = observer(({ proposal_info }) => {\n    const { currency, has_cancellation } = useTraderStore();\n    const { id, cancellation, has_error } = proposal_info;\n    const error = has_error || !id;\n    const [is_row_layout, setIsRowLayout] = React.useState(false);\n\n    const ref = React.useRef(null);\n\n    React.useEffect(() => {\n        if (ref.current) {\n            const el_height = ref.current.parentElement?.clientHeight;\n            if ((el_height > 21 && isDesktop()) || ((el_height > 21 || getDecimalPlaces(currency) > 2) && isMobile())) {\n                setIsRowLayout(true);\n            } else {\n                setIsRowLayout(false);\n            }\n        }\n    }, [cancellation, currency, is_row_layout, setIsRowLayout]);\n\n    if (!has_cancellation) return null;\n\n    return (\n        <div\n            className={classNames('trade-container__cancel-deal-info', {\n                'trade-container__cancel-deal-info--row-layout': is_row_layout,\n            })}\n        >\n            {cancellation && (\n                <React.Fragment>\n                    <div className='trade-container__price-info-basis' ref={ref}>\n                        {localize('Deal cancel. fee')}\n                    </div>\n                    <div className='trade-container__price-info-value'>\n                        {!error && (\n                            <Money\n                                amount={cancellation.ask_price}\n                                className='trade-container__price-info-currency'\n                                currency={currency}\n                                show_currency\n                            />\n                        )}\n                    </div>\n                </React.Fragment>\n            )}\n        </div>\n    );\n});\n\nexport default CancelDealInfo;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DesktopWrapper, Icon, MobileWrapper, Money, Popover, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { getContractSubtype, getCurrencyDisplayCode, getLocalizedBasis, getGrowthRatePercentage } from '@deriv/shared';\nimport CancelDealInfo from './cancel-deal-info.jsx';\n\nexport const ValueMovement = ({\n    has_error_or_not_loaded,\n    proposal_info,\n    currency,\n    has_increased,\n    is_turbos,\n    is_vanilla,\n    value,\n    show_currency = true,\n}) => (\n    <div className='price-info--value-container'>\n        <div className='trade-container__price-info-value'>\n            {!has_error_or_not_loaded && (\n                <Money\n                    amount={proposal_info?.obj_contract_basis?.value || value}\n                    className={classNames('trade-container__price-info-currency', {\n                        'trade-container__price-info-currency--payout-per-point': is_vanilla || is_turbos,\n                    })}\n                    currency={currency}\n                    should_format={!is_turbos && !is_vanilla}\n                    show_currency={show_currency}\n                />\n            )}\n        </div>\n        <div className='trade-container__price-info-movement'>\n            {!has_error_or_not_loaded && has_increased !== null && has_increased ? (\n                <Icon icon='IcProfit' />\n            ) : (\n                <Icon icon='IcLoss' />\n            )}\n        </div>\n    </div>\n);\n\nconst ContractInfo = ({\n    basis,\n    currency,\n    growth_rate,\n    has_increased,\n    is_loading,\n    is_accumulator,\n    is_multiplier,\n    is_turbos,\n    is_vanilla,\n    should_fade,\n    proposal_info,\n    type,\n}) => {\n    const localized_basis = getLocalizedBasis();\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake': {\n                if (is_vanilla || is_turbos) {\n                    return localized_basis.payout_per_point;\n                }\n                return localized_basis.payout;\n            }\n            case 'payout': {\n                return localized_basis.stake;\n            }\n            default:\n                return basis;\n        }\n    };\n\n    const has_error_or_not_loaded = proposal_info.has_error || !proposal_info.id;\n    const basis_text = has_error_or_not_loaded ? stakeOrPayout() : proposal_info.obj_contract_basis.text;\n    const { message, obj_contract_basis, stake } = proposal_info;\n\n    const setHintMessage = () => {\n        if (is_turbos) {\n            return (\n                <Localize\n                    i18n_default_text='<0>{{title}}</0> {{message}}'\n                    components={[<Text key={0} weight='bold' size='xxs' />]}\n                    values={{\n                        title: getContractSubtype(type) === 'Long' ? localize('For Long:') : localize('For Short:'),\n                        message,\n                    }}\n                />\n            );\n        }\n        if (is_vanilla) {\n            return (\n                <Localize i18n_default_text='The payout at expiry is equal to the payout per point multiplied by the difference between the final price and the strike price.' />\n            );\n        }\n\n        return message;\n    };\n\n    return (\n        <div\n            className={classNames('trade-container__price', {\n                'trade-container__price--turbos': is_turbos,\n            })}\n        >\n            <div\n                id={`dt_purchase_${type.toLowerCase()}_price`}\n                className={classNames('trade-container__price-info', {\n                    'trade-container__price-info--disabled': has_error_or_not_loaded,\n                    'trade-container__price-info--slide': is_loading && !should_fade,\n                    'trade-container__price-info--fade': is_loading && should_fade,\n                    'trade-container__price-info--turbos': is_turbos,\n                })}\n            >\n                {is_multiplier || is_accumulator ? (\n                    <React.Fragment>\n                        {!is_accumulator && (\n                            <DesktopWrapper>\n                                <CancelDealInfo proposal_info={proposal_info} />\n                            </DesktopWrapper>\n                        )}\n                        <MobileWrapper>\n                            <div className='trade-container__price-info-wrapper'>\n                                <div className='btn-purchase__text_wrapper'>\n                                    <Text size='xs' weight='bold' color='colored-background'>\n                                        {!is_accumulator ? (\n                                            <Money amount={stake} currency={currency} show_currency />\n                                        ) : (\n                                            !is_loading && `${getGrowthRatePercentage(growth_rate)}%`\n                                        )}\n                                    </Text>\n                                </div>\n                            </div>\n                        </MobileWrapper>\n                    </React.Fragment>\n                ) : (\n                    !is_multiplier &&\n                    !is_accumulator &&\n                    obj_contract_basis && (\n                        <React.Fragment>\n                            <div className='trade-container__price-info-basis'>{basis_text}</div>\n                            <DesktopWrapper>\n                                <ValueMovement\n                                    has_error_or_not_loaded={has_error_or_not_loaded}\n                                    proposal_info={proposal_info}\n                                    currency={getCurrencyDisplayCode(currency)}\n                                    has_increased={has_increased}\n                                    is_turbos={is_turbos}\n                                    is_vanilla={is_vanilla}\n                                />\n                            </DesktopWrapper>\n                            <MobileWrapper>\n                                <div className='trade-container__price-info-wrapper'>\n                                    <ValueMovement\n                                        has_error_or_not_loaded={has_error_or_not_loaded}\n                                        proposal_info={proposal_info}\n                                        currency={getCurrencyDisplayCode(currency)}\n                                        has_increased={has_increased}\n                                        is_turbos={is_turbos}\n                                        is_vanilla={is_vanilla}\n                                    />\n                                </div>\n                            </MobileWrapper>\n                        </React.Fragment>\n                    )\n                )}\n            </div>\n            {!is_multiplier && !is_accumulator && (\n                <DesktopWrapper>\n                    <Popover\n                        alignment='left'\n                        icon='info'\n                        id={`dt_purchase_${type.toLowerCase()}_info`}\n                        is_bubble_hover_enabled\n                        margin={216}\n                        message={has_error_or_not_loaded ? '' : setHintMessage()}\n                        relative_render\n                    />\n                </DesktopWrapper>\n            )}\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    basis: PropTypes.string,\n    currency: PropTypes.string,\n    growth_rate: PropTypes.number,\n    has_increased: PropTypes.bool,\n    is_accumulator: PropTypes.bool,\n    is_multiplier: PropTypes.bool,\n    is_turbos: PropTypes.bool,\n    is_vanilla: PropTypes.bool,\n    is_loading: PropTypes.bool,\n    proposal_info: PropTypes.object,\n    should_fade: PropTypes.bool,\n    type: PropTypes.string,\n};\n\nexport default ContractInfo;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { Money, Text, Popover } from '@deriv/components';\nimport classNames from 'classnames';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { isMobile } from '@deriv/shared';\n\nconst AccumulatorsInfoDisplay = observer(() => {\n    const { currency, maximum_payout, maximum_ticks } = useTraderStore();\n\n    const content = [\n        {\n            label: localize('Max. payout'),\n            value: <Money amount={maximum_payout} show_currency currency={currency} />,\n            tooltip_text: localize('Your contract will be automatically closed when your payout reaches this amount.'),\n        },\n        {\n            label: localize('Max. ticks'),\n            value: `${maximum_ticks || 0} ${maximum_ticks === 1 ? localize('tick') : localize('ticks')}`,\n            tooltip_text: localize('Your contract will be automatically closed upon reaching this number of ticks.'),\n        },\n    ];\n\n    return (\n        <Fieldset className={classNames('trade-container__fieldset', 'accu-info-display')}>\n            {content.map(({ label, value, tooltip_text }) => (\n                <div key={label} className='accu-info-display__row'>\n                    <Text size='xxs' weight='bold' line_height='xxs'>\n                        {label}\n                    </Text>\n                    <Text size='xxs' align='right' as='div'>\n                        {value}\n                        <Popover\n                            alignment='left'\n                            icon='info'\n                            is_bubble_hover_enabled\n                            message={tooltip_text}\n                            margin={isMobile() ? 0 : 216}\n                            zIndex='9999'\n                        />\n                    </Text>\n                </div>\n            ))}\n        </Fieldset>\n    );\n});\n\nexport default AccumulatorsInfoDisplay;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\nimport { formatDuration, getDiffDuration, getDateFromNow } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst Expiration = observer(({ is_text_only, text_size }) => {\n    const { expiration } = useTraderStore();\n    const { common } = useStore();\n    const { server_time: start_time } = common;\n    const { days, timestamp } = formatDuration(getDiffDuration(start_time.unix(), expiration), 'HH:mm');\n    const date = getDateFromNow(days, 'day', 'DD MMM YYYY');\n\n    if (is_text_only) {\n        return (\n            <React.Fragment>\n                {expiration ? (\n                    <Text size={text_size} align='center'>\n                        {date} at {timestamp}\n                    </Text>\n                ) : (\n                    '-'\n                )}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__fieldset__multiplier'\n            is_center\n            header={localize('Expires on')}\n            header_tooltip={\n                expiration\n                    ? localize(\n                          'Your contract will be closed automatically at the next available asset price on {{date}} at {{timestamp}}.',\n                          { date, timestamp }\n                      )\n                    : null\n            }\n        >\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginRight: '1.6rem' }}>\n                {expiration ? (\n                    <Text size='xs' align='center'>\n                        {date} at {timestamp}\n                    </Text>\n                ) : (\n                    '-'\n                )}\n            </div>\n        </Fieldset>\n    );\n});\n\nExpiration.propTypes = {\n    is_text_only: PropTypes.bool,\n    text_size: PropTypes.string,\n};\n\nexport default Expiration;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst commission_tooltip_margin = 30;\nconst stop_out_tooltip_margin = 160;\n\nconst MultipliersInfo = observer(\n    ({ className, commission_text_size, stop_out_text_size, is_tooltip_relative, should_show_tooltip, ...props }) => {\n        const trade = useTraderStore();\n        const { currency, has_stop_loss } = trade;\n        const multiplier = props.multiplier ?? (trade.multiplier || 0);\n        const amount = props.amount ?? (trade.amount || 0);\n        const commission = props.commission ?? (trade.commission || 0);\n        const stop_out = props.stop_out ?? (trade.stop_out || 0);\n\n        const commission_text = (\n            <Text\n                as='p'\n                line_height='s'\n                size={commission_text_size || 'xxxs'}\n                className={classNames({\n                    [`${className}-tooltip-text`]: className,\n                })}\n            >\n                <Localize\n                    i18n_default_text='Commission <0/>'\n                    components={[<Money key={0} amount={commission} currency={currency} show_currency />]}\n                />\n            </Text>\n        );\n\n        const stop_out_text = (\n            <Text\n                as='p'\n                line_height='s'\n                size={stop_out_text_size || 'xxxs'}\n                className={classNames({\n                    [`${className}-tooltip-text`]: className,\n                })}\n            >\n                <Localize\n                    i18n_default_text='Stop out <0/>'\n                    components={[<Money key={0} amount={stop_out} currency={currency} show_currency />]}\n                />\n            </Text>\n        );\n\n        const commission_tooltip = (\n            <Localize\n                i18n_default_text='<0>{{commission_percentage}}%</0> of (<1/> * {{multiplier}})'\n                values={{\n                    commission_percentage: Number((commission * 100) / (multiplier * amount)).toFixed(4),\n                    multiplier,\n                }}\n                components={[\n                    <Text size='xxs' weight='bold' key={0} />,\n                    <Money key={1} amount={amount} currency={currency} />,\n                ]}\n            />\n        );\n\n        const stop_out_tooltip = (\n            <Localize\n                i18n_default_text='When your current loss equals or exceeds {{stop_out_percentage}}% of your stake, your contract will be closed at the nearest available asset price.'\n                values={{\n                    stop_out_percentage: Math.floor(Math.abs(Number((stop_out * 100) / amount))),\n                }}\n            />\n        );\n\n        const getInfo = ({ text, message, margin }) => {\n            return should_show_tooltip ? (\n                <Popover\n                    message={message}\n                    {...(is_tooltip_relative\n                        ? { alignment: 'left', relative_render: true, margin }\n                        : { alignment: 'top', zIndex: 9999 })}\n                >\n                    {text}\n                </Popover>\n            ) : (\n                text\n            );\n        };\n\n        return (\n            <div\n                className={classNames('multipliers-trade-info', className, {\n                    'mobile-widget__multiplier-trade-info--no-stop-out': has_stop_loss,\n                })}\n            >\n                {getInfo({\n                    text: commission_text,\n                    message: commission_tooltip,\n                    margin: commission_tooltip_margin,\n                })}\n                {!has_stop_loss &&\n                    getInfo({\n                        text: stop_out_text,\n                        message: stop_out_tooltip,\n                        margin: stop_out_tooltip_margin,\n                    })}\n            </div>\n        );\n    }\n);\n\nMultipliersInfo.propTypes = {\n    className: PropTypes.string,\n    commission_text_size: PropTypes.string,\n    is_tooltip_relative: PropTypes.bool,\n    should_show_tooltip: PropTypes.bool,\n    stop_out_text_size: PropTypes.string,\n};\n\nexport default MultipliersInfo;\n","import React from 'react';\nimport { InputWithCheckbox } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { isDesktop } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst StopLoss = observer(props => {\n    const { ui, client } = useStore();\n    const trade = useTraderStore();\n\n    const { addToast, removeToast, current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { amount, currency } = trade;\n\n    const validation_errors = props.validation_errors ?? trade.validation_errors;\n    const stop_loss = props.stop_loss ?? trade.stop_loss;\n    const has_stop_loss = props.has_stop_loss ?? trade.has_stop_loss;\n    const onChangeMultiple = props.onChangeMultiple ?? trade.onChangeMultiple;\n    const onChange = props.onChange ?? trade.onChange;\n\n    const changeValue = e => {\n        if (e.target.name === 'has_stop_loss') {\n            const new_val = e.target.value;\n            onChangeMultiple({\n                [e.target.name]: new_val,\n                ...(new_val ? { has_cancellation: false } : {}),\n            });\n        } else {\n            onChange(e);\n        }\n    };\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <InputWithCheckbox\n                addToast={addToast}\n                removeToast={removeToast}\n                classNameInlinePrefix='trade-container__currency'\n                classNameInput='trade-container__input'\n                className={isDesktop() ? 'trade-container__amount trade-container__amount--multipliers' : null}\n                currency={currency}\n                current_focus={current_focus}\n                defaultChecked={has_stop_loss}\n                error_messages={has_stop_loss ? validation_errors.stop_loss : undefined}\n                is_single_currency={is_single_currency}\n                is_negative_disabled={true}\n                is_input_hidden={!has_stop_loss}\n                label={localize('Stop loss')}\n                max_value={+amount}\n                name='stop_loss'\n                onChange={changeValue}\n                setCurrentFocus={setCurrentFocus}\n                tooltip_label={localize('Your contract will be closed automatically if your loss reaches this amount.')}\n                tooltip_alignment='left'\n                error_message_alignment='left'\n                value={stop_loss}\n            />\n        </Fieldset>\n    );\n});\n\nexport default StopLoss;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { InputWithCheckbox } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isDesktop } from '@deriv/shared';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst TakeProfit = observer(props => {\n    const { ui, client } = useStore();\n    const trade = useTraderStore();\n\n    const { addToast, removeToast, current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { is_accumulator, currency } = trade;\n\n    const validation_errors = props.validation_errors ?? trade.validation_errors;\n    const take_profit = props.take_profit ?? trade.take_profit;\n    const has_take_profit = props.has_take_profit ?? trade.has_take_profit;\n    const onChangeMultiple = props.onChangeMultiple ?? trade.onChangeMultiple;\n    const onChange = props.onChange ?? trade.onChange;\n\n    const changeValue = e => {\n        if (e.target.name === 'has_take_profit') {\n            const new_val = e.target.value;\n            onChangeMultiple({\n                [e.target.name]: new_val,\n                ...(new_val ? { has_cancellation: false } : {}),\n            });\n        } else {\n            onChange(e);\n        }\n    };\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <InputWithCheckbox\n                addToast={addToast}\n                removeToast={removeToast}\n                classNameInlinePrefix='trade-container__currency'\n                classNameInput={classNames('trade-container__input', {\n                    'trade-container__input--accumulator': is_accumulator,\n                })}\n                className={isDesktop() ? 'trade-container__amount trade-container__amount--multipliers' : null}\n                currency={currency}\n                current_focus={current_focus}\n                defaultChecked={has_take_profit}\n                error_messages={has_take_profit ? validation_errors.take_profit : undefined}\n                is_single_currency={is_single_currency}\n                is_negative_disabled={true}\n                is_input_hidden={!has_take_profit}\n                label={localize('Take profit')}\n                name='take_profit'\n                onChange={changeValue}\n                setCurrentFocus={setCurrentFocus}\n                tooltip_label={localize(\n                    'Your contract will be closed automatically if your profit reaches this amount.'\n                )}\n                tooltip_alignment='left'\n                error_message_alignment='left'\n                value={take_profit}\n            />\n        </Fieldset>\n    );\n});\n\nexport default TakeProfit;\n","import React from 'react';\nimport BarriersList from '../barriers-list';\nimport { DesktopWrapper, Icon, MobileDialog, MobileWrapper, Text, Popover } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { Localize, localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst BarrierSelector = observer(() => {\n    const { barrier_1, onChange, setHoveredBarrier, barrier_choices } = useTraderStore();\n    const [is_barriers_table_expanded, setIsBarriersTableExpanded] = React.useState(false);\n    const [is_mobile_tooltip_visible, setIsMobileTooltipVisible] = React.useState(false);\n    const [selected_barrier, setSelectedBarrier] = React.useState(barrier_1);\n\n    const toggleMobileTooltip = () => setIsMobileTooltipVisible(!is_mobile_tooltip_visible);\n\n    const toggleBarriersTable = () => {\n        setIsMobileTooltipVisible(false);\n        setIsBarriersTableExpanded(!is_barriers_table_expanded);\n    };\n\n    const onBarrierClick = (barrier: string) => {\n        setHoveredBarrier('');\n        setSelectedBarrier(barrier);\n        onChange({\n            target: {\n                name: 'barrier_1',\n                value: barrier,\n            },\n        });\n        setIsBarriersTableExpanded(false);\n    };\n\n    React.useEffect(() => {\n        setSelectedBarrier(barrier_1);\n    }, [barrier_1]);\n\n    const header_tooltip_text = [localize('For Long:'), localize('For Short:')].map(title => (\n        <div key={title} className='trade-container__barriers-tooltip'>\n            <Localize\n                i18n_default_text=\"<0>{{title}}</0> You will get a payout if the market price stays {{price_position}} and doesn't touch or cross the barrier. Otherwise, your payout will be zero.\"\n                components={[<Text key={0} weight='bold' size='xxs' />]}\n                values={{\n                    title,\n                    price_position:\n                        title === localize('For Long:') ? localize('above the barrier') : localize('below the barrier'),\n                }}\n            />\n        </div>\n    ));\n\n    const barriers_header_mobile = (\n        <div className='trade-container__barriers-table__header-wrapper'>\n            <div>{localize('Barriers')}</div>\n            <Popover\n                alignment='bottom'\n                icon='info'\n                zIndex='9999'\n                message={header_tooltip_text}\n                is_open={is_mobile_tooltip_visible}\n                onClick={toggleMobileTooltip}\n            />\n        </div>\n    );\n\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                <div className='mobile-widget' onClick={toggleBarriersTable}>\n                    <Text size='xs' color='prominent' align='center'>\n                        {localize('Spot')}\n                    </Text>\n                    <Text size='xs' color='prominent' align='center' weight='bold'>\n                        {barrier_1}\n                    </Text>\n                    <Text size='xs' color='less-prominent' align='center'>\n                        {localize('Barrier')}\n                    </Text>\n                </div>\n                <MobileDialog\n                    title={barriers_header_mobile}\n                    onClose={toggleBarriersTable}\n                    portal_element_id='modal_root'\n                    wrapper_classname='contracts-modal-list'\n                    visible={is_barriers_table_expanded}\n                    header_classname='trade-container__barriers-table__header'\n                >\n                    <BarriersList\n                        className='trade-container__barriers-table'\n                        header={localize('Barriers')}\n                        barriers_list={barrier_choices}\n                        selected_item={selected_barrier}\n                        show_table={is_barriers_table_expanded}\n                        subheader={localize('Distance to current spot')}\n                        onClick={onBarrierClick}\n                        onClickCross={toggleBarriersTable}\n                        onHover={setHoveredBarrier}\n                    />\n                </MobileDialog>\n            </MobileWrapper>\n            <DesktopWrapper>\n                <Fieldset\n                    className='trade-container__fieldset trade-container__barriers'\n                    header={localize('Barrier')}\n                    header_tooltip={header_tooltip_text}\n                >\n                    <div onClick={toggleBarriersTable} className='trade-container__barriers__wrapper'>\n                        <Text size='xs' className='trade-container__barriers-spot'>\n                            {localize('Spot')}\n                        </Text>\n                        <Text size='xs' className='trade-container__barriers-value' data-testid='current_barrier'>\n                            {barrier_1}\n                            <Icon icon='IcChevronLeft' className='trade-container__barriers-value--arrow-right' />\n                        </Text>\n                    </div>\n                </Fieldset>\n                {is_barriers_table_expanded && (\n                    <BarriersList\n                        className='trade-container__barriers-table'\n                        header={localize('Barriers')}\n                        barriers_list={barrier_choices}\n                        selected_item={selected_barrier}\n                        show_table={is_barriers_table_expanded}\n                        subheader={localize('Distance to current spot')}\n                        onClick={onBarrierClick}\n                        onClickCross={toggleBarriersTable}\n                        onHover={setHoveredBarrier}\n                    />\n                )}\n            </DesktopWrapper>\n        </React.Fragment>\n    );\n});\n\nexport default BarrierSelector;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DesktopWrapper, Icon, InputField, MobileWrapper, Modal, Text, usePrevious } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { ValueMovement } from '../Purchase/contract-info';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { localize } from '@deriv/translations';\nimport LabeledQuantityInputMobile from '../LabeledQuantityInputMobile';\n\nconst Barrier = observer(({ is_minimized, is_absolute_only }) => {\n    const { ui } = useStore();\n    const { current_focus, setCurrentFocus } = ui;\n    const {\n        barrier_1,\n        barrier_2,\n        barrier_count,\n        barrier_pipsize,\n        duration_unit,\n        onChange,\n        validation_errors,\n        proposal_info,\n        trade_types,\n    } = useTraderStore();\n    const [show_modal, setShowModal] = React.useState(false);\n    const type_with_current_spot = Object.keys(trade_types).find(type => proposal_info?.[type]?.spot);\n    const contract_info = proposal_info?.[type_with_current_spot];\n    const current_spot = contract_info?.spot || '';\n    const current_barrier_price = contract_info?.barrier || '';\n    const previous_spot = usePrevious(current_spot);\n    const has_spot_increased = current_spot > previous_spot;\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n    const has_error_or_not_loaded = contract_info?.has_error || !contract_info?.id;\n\n    if (is_minimized) {\n        return barrier_count !== 2 ? (\n            <div className='fieldset-minimized fieldset-minimized__barrier1'>{barrier_1}</div>\n        ) : (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>{barrier_1}</div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>{barrier_2}</div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    const is_day_duration = duration_unit === 'd';\n    // TODO: Some contracts yet to be implemented in app.deriv.com allow only absolute barrier, hence the prop\n    const is_absolute_barrier = is_day_duration || is_absolute_only;\n\n    const format = value => {\n        const float_value = parseFloat(value);\n        let final_value;\n        if (Math.sign(float_value) === -1) {\n            final_value = float_value.toFixed(barrier_pipsize).toString();\n        } else {\n            final_value = `+${float_value.toFixed(barrier_pipsize)}`;\n        }\n        return final_value;\n    };\n\n    const onClick = () => {\n        setShowModal(!show_modal);\n    };\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <Fieldset\n                    className='trade-container__fieldset trade-container__barriers'\n                    header={barrier_title}\n                    is_center\n                >\n                    <div>\n                        <InputField\n                            id='dt_barrier_1_input'\n                            type='number'\n                            name='barrier_1'\n                            value={barrier_1}\n                            className={`trade-container__barriers-${input_class}`}\n                            classNameInput={classNames(\n                                'trade-container__input',\n                                'trade-container__barriers-input',\n                                `trade-container__barriers-${input_class}-input`\n                            )}\n                            current_focus={current_focus}\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_1 || []}\n                            is_float\n                            is_signed\n                            setCurrentFocus={setCurrentFocus}\n                        />\n\n                        {barrier_count === 2 && (\n                            <React.Fragment>\n                                <InputField\n                                    id='dt_barrier_2_input'\n                                    type='number'\n                                    name='barrier_2'\n                                    value={barrier_2}\n                                    className='multiple'\n                                    classNameInput='trade-container__input'\n                                    current_focus={current_focus}\n                                    onChange={onChange}\n                                    error_messages={validation_errors.barrier_2}\n                                    is_float\n                                    is_signed\n                                    setCurrentFocus={setCurrentFocus}\n                                />\n                                <Icon icon='IcArrowUp' className='trade-container__barriers--up' />\n                                <Icon icon='IcArrowDown' className='trade-container__barriers--down' />\n                            </React.Fragment>\n                        )}\n                    </div>\n                </Fieldset>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <Modal\n                    id='dt_input_barrier_mobile'\n                    className='barrier'\n                    is_open={show_modal}\n                    should_header_stick_body\n                    toggleModal={onClick}\n                    height='auto'\n                    width='calc(100vw - 32px)'\n                    title={localize('Barrier')}\n                >\n                    <div className='barrier__modal-container'>\n                        <Text className='barrier__modal-text' as='span' color='less-prominent' size='xs'>\n                            {localize('Current Price')}\n                        </Text>\n                        {current_spot && (\n                            <ValueMovement\n                                has_error_or_not_loaded={has_error_or_not_loaded}\n                                value={current_spot}\n                                has_increased={has_spot_increased}\n                                show_currency={false}\n                            />\n                        )}\n                    </div>\n                    <LabeledQuantityInputMobile\n                        id='dt_barrier_input'\n                        input_label={localize('Barrier')}\n                        type='number'\n                        name={barrier_count === 1 ? 'barrier_1' : 'barrier_2'}\n                        wrapper_classname='barrier__modal-input'\n                        value={barrier_count === 1 ? barrier_1 : barrier_2}\n                        className={`barrier__fields-${input_class}`}\n                        classNameInput={classNames(\n                            'barrier__fields-input',\n                            'barrier__fields-barriers-input',\n                            `barrier__fields-barriers-${input_class}-input`\n                        )}\n                        current_focus={current_focus}\n                        onChange={onChange}\n                        error_messages={\n                            (barrier_count === 1 ? validation_errors.barrier_1 : validation_errors.barrier_2) || []\n                        }\n                        error_message_alignment='top'\n                        is_float\n                        is_signed\n                        setCurrentFocus={setCurrentFocus}\n                    />\n                    <Text className='barrier__modal-price' as='div' color='less-prominent' size='xs'>\n                        {localize('Barrier Price:')} {current_barrier_price}\n                    </Text>\n                </Modal>\n                <LabeledQuantityInputMobile\n                    input_label={barrier_count === 2 ? localize('Barrier 1') : localize('Barrier')}\n                    id='dt_barrier_1_input'\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    is_incrementable={!is_absolute_barrier}\n                    is_incrementable_on_long_press={!is_absolute_barrier}\n                    is_negative_disabled={is_absolute_barrier}\n                    className={`barrier__fields-${input_class}`}\n                    classNameInput={classNames(\n                        'barrier__fields-input',\n                        'barrier__fields-barriers-input',\n                        `barrier__fields-barriers-${input_class}-input`\n                    )}\n                    format={format}\n                    onChange={onChange}\n                    onClick={onClick}\n                    is_float\n                    is_signed\n                    setCurrentFocus={setCurrentFocus}\n                    is_read_only\n                />\n                {barrier_count === 2 && (\n                    <LabeledQuantityInputMobile\n                        input_label={localize('Barrier 2')}\n                        id='dt_barrier_2_input'\n                        type='number'\n                        name='barrier_2'\n                        value={barrier_2}\n                        is_incrementable={!is_absolute_barrier}\n                        is_incrementable_on_long_press={!is_absolute_barrier}\n                        is_negative_disabled={is_absolute_barrier}\n                        className={`barrier__fields-${input_class}`}\n                        classNameInput={classNames(\n                            'barrier__fields-input',\n                            'barrier__fields-barriers-input',\n                            `barrier__fields-barriers-${input_class}-input`\n                        )}\n                        format={format}\n                        onChange={onChange}\n                        onClick={onClick}\n                        is_float\n                        is_signed\n                        setCurrentFocus={setCurrentFocus}\n                        is_read_only\n                    />\n                )}\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nBarrier.propTypes = {\n    is_absolute_only: PropTypes.bool,\n    is_minimized: PropTypes.bool,\n};\n\nexport default Barrier;\n","import React from 'react';\nimport { isMobile } from '@deriv/shared';\nimport { Text, ThemedScrollbars } from '@deriv/components';\nimport classNames from 'classnames';\n\nexport type TBarriersListBody = {\n    barriers_list: string[];\n    className?: string;\n    onClick: (barrier: string) => void;\n    onHover?: (barrier: string) => void;\n    selected_item: string;\n    subheader?: string;\n};\n\nconst BarriersListBody = ({\n    barriers_list,\n    className,\n    onClick,\n    onHover,\n    selected_item,\n    subheader,\n}: TBarriersListBody) => {\n    const onMouseEnter = (barrier: string) => {\n        if (selected_item !== barrier && typeof onHover === 'function') {\n            onHover(barrier);\n        }\n    };\n    return (\n        <React.Fragment>\n            {subheader && (\n                <Text\n                    size={isMobile() ? 's' : 'xxs'}\n                    color='disabled'\n                    line_height='l'\n                    as='p'\n                    className={`${className}__text`}\n                >\n                    {subheader}\n                </Text>\n            )}\n            <ThemedScrollbars autohide={false}>\n                <ul className={`${className}__list`}>\n                    {barriers_list.map(barrier => (\n                        <Text\n                            color='prominent'\n                            line_height={isMobile() ? 'xl' : 'l'}\n                            size={isMobile() ? 'xs' : 'xxs'}\n                            as='li'\n                            key={barrier}\n                            id={barrier}\n                            data-testid={barrier}\n                            className={classNames(`${className}__item`, {\n                                [`${className}__item--selected`]: selected_item === barrier,\n                            })}\n                            onClick={() => onClick(barrier)}\n                            onMouseEnter={() => onMouseEnter(barrier)}\n                            onMouseLeave={() => typeof onHover === 'function' && onHover('')}\n                        >\n                            {barrier}\n                        </Text>\n                    ))}\n                </ul>\n            </ThemedScrollbars>\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(BarriersListBody);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { DesktopWrapper, MobileWrapper, Text, Icon } from '@deriv/components';\nimport { CSSTransition } from 'react-transition-group';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport BarriersListBody, { TBarriersListBody } from './barriers-list-body';\n\ntype TBarriersList = TBarriersListBody & {\n    header: string;\n    onClickCross: () => void;\n    show_table: boolean;\n};\n\nconst BarriersList = ({ className, header, onClickCross, show_table, ...props }: TBarriersList) => (\n    <React.Fragment>\n        <DesktopWrapper>\n            <CSSTransition\n                appear\n                in={show_table}\n                timeout={250}\n                classNames={{\n                    appear: `${className}--enter`,\n                    enter: `${className}--enter`,\n                    enterDone: `${className}--enter-done`,\n                    exit: `${className}--exit`,\n                }}\n                unmountOnExit\n            >\n                <Fieldset className={classNames('trade-container__fieldset', className)}>\n                    <div className={`${className}__header`}>\n                        <Text color='prominent' weight='bold' size='xs'>\n                            {header}\n                        </Text>\n                        <div className={`${className}__icon-close`} onClick={onClickCross}>\n                            <Icon icon='IcCross' />\n                        </div>\n                    </div>\n                    <BarriersListBody className={className} {...props} />\n                </Fieldset>\n            </CSSTransition>\n        </DesktopWrapper>\n        <MobileWrapper>\n            <BarriersListBody className={className} {...props} />\n        </MobileWrapper>\n    </React.Fragment>\n);\n\nexport default React.memo(BarriersList);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isDesktop } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst LastDigit = observer(({ is_minimized }) => {\n    const { onChange, last_digit } = useTraderStore();\n    if (is_minimized) {\n        return <div className='fieldset-minimized'>{`${localize('Last Digit')}: ${last_digit}`}</div>;\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={isDesktop() ? localize('Last Digit Prediction') : null}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n});\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    onChange: PropTypes.func,\n};\n\nexport default LastDigit;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { isMobile, isVanillaContract } from '@deriv/shared';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TMinMaxStakeInfo = {\n    className?: string;\n};\ntype TStakeBoundary = { [key: string]: { min_stake: number; max_stake: number } };\n\nconst MinMaxStakeInfo = observer(({ className }: TMinMaxStakeInfo) => {\n    const { contract_type, currency, stake_boundary, vanilla_trade_type } = useTraderStore();\n    // remove assertion and local TStakeBoundary type after TS migration for trade package is complete\n    const { min_stake, max_stake } =\n        (isVanillaContract(contract_type)\n            ? (stake_boundary as TStakeBoundary)[vanilla_trade_type]\n            : (stake_boundary as TStakeBoundary)[contract_type.toUpperCase()]) || {};\n\n    return (\n        <section className={classNames('trade-container__stake-field', className)}>\n            {!isNaN(min_stake) &&\n                !isNaN(max_stake) &&\n                ['Min', 'Max'].map(text => (\n                    <Text\n                        key={text}\n                        as='p'\n                        line_height='s'\n                        size={isMobile() ? 'xxs' : 'xxxs'}\n                        className={`trade-container__stake-field--${text.toLowerCase()}`}\n                    >\n                        <Localize\n                            i18n_default_text='{{text}}. stake<0/>'\n                            values={{ text }}\n                            components={[\n                                <Money\n                                    key={0}\n                                    amount={text === 'Min' ? min_stake : max_stake}\n                                    currency={currency}\n                                    show_currency\n                                />,\n                            ]}\n                        />\n                    </Text>\n                ))}\n        </section>\n    );\n});\n\nexport default MinMaxStakeInfo;\n","import React from 'react';\nimport { Localize, localize } from '@deriv/translations';\nimport { Div100vhContainer, Modal, Popover, RadioGroup } from '@deriv/components';\nimport classNames from 'classnames';\n\nconst StrikeParamModal = ({ is_open, toggleModal, strike, onChange, name, strike_price_list, vanilla_trade_type }) => (\n    <Modal\n        className='trade-params'\n        is_open={is_open}\n        should_header_stick_body={false}\n        is_title_centered\n        toggleModal={toggleModal}\n        height='auto'\n        width='calc(100vw - 32px)'\n        title={localize('Strike')}\n    >\n        <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n            <div className='trade-params__multiplier-ic-info-wrapper'>\n                <Popover\n                    alignment='bottom'\n                    icon='info'\n                    id='dt_multiplier-stake__tooltip'\n                    zIndex={9999}\n                    is_bubble_hover_enabled\n                    message={\n                        <Localize\n                            i18n_default_text='If you buy a \"<0>{{trade_type}}</0>\" option, you receive a payout at expiry if the final price is {{payout_status}} the strike price. Otherwise, your “<0>{{trade_type}}</0>” option will expire worthless.'\n                            components={[<strong key={0} />]}\n                            values={{\n                                trade_type:\n                                    vanilla_trade_type === 'VANILLALONGCALL' ? localize('Call') : localize('Put'),\n                                payout_status:\n                                    vanilla_trade_type === 'VANILLALONGCALL' ? localize('above') : localize('below'),\n                            }}\n                        />\n                    }\n                    classNameWrapper='trade-params--modal-wrapper'\n                    classNameBubble='trade-params--modal-wrapper__content'\n                />\n            </div>\n            <div className={classNames('trade-params__amount-keypad', 'trade-params--mobile-strike')}>\n                <RadioGroup name={name} className='trade-params__amount--mobile' onToggle={onChange} selected={strike}>\n                    {strike_price_list.map(item => (\n                        <RadioGroup.Item key={item.key} value={String(item.value)} label={item.value} />\n                    ))}\n                </RadioGroup>\n            </div>\n        </Div100vhContainer>\n    </Modal>\n);\n\nexport default StrikeParamModal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport BarriersList from './barriers-list';\nimport { DesktopWrapper, InputField, MobileWrapper, Dropdown, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { toMoment } from '@deriv/shared';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport StrikeParamModal from 'Modules/Trading/Containers/strike-param-modal';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst Strike = observer(() => {\n    const { ui, common } = useStore();\n    const {\n        barrier_1,\n        onChange,\n        validation_errors,\n        barrier_choices: strike_price_choices,\n        expiry_type,\n        expiry_date,\n        vanilla_trade_type,\n    } = useTraderStore();\n    const { current_focus, setCurrentFocus, advanced_duration_unit } = ui;\n    const { server_time } = common;\n\n    const [is_open, setIsOpen] = React.useState(false);\n    const [should_open_dropdown, setShouldOpenDropdown] = React.useState(false);\n    const [selected_value, setSelectedValue] = React.useState(barrier_1);\n\n    React.useEffect(() => {\n        setSelectedValue(barrier_1);\n    }, [barrier_1]);\n\n    const toggleWidget = () => setIsOpen(!is_open);\n\n    const is_24_hours_contract = expiry_date ? toMoment(expiry_date).isSame(toMoment(server_time), 'day') : false;\n\n    const is_relative_strike_applicable =\n        expiry_type === 'endtime' ? is_24_hours_contract : advanced_duration_unit !== 'd';\n\n    const strike_price_list = strike_price_choices.map(strike_price => ({\n        text: strike_price,\n        value: strike_price,\n    }));\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <Fieldset\n                    className='trade-container__fieldset trade-container__barriers'\n                    header={localize('Strike price')}\n                    header_tooltip={\n                        <Localize\n                            i18n_default_text='If you buy a \"<0>{{trade_type}}</0>\" option, you receive a payout at expiry if the final price is {{payout_status}} the strike price. Otherwise, your “<0>{{trade_type}}</0>” option will expire worthless.'\n                            components={[<strong key={0} />]}\n                            values={{\n                                trade_type:\n                                    vanilla_trade_type === 'VANILLALONGCALL' ? localize('Call') : localize('Put'),\n                                payout_status:\n                                    vanilla_trade_type === 'VANILLALONGCALL' ? localize('above') : localize('below'),\n                            }}\n                        />\n                    }\n                >\n                    {!is_relative_strike_applicable ? (\n                        <InputField\n                            type='number'\n                            name='barrier_1'\n                            value={selected_value}\n                            className='trade-container__barriers-single'\n                            classNameInput={classNames(\n                                'trade-container__input',\n                                'trade-container__barriers-input',\n                                'trade-container__barriers-single-input'\n                            )}\n                            current_focus={current_focus}\n                            error_messages={validation_errors?.barrier_1 || []}\n                            is_float\n                            is_signed\n                            is_read_only\n                            setCurrentFocus={setCurrentFocus}\n                            onClick={() => setShouldOpenDropdown(true)}\n                        />\n                    ) : (\n                        <div className='trade-container__strike-field'>\n                            <Text size='s' className='strike-field--text'>\n                                {localize('Spot')}\n                            </Text>\n                            <Dropdown\n                                classNameDisplay='dc-dropdown__display--duration'\n                                disabled={false}\n                                id='strike'\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={strike_price_list}\n                                name='barrier_1'\n                                no_border={true}\n                                onChange={onChange}\n                                value={barrier_1}\n                            />\n                        </div>\n                    )}\n                </Fieldset>\n                {should_open_dropdown && (\n                    <BarriersList\n                        className='trade-container__barriers-table'\n                        header={localize('Strike Prices')}\n                        barriers_list={strike_price_choices}\n                        selected_item={selected_value}\n                        show_table={should_open_dropdown}\n                        onClick={strike => {\n                            setSelectedValue(strike);\n                            setShouldOpenDropdown(false);\n                            onChange({ target: { name: 'barrier_1', value: strike } });\n                        }}\n                        onClickCross={() => setShouldOpenDropdown(false)}\n                    />\n                )}\n            </DesktopWrapper>\n            <MobileWrapper>\n                <div className='mobile-widget__wrapper'>\n                    <div className='strike-widget' onClick={toggleWidget}>\n                        <div className='mobile-widget__spot'>{<Text size='xs'>{localize('Spot')}</Text>}</div>\n                        <div className='mobile-widget__amount'>{barrier_1}</div>\n                        <div className='mobile-widget__type'>{localize('Strike price')}</div>\n                    </div>\n                    <StrikeParamModal\n                        is_open={is_open}\n                        toggleModal={toggleWidget}\n                        strike={barrier_1}\n                        onChange={onChange}\n                        name='barrier_1'\n                        strike_price_list={strike_price_list}\n                        vanilla_trade_type={vanilla_trade_type}\n                    />\n                </div>\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nexport default Strike;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ButtonToggle } from '@deriv/components';\nimport { isTurbosContract, isVanillaContract, TURBOS } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TTradeTypeTabs = {\n    className?: string;\n};\n\nconst TradeTypeTabs = observer(({ className }: TTradeTypeTabs) => {\n    const { onChange, contract_type, vanilla_trade_type } = useTraderStore();\n    const is_turbos = isTurbosContract(contract_type);\n    const is_vanilla = isVanillaContract(contract_type);\n    const tab_list = [\n        { text: localize('Long'), value: TURBOS.LONG, is_displayed: is_turbos },\n        { text: localize('Short'), value: TURBOS.SHORT, is_displayed: is_turbos },\n        { text: localize('Call'), value: 'VANILLALONGCALL', is_displayed: is_vanilla },\n        { text: localize('Put'), value: 'VANILLALONGPUT', is_displayed: is_vanilla },\n    ];\n\n    if (!is_turbos && !is_vanilla) return null;\n\n    return (\n        <div className={classNames('trade-container__trade', 'trade-container__trade-type-tabs', className)}>\n            <ButtonToggle\n                id='dt_advanced_duration_toggle'\n                buttons_arr={tab_list.filter(({ is_displayed }) => is_displayed)}\n                name={is_turbos ? 'contract_type' : 'vanilla_trade_type'}\n                className='trade-container__trade-type-tabs--button'\n                is_animated\n                onChange={onChange}\n                value={\n                    tab_list.find(({ value }) => (is_turbos ? value === contract_type : value === vanilla_trade_type))\n                        ?.value ?? ''\n                }\n            />\n        </div>\n    );\n});\n\nexport default TradeTypeTabs;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst AccumulatorTradeDescription = ({ onClick }: { onClick: () => void }) => {\n    return (\n        <React.Fragment>\n            <Text as='p'>\n                <Localize\n                    i18n_default_text={\n                        'Accumulators allow you to express a view on the range of movement of an index and grow your stake exponentially at a fixed <0>growth rate</0>.'\n                    }\n                    components={[<span className='contract-type-info__content-definition' onClick={onClick} key={0} />]}\n                />\n            </Text>\n            <Text as='p'>\n                <Localize\n                    i18n_default_text={'Your <0>payout</0> is the sum of your inital stake and profit.'}\n                    components={[<span className='contract-type-info__content-definition' onClick={onClick} key={0} />]}\n                />\n            </Text>\n            <Text as='p'>\n                <Localize\n                    i18n_default_text={\n                        'Your stake will continue to grow as long as the current spot price remains within a specified <0>range</0> from the <0>previous spot price</0>. Otherwise, you lose your stake and the trade is terminated.'\n                    }\n                    components={[<span className='contract-type-info__content-definition' onClick={onClick} key={0} />]}\n                />\n            </Text>\n            <Text as='p'>\n                <Localize\n                    i18n_default_text={'You can close your trade anytime. However, be aware of <0>slippage risk<0/>.'}\n                    components={[<span className='contract-type-info__content-definition' onClick={onClick} key={0} />]}\n                />\n            </Text>\n        </React.Fragment>\n    );\n};\n\nexport default AccumulatorTradeDescription;\n","import React from 'react';\nimport { Localize, localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nexport const TurbosTradeDescription = () => {\n    const content = [\n        {\n            type: 'paragraph',\n            text: localize(\n                'This product allows you to express a strong bullish or bearish view on an underlying asset.'\n            ),\n        },\n        { type: 'heading', text: localize('For Long:') },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='If you think the market price will rise continuously for a specific period, choose <0>Long</0>. You will get a payout at the expiry time if the market price doesn’t touch or cross below the barrier. Your payout will grow proportionally to the distance between the market price and the barrier if the barrier is not breached. You will start making a profit when the payout is higher than your stake. If the market price ever crosses the barrier, there won’t be a payout.'\n                    components={[<Text key={0} as='span' weight='bold' size='xs' />]}\n                />\n            ),\n        },\n        { type: 'heading', text: localize('For Short:') },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize\n                    i18n_default_text='If you think the market price will drop continuously for a specific period, choose <0>Short</0>. You will get a payout at the expiry time if the market price doesn’t touch or cross above the barrier. Your payout will grow proportionally to the distance between the market price and the barrier if the barrier is not breached. You will start making a profit when the payout is higher than your stake. If the market price ever crosses the barrier, there won’t be a payout.'\n                    components={[<Text key={0} as='span' weight='bold' size='xs' />]}\n                />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: localize('You can determine the expiry of your contract by setting the duration or end time.'),\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            {content.map(({ type, text }, index) =>\n                type === 'heading' ? (\n                    <Text as='h6' key={index.toString() + text} weight='bold' size='xs'>\n                        {text}\n                    </Text>\n                ) : (\n                    <Text as='p' key={index.toString() + text}>\n                        {text}\n                    </Text>\n                )\n            )}\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport AccumulatorTradeDescription from './accumulator-trade-description';\nimport { TurbosTradeDescription } from './turbos-trade-description';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n// TODO: refactor the rest of descriptions to use them as components like AccumulatorTradeDescription\nconst TradeCategories = ({ category, onClick }: { category?: string; onClick: () => void }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'accumulator':\n                TradeTypeTemplate = <AccumulatorTradeDescription onClick={onClick} />;\n                break;\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Rise\", you win the payout if the exit spot is strictly higher than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Fall\", you win the payout if the exit spot is strictly lower than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Rise\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Fall\".'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Rise\", you win the payout if the exit spot is strictly higher than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Fall\", you win the payout if the exit spot is strictly lower than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Rise\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Fall\".'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\"If the exit spot is equal to the barrier, you don't win the payout.\")}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                \"If the exit spot is equal to either the Low barrier or the High barrier, you don't win the payout.\"\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Touch\", you win the payout if the market touches the barrier at any time during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"No Touch\", you win the payout if the market never touches the barrier at any time during the contract period.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'Asian options settle by comparing the last tick with the average spot over the period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                \"If the last tick is equal to the average of the ticks, you don't win the payout.\"\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'run_high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Only Ups\", you win the payout if consecutive ticks rise successively after the entry spot. No payout if any tick falls or is equal to any of the previous ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Only Downs\", you win the payout if consecutive ticks fall successively after the entry spot. No payout if any tick rises or is equal to any of the previous ticks.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'reset':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Reset-Up”, you win the payout if the exit spot is strictly higher than either the entry spot or the spot at reset time.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Reset-Down”, you win the payout if the exit spot is strictly lower than either the entry spot or the spot at reset time.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                \"If the exit spot is equal to the barrier or the new barrier (if a reset occurs), you don't win the payout.\"\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'callputspread':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <h2>{localize('Spread Up')}</h2>\n                        <Text as='p'>\n                            {localize(\n                                'Win maximum payout if the exit spot is higher than or equal to the upper barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'Win up to maximum payout if exit spot is between lower and upper barrier, in proportion to the difference between exit spot and lower barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('No payout if exit spot is below or equal to the lower barrier.')}</Text>\n                        <h2>{localize('Spread Down')}</h2>\n                        <Text as='p'>\n                            {localize(\n                                'Win maximum payout if the exit spot is lower than or equal to the lower barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'Win up to maximum payout if exit spot is between lower and upper barrier, in proportion to the difference between upper barrier and exit spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('No payout if exit spot is above or equal to the upper barrier.')}</Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'tick_high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"High Tick\", you win the payout if the selected tick is the highest among the next five ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Low Tick\", you win the payout if the selected tick is the lowest among the next five ticks.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'By purchasing the \"High-to-Low\" contract, you\\'ll win the multiplier times the difference between the high and low over the duration of the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The high is the highest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The low is the lowest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_put':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'By purchasing the \"High-to-Close\" contract, you\\'ll win the multiplier times the difference between the high and close over the duration of the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The high is the highest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The low is the lowest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'By purchasing the \"Close-to-Low\" contract, you\\'ll win the multiplier times the difference between the close and low over the duration of the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The high is the highest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The low is the lowest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'multiplier':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'Predict the market direction and select either “Up” or “Down” to open a position. We will charge a commission when you open a position.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select “Up”, you will earn a profit by closing your position when the market price is higher than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select “Down”, you will earn a profit by closing your position when the market price is lower than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'Your profit is the percentage change in market price times your stake and the multiplier of your choice.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The stop-out level on the chart indicates the price at which your potential loss equals your entire stake. When the market price reaches this level, your position will be closed automatically. This ensures that your loss does not exceed the amount you paid to purchase the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('These are optional parameters for each position that you open:')}</Text>\n                        <ul>\n                            <li>\n                                {localize(\n                                    'If you select “Take profit” and specify an amount that you’d like to earn, your position will be closed automatically when your profit is more than or equals to this amount. Your profit may be more than the amount you entered depending on the market price at closing.'\n                                )}\n                            </li>\n                            <li>\n                                {localize(\n                                    'If you select “Stop loss” and specify an amount to limit your loss, your position will be closed automatically when your loss is more than or equals to this amount. Your loss may be more than the amount you entered depending on the market price at closing.'\n                                )}\n                            </li>\n                            <li>\n                                {localize(\n                                    'If you select “Deal cancellation”, you’ll be able to cancel your trade within a chosen time frame should the market move against your favour. We’ll charge a small fee for this, but we’ll return your stake amount without profit or loss. If the stop-out amount is reached before the deal cancellation expires, your position will be cancelled automatically and we’ll return your stake amount without profit or loss.'\n                                )}\n                            </li>\n                            <Text as='p'>{localize('While “Deal cancellation” is active:')}</Text>\n                            <ul>\n                                <li>\n                                    {localize(\n                                        '“Stop loss” is deactivated and will only be available when “Deal cancellation” expires.'\n                                    )}\n                                </li>\n                                <li>\n                                    {localize(\n                                        '“Take profit” cannot be updated. You may update it only when “Deal cancellation” expires.'\n                                    )}\n                                </li>\n                            </ul>\n                        </ul>\n                        <Text as='p'>\n                            {localize(\n                                'The entry spot is the market price when your contract is processed by our servers.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('The exit spot is the market price when the contract is closed.')}</Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'turbosshort':\n            case 'turboslong':\n                TradeTypeTemplate = <TurbosTradeDescription />;\n                break;\n            case 'vanilla':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'Vanilla options allow you to predict an upward (bullish) or downward (bearish) direction of the underlying asset by purchasing a \"Call\" or a \"Put\".'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='If you select <0>\"Call\"</0>, you’ll earn a <1>payout</1> if the <1>final price</1> is above the <1>strike price</1> at <1>expiry</1>. Otherwise, you won’t receive a payout.'\n                                components={[\n                                    <strong key={0} />,\n                                    <span\n                                        className='contract-type-info__content-definition'\n                                        onClick={onClick}\n                                        key={1}\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='If you select <0>\"Put\"</0>, you’ll earn a payout if the final price is below the strike price at expiry. Otherwise, you won’t receive a payout.'\n                                components={[<strong key={0} />]}\n                            />\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='Your payout is equal to the <0>payout per point</0> multiplied by the difference between the final price and the strike price. You will only earn a profit if your payout is higher than your initial stake.'\n                                components={[\n                                    <span\n                                        className='contract-type-info__content-definition'\n                                        onClick={onClick}\n                                        key={0}\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='You may sell the contract up until 60 seconds before expiry. If you do, we’ll pay you the <0>contract value</0>.'\n                                components={[\n                                    <span\n                                        className='contract-type-info__content-definition'\n                                        onClick={onClick}\n                                        key={0}\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = <Text as='p'>{localize('Description not found.')}</Text>;\n                break;\n        }\n    }\n    return <>{TradeTypeTemplate}</>;\n};\n\nexport default TradeCategories;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M177.83 90.67v8.43h-33.74v-8.43h33.74zm33.74-25.3v8.43h-67.48v-8.44h67.48zm0-25.3v8.43h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M183.8 73.8l19.33 19.36V86.4a8.4 8.4 0 018.4-8.4h.04V99.1a8.43 8.43 0 01-8.44 8.43h-21.08v-.04a8.4 8.4 0 018.37-8.39h6.75l-25.3-25.3h11.92zm-25.31-25.3l12.65 12.65h-11.92L146.57 48.5h11.92z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-25.3v8.43H60.09V73.8h67.48zM93.83 48.5v8.43H60.09V48.5h33.74z\" /><path fill=\"#FF444F\" d=\"M87.14 86.45L74.5 99.1H62.56l12.65-12.65h11.93zm32-46.39a8.43 8.43 0 018.43 8.44v21.08h-.05a8.4 8.4 0 01-8.39-8.37v-6.75L99.8 73.8H87.9l25.3-25.3h-6.75a8.4 8.4 0 01-8.4-8.4v-.04h21.1z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M169.74 99.1v8.44h-67.48V99.1h67.48zm-4.22-59.04v54.82h-8.44V40.06h8.44z\" /><path fill=\"#FF444F\" d=\"M120.91 86.45l-4.2 4.22-14.45 4.21v-8.43h18.65zm19.3-33.74a8.43 8.43 0 018.44 8.44l-.04 21.08a8.43 8.43 0 01-8.4-8.43V67.1l-16.86 16.9V72.05l10.9-10.9h-6.68a8.46 8.46 0 01-8.44-8.44h21.09z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 99.1v8.44h-67.48V99.1h67.48zm-33.74-25.3v8.43h-33.74V73.8h33.74zm33.74 0v8.43h-13.02L207 73.8h4.58z\" /><path fill=\"#FF444F\" d=\"M203.13 55.18L189.25 41.3l-.03.03a8.4 8.4 0 000 11.86l3.73 3.74H169.4v8.43h23.55l-3.73 3.74a8.4 8.4 0 000 11.87l.03.03 13.88-13.89a8.43 8.43 0 000-11.93z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-59.04v8.44H60.09v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M125.1 67.84l-13.9-13.9-.02.04a8.38 8.38 0 000 11.87l3.73 3.73H85.4v8.44h29.52l-3.73 3.73a8.38 8.38 0 000 11.87l.03.03 13.89-13.89a8.43 8.43 0 000-11.92z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_91454)\"><path d=\"M109 89v21H88V89h21zm35-35v21h-21V54h21z\" fill=\"#85ACB0\" /><path d=\"M144 89v21h-21V89h21zm-35-35v21H88V54h21z\" fill=\"#FF444F\" /></g><path d=\"M196.25 85.06l12.25 18.38H184l12.25-18.38zm31.5 0L240 103.44h-24.5l12.25-18.38z\" fill=\"#85ACB0\" /><path d=\"M199.75 78.94L212 60.56l12.25 18.38h-24.5z\" fill=\"#FF444F\" /><defs><clipPath id=\"prefix__clip0_8025_91454\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><path d=\"M88 89h56v-7H88v7z\" fill=\"#85ACB0\" /><path d=\"M98.5 92.5v5.55l5.55-5.55h9.9l-14 14H91.5v-14h7zm38.5-35a7 7 0 017 7v14.01h-6.04a6.91 6.91 0 01-.96-3.46v-5.6L124.46 82h-9.9l17.5-17.5h-5.6a6.96 6.96 0 01-6.96-6.96v-.04H137z\" fill=\"#FF444F\" /><path d=\"M184 82h56v-7h-56v7z\" fill=\"#85ACB0\" /><path d=\"M220.45 82L233 94.56v-5.6a6.91 6.91 0 01.95-3.46H240v14a7 7 0 01-7 7h-17.5v-.04a6.96 6.96 0 016.95-6.96h5.6L210.55 82h9.9zm-24.5-24.5l14 14h-9.9l-5.55-5.55v5.55h-7v-14h8.45z\" fill=\"#FF444F\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M165.52 52.71v54.83h-8.44V52.7h8.44zm4.22-12.65v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M123.35 63.59l16.87 16.9v-6.7a8.43 8.43 0 018.39-8.43l.04 21.09a8.43 8.43 0 01-8.43 8.43h-21.09a8.46 8.46 0 018.44-8.43h6.68l-10.9-10.9V63.58zM102.26 52.7l14.44 4.22 4.21 4.22h-18.65V52.7z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M169.74 99.1v8.44h-67.48V99.1h67.48zm-4.22-46.39v42.17h-8.44V52.71h8.44zm4.22-12.65v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M120.91 86.45l-4.2 4.22-14.45 4.21v-8.43h18.65zm19.3-33.74a8.43 8.43 0 018.44 8.44l-.04 21.08a8.43 8.43 0 01-8.4-8.43V67.1l-16.86 16.9V72.05l10.9-10.9h-6.68a8.46 8.46 0 01-8.44-8.44h21.09z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_92748)\"><path d=\"M96.28 62.2l14.84 14.85a7 7 0 010 9.9L96.27 101.8l-.02-.02a6.96 6.96 0 010-9.85l6.42-6.43-18.67.04V78.5h18.67l-6.42-6.42a6.96 6.96 0 010-9.86l.03-.02zm31.45 0l.02.03a6.96 6.96 0 010 9.85l-6.42 6.42 18.67-.04v7.04h-18.67l6.42 6.42a6.96 6.96 0 010 9.85l-.02.03-12.23-12.23 2.62-2.62a7 7 0 000-9.9l-2.62-2.62 12.23-12.23z\" fill=\"#FF444F\" /><path d=\"M115.5 96v14h-7V96h7zm0-42v14h-7V54h7z\" fill=\"#85ACB0\" /></g><path d=\"M242.25 81.96V89h-18.67l6.42 6.42a6.96 6.96 0 010 9.86l-.02.02L216 91.32l7.87-7.87a6.9 6.9 0 001.08-1.45l17.3-.04zM202.02 55.2l14.85 14.85a7 7 0 010 9.9L202.02 94.8l-.02-.02a6.96 6.96 0 010-9.85l6.42-6.43-18.67.04V71.5h18.67L202 65.08a6.96 6.96 0 010-9.85l.02-.03zm27.96 10.5a6.98 6.98 0 012.07 4.95 6.96 6.96 0 01-1.64 4.48l-.41.45-4.2 4.2a7 7 0 00-1.54-5.8l-.4-.43-.86-.87 6.98-6.98z\" fill=\"#FF444F\" /><path d=\"M221.25 99.5V110h-7V99.5h7zm0-45.5v10.5h-7V54h7z\" fill=\"#85ACB0\" /><defs><clipPath id=\"prefix__clip0_8025_92748\"><path fill=\"var(--fill-normal)\" transform=\"translate(84 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_92038)\"><path d=\"M137 54h-17.5a7 7 0 007 7h5.6L88 104.75V110h5.25L137 65.95v5.55a7 7 0 007 7V61a7 7 0 00-7-7z\" fill=\"#FF444F\" /><path d=\"M124.75 85.5L144 104.75V110h-5.25L119.5 90.75l5.25-5.25zM93.25 54l19.25 19.25-5.25 5.25L88 59.25V54h5.25z\" fill=\"#85ACB0\" /></g><g clipPath=\"url(#prefix__clip1_8025_92038)\"><path d=\"M233 110h-17.5a7 7 0 017-7h5.6L184 59.25V54h5.25L233 98.05V92.5a7 7 0 017-7V103a7 7 0 01-7 7z\" fill=\"#FF444F\" /><path d=\"M203.25 85.5l5.25 5.25L189.25 110H184v-5.25l19.25-19.25zM240 54v5.25L220.75 78.5l-5.25-5.25L234.75 54H240z\" fill=\"#85ACB0\" /></g><defs><clipPath id=\"prefix__clip0_8025_92038\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_92038\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_92088)\"><path d=\"M107.04 99.5l-6.97 7H90.05l7-7h9.99zm29.96-42a7 7 0 017 7v21h-.04a6.96 6.96 0 01-6.96-6.97v-9.1L116 90.5v-9.95l16.05-16.05h-9.09a6.96 6.96 0 01-6.96-6.97v-.03h21z\" fill=\"#FF444F\" /><path d=\"M144 92.5H88v7h56v-7z\" fill=\"#85ACB0\" /></g><g clipPath=\"url(#prefix__clip1_8025_92088)\"><path d=\"M212 73.5l21 21.07v-9.1a6.96 6.96 0 016.96-6.97h.04v21a7 7 0 01-7 7h-21v-.04a6.96 6.96 0 016.96-6.96h9.1L212 83.45v-9.96zm-15.93-16l6.97 7h-9.99l-7-7h10.02z\" fill=\"#FF444F\" /><path d=\"M240 64.5h-56v7h56v-7z\" fill=\"#85ACB0\" /></g><defs><clipPath id=\"prefix__clip0_8025_92088\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_92088\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M177.83 40.06v67.47h-8.44V40.06h8.44zM160.96 99.1v8.44h-16.87V99.1h16.87zm0-59.04v8.44h-16.87v-8.44h16.87zm50.6 0v8.44h-25.3v-8.44h25.3z\" /><path fill=\"#FF444F\" d=\"M182.05 72.07l21.08 21.09V86.4a8.4 8.4 0 018.4-8.4h.04V99.1a8.43 8.43 0 01-8.44 8.43h-21.08v-.04a8.4 8.4 0 018.37-8.39h6.75L182.05 84V72.06zm-15.13-15.14l2.48 2.47v11.93l-5.97-5.97H144.1v-8.43h22.83z\" /><path fill=\"#85ACB0\" d=\"M76.96 99.1v8.44H60.1V99.1h16.87zm50.6 0v8.44h-25.3V99.1h25.3zM93.84 40.06v67.48h-8.44V40.06h8.44zm-16.87 0v8.44H60.1v-8.44h16.87z\" /><path fill=\"#FF444F\" d=\"M85.4 76.27V88.2l-2.48 2.47H60.1v-8.44h19.34l5.96-5.96zm33.73-36.2a8.43 8.43 0 018.44 8.43v21.08h-.05a8.4 8.4 0 01-8.39-8.37v-6.75L98.05 75.54V63.62l15.14-15.12h-6.75a8.4 8.4 0 01-8.4-8.4v-.04z\" /><path fill=\"#85ACB0\" d=\"M89.61 82.23v1.75l1.75-1.75z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_91604)\"><path d=\"M137 54h-17.5v.04a6.96 6.96 0 006.97 6.96h5.6L102 91.05v9.9l35-35v5.6a6.96 6.96 0 006.96 6.95h.04V61a7 7 0 00-7-7z\" fill=\"#FF444F\" /><path d=\"M92.95 110H88v-7h11.95L95 107.95 92.95 110z\" fill=\"#85ACB0\" /></g><g clipPath=\"url(#prefix__clip1_8025_91604)\"><path d=\"M239.97 85.5a6.96 6.96 0 00-6.97 6.97v5.6l-35-35v9.88L228.05 103h-5.6a6.96 6.96 0 00-6.95 6.96v.04H233a7 7 0 007-7V85.5h-.04z\" fill=\"#FF444F\" /><path d=\"M184 61v-7h4.95l2.05 2.05 4.95 4.95H184z\" fill=\"#85ACB0\" /></g><defs><clipPath id=\"prefix__clip0_8025_91604\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_91604\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 40.06v67.47h-8.44V40.06h8.44zm-16.87 0V73.8h-8.44V40.06h8.44zm-44.64 16.87l2.47 2.47 5.96 5.96h-14.4v-8.43h5.97zm27.77-16.87v16.87h-8.44V40.06h8.44zm-16.87 0v8.44h-8.43v-8.44h8.43z\" /><path fill=\"#FF444F\" d=\"M194.66 78.02a8.4 8.4 0 00-8.4 8.39v6.75l-25.3-25.3v11.9L180.3 99.1h-6.73a8.4 8.4 0 00-8.4 8.4v.03h21.1a8.43 8.43 0 008.43-8.43V78.02h-.04z\" /><path fill=\"#85ACB0\" d=\"M76.96 99.1v8.44h-8.43V99.1h8.43zm50.6-59.04v67.47h-8.43V40.06h8.44zM110.7 73.8v33.74h-8.44V73.8h8.44zM93.83 90.67v16.86h-8.44V90.67h8.44zm-19.34-8.44l-5.96 5.96-2.47 2.48h-5.97v-8.44h14.4z\" /><path fill=\"#FF444F\" d=\"M102.26 40.06H81.18v.04a8.4 8.4 0 008.39 8.4h6.75L76.96 67.84v11.92l25.3-25.3v6.75a8.4 8.4 0 008.4 8.37h.04V48.5a8.43 8.43 0 00-8.44-8.44z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 90.21h32.77c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4H40.6c-3.21 0-5.82-2.41-5.82-5.4 0-2.98 2.6-5.4 5.83-5.4h64.08c3.22 0 5.83-2.42 5.83-5.4s-2.6-5.4-5.83-5.4H55.16v-.05c-2.91-.34-5.1-2.64-5.1-5.36s2.19-5.02 5.1-5.36v-.04h20.4c3.21 0 5.82-2.42 5.82-5.4 0-2.99-2.6-5.41-5.83-5.41H48.61c-3.22 0-5.83-2.42-5.83-5.4 0-2.99 2.6-5.4 5.83-5.4h138.37c3.22 0 5.83 2.41 5.83 5.4 0 2.98-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.42-5.82 5.4s2.61 5.4 5.83 5.4h32.04c3.22 0 5.83 2.43 5.83 5.41s-2.61 5.4-5.83 5.4h-17.48c-3.21 0-5.82 2.42-5.82 5.4 0 2.99 2.6 5.41 5.82 5.41h9.47zm-126-43.23c3.23 0 5.84 2.42 5.84 5.4 0 3-2.61 5.41-5.83 5.41s-5.83-2.42-5.83-5.4c0-2.99 2.61-5.4 5.83-5.4zm136.92-21.6h40.79c3.21 0 5.82 2.41 5.82 5.4s-2.6 5.4-5.82 5.4h-40.79c-3.21 0-5.82-2.42-5.82-5.4 0-2.99 2.6-5.4 5.82-5.4zm-24.76 0c3.22 0 5.83 2.41 5.83 5.4s-2.61 5.4-5.83 5.4-5.82-2.42-5.82-5.4c0-2.99 2.6-5.4 5.82-5.4zm70.64 21.6h10.2c3.22 0 5.83 2.42 5.83 5.4 0 3-2.61 5.41-5.83 5.41h-10.2c-3.21 0-5.82-2.42-5.82-5.4 0-2.99 2.6-5.4 5.82-5.4zM188.43 68.6h21.85c3.22 0 5.83 2.42 5.83 5.4 0 2.98-2.6 5.4-5.83 5.4h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.98 2.6-5.4 5.83-5.4zm20.4 21.61h32.04c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4h-32.04c-3.22 0-5.83-2.41-5.83-5.4 0-2.98 2.61-5.4 5.83-5.4zm-139.1 21.61h65.54c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4H69.73c-3.22 0-5.83-2.41-5.83-5.4s2.6-5.4 5.83-5.4zm87.39 0h10.2c3.21 0 5.82 2.42 5.82 5.4 0 2.99-2.6 5.4-5.82 5.4h-10.2c-3.22 0-5.83-2.41-5.83-5.4s2.61-5.4 5.83-5.4z\" /><path fill=\"#85ACB0\" d=\"M165.52 99.37v8.46h-21.09v-8.46h21.09zm29-46.3l14.92 14.95a8.33 8.33 0 011.3 1.75 8.24 8.24 0 010 8.46h-22.39l-8.44-8.46h19.34L194.5 65a8.42 8.42 0 01-2.46-5.95c0-2.23.88-4.37 2.46-5.95l.03-.03zm17.39-12.9v8.46h-67.48v-8.46h67.48z\" /><path fill=\"#FF444F\" d=\"M195.04 86.69v6.7l-15.12-15.16-8.44-8.46h-27.05v8.46H168l21.09 21.14h-6.73a8.4 8.4 0 00-8.4 8.42v.04h21.09a8.45 8.45 0 008.43-8.46V86.7h-8.43z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.37v8.46H60.09v-8.46h67.48zm-1.17-29.6a8.24 8.24 0 010 8.46 8.32 8.32 0 01-1.3 1.75l-14.91 14.95-.03-.03a8.42 8.42 0 01-2.46-5.95c0-2.23.88-4.37 2.46-5.95l4.75-4.77H95.57l8.44-8.46zm-45.22-29.6v8.46H60.09v-8.46h21.09z\" /><path fill=\"#FF444F\" d=\"M110.7 40.17H89.6v.04a8.4 8.4 0 008.4 8.42h6.74L83.67 69.77H60.09v8.46h27.05l8.44-8.46 15.12-15.16v6.7h8.43V48.63a8.45 8.45 0 00-8.43-8.46z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 99.1v8.44h-25.3l-8.44-8.44h33.74zm-33.74 0l-8.44 8.44h-25.3V99.1h33.74zm33.74-59.04v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M203.13 56.93h-21.08v.04a8.4 8.4 0 008.39 8.4h6.75L177.83 84.7l-19.34-19.34a8.43 8.43 0 00-11.93 0l-2.47 2.48v11.92l8.44-8.43 19.34 19.34a8.43 8.43 0 0011.92 0l19.34-19.34v6.74a8.4 8.4 0 008.4 8.38h.04V65.36a8.43 8.43 0 00-8.44-8.43z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-59.04v8.44H93.83l8.43-8.44h25.3zm-42.17 0l8.43 8.44H60.09v-8.44h25.3z\" /><path fill=\"#FF444F\" d=\"M127.52 61.15a8.4 8.4 0 00-8.39 8.39v6.75L99.8 56.93a8.43 8.43 0 00-11.92 0L68.53 76.27l-8.44-8.43v11.92l2.47 2.47a8.43 8.43 0 0011.93 0L93.83 62.9l19.34 19.34h-6.75a8.4 8.4 0 00-8.37 8.4v.04h21.08a8.43 8.43 0 008.44-8.44V61.15h-.05z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_91554)\"><path d=\"M106.98 103l-4.98 5-2 2H88v-7h18.98zM144 54v7H88v-7h56z\" fill=\"#85ACB0\" /><path d=\"M143.97 89h.03V68a7 7 0 00-7-7h-21v.04a6.96 6.96 0 006.97 6.96h9.1L109 91.05v9.93l28-28.03v9.1a6.96 6.96 0 006.97 6.95z\" fill=\"#FF444F\" /></g><g clipPath=\"url(#prefix__clip1_8025_91554)\"><path d=\"M195.95 103l-7 7H184v-7h11.95zM240 54v7h-56v-7h56z\" fill=\"#85ACB0\" /><path d=\"M239.97 78.5a6.96 6.96 0 00-6.97 6.97v5.6L220.45 78.5a7 7 0 00-9.9 0L198 91.05v9.9l17.5-17.5L228.05 96h-5.6a6.96 6.96 0 00-6.95 6.97v.03H233a7 7 0 007-7V78.5h-.04z\" fill=\"#FF444F\" /></g><defs><clipPath id=\"prefix__clip0_8025_91554\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_91554\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"272\" height=\"147\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M268 0H4C1.79 0 0 1.78 0 3.97v139.06c0 2.2 1.79 3.97 4 3.97h264c2.2 0 4-1.78 4-3.97V3.97c0-2.2-1.8-3.97-4-3.97z\" fill=\"var(--fill-normal)\" /><path d=\"M268 0H4C1.79 0 0 1.78 0 3.97v139.06c0 2.2 1.79 3.97 4 3.97h264c2.2 0 4-1.78 4-3.97V3.97c0-2.2-1.8-3.97-4-3.97z\" fill=\"var(--general-section-1)\" /><path d=\"M157.12 89.6h32.77c3.22 0 5.83 2.4 5.83 5.37 0 2.96-2.61 5.36-5.83 5.36H40.6c-3.21 0-5.82-2.4-5.82-5.37 0-2.96 2.6-5.36 5.83-5.36h64.08c3.22 0 5.83-2.4 5.83-5.36s-2.6-5.37-5.83-5.37H55.16v-.05c-2.91-.33-5.1-2.62-5.1-5.32s2.19-4.99 5.1-5.32v-.04h20.4c3.21 0 5.82-2.4 5.82-5.37s-2.6-5.37-5.83-5.37H48.61c-3.22 0-5.83-2.4-5.83-5.36 0-2.97 2.6-5.37 5.83-5.37h138.37c3.22 0 5.83 2.4 5.83 5.37 0 2.96-2.61 5.36-5.83 5.36h-53.9c-3.21 0-5.82 2.4-5.82 5.36s2.61 5.37 5.83 5.37h32.04c3.22 0 5.83 2.41 5.83 5.37s-2.61 5.36-5.83 5.36h-17.48c-3.21 0-5.82 2.4-5.82 5.37s2.6 5.37 5.82 5.37h9.47zm-126-42.94c3.23 0 5.84 2.4 5.84 5.37 0 2.98-2.61 5.37-5.83 5.37S25.3 55 25.3 52.04c0-2.97 2.61-5.37 5.83-5.37h-.01zm136.92-21.45h40.79c3.21 0 5.82 2.4 5.82 5.36 0 2.97-2.6 5.37-5.82 5.37h-40.79c-3.21 0-5.82-2.4-5.82-5.37s2.6-5.36 5.82-5.36zm-24.76 0c3.22 0 5.83 2.4 5.83 5.36 0 2.97-2.61 5.37-5.83 5.37s-5.82-2.4-5.82-5.37 2.6-5.36 5.82-5.36zm70.64 21.45h10.2c3.22 0 5.83 2.4 5.83 5.37 0 2.98-2.61 5.37-5.83 5.37h-10.2c-3.21 0-5.82-2.4-5.82-5.36 0-2.97 2.6-5.37 5.82-5.37zm-25.49 21.48h21.85c3.22 0 5.83 2.4 5.83 5.36s-2.6 5.36-5.83 5.36h-21.84c-3.22 0-5.83-2.4-5.83-5.36s2.6-5.36 5.83-5.36h-.01zm20.4 21.46h32.04c3.22 0 5.83 2.4 5.83 5.37s-2.61 5.36-5.83 5.36h-32.04c-3.22 0-5.83-2.4-5.83-5.37 0-2.96 2.61-5.36 5.83-5.36zm-139.1 21.47h65.54c3.22 0 5.83 2.4 5.83 5.36 0 2.97-2.61 5.36-5.83 5.36H69.73c-3.22 0-5.83-2.4-5.83-5.36 0-2.97 2.6-5.37 5.83-5.37zm87.39 0h10.2c3.21 0 5.82 2.4 5.82 5.36 0 2.97-2.6 5.36-5.82 5.36h-10.2c-3.22 0-5.83-2.4-5.83-5.36 0-2.97 2.61-5.37 5.83-5.37z\" fill=\"var(--fill-normal)\" /><path d=\"M208 81.5V104h-24v-3.75c0-2.06 1.8-3.75 4-3.75h6.32L172 75.54l-12 11.25-16-15V61.2l16 15 12-11.25 28 26.21v-5.92c0-2.06 1.8-3.75 4-3.75h4z\" fill=\"#FF444F\" /><path d=\"M208 44v11.25h-16l-2.68-3.75H144v-3.75h45.32L192 44h16z\" fill=\"#85ACB0\" /><path d=\"M128 44v22.35h-4c-2.2 0-4-1.68-4-3.73v-5.88L92 82.77 80 71.6 64 86.5V76l16-14.9 12 11.17 22.32-20.82H108c-2.2 0-4-1.68-4-3.73V44h24z\" fill=\"#FF444F\" /><path d=\"M128 92.42v11.18h-16l-2.68-3.73H64v-3.72h45.32l2.68-3.73h16z\" fill=\"#85ACB0\" /></svg>);","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { getUrlBase, isMobile } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\n\ntype TContractTypeDescriptionVideo = {\n    selected_contract_type?: string;\n    data_testid?: string;\n};\n\nconst ContractTypeDescriptionVideo = ({ selected_contract_type, data_testid }: TContractTypeDescriptionVideo) => {\n    const { ui } = useStore();\n    const { is_dark_mode_on: is_dark_theme } = ui;\n    const getVideoSource = React.useCallback(\n        (extension: 'mp4' | 'webm') => {\n            return getUrlBase(\n                `/public/videos/${selected_contract_type}_description${is_dark_theme ? '_dark' : '_light'}.${extension}`\n            );\n        },\n        [is_dark_theme, selected_contract_type]\n    );\n\n    // memoize file paths for videos and open the modal only after we get them\n    const mp4_src = React.useMemo(() => getVideoSource('mp4'), [getVideoSource]);\n    const webm_src = React.useMemo(() => getVideoSource('webm'), [getVideoSource]);\n    if (!selected_contract_type) {\n        return null;\n    }\n    return (\n        <video\n            autoPlay\n            loop\n            playsInline\n            disablePictureInPicture\n            controlsList='nodownload'\n            onContextMenu={e => e.preventDefault()}\n            preload='auto'\n            controls\n            width={isMobile() ? 328 : 480}\n            height={isMobile() ? 184.5 : 270}\n            data-testid={data_testid}\n        >\n            {/* a browser will select a source with extension it recognizes */}\n            <source src={mp4_src} type='video/mp4' />\n            <source src={webm_src} type='video/webm' />\n            {localize('Unfortunately, your browser does not support the video.')}\n        </video>\n    );\n};\n\nexport default React.memo(ContractTypeDescriptionVideo);\n","import React from 'react';\nimport ImageAsianUpDown from 'Assets/SvgComponents/trade_explanations/img-asian.svg';\nimport ImageCloseToLow from 'Assets/SvgComponents/trade_explanations/img-close-to-low.svg';\nimport ImageEndsInOut from 'Assets/SvgComponents/trade_explanations/img-ends-in-out.svg';\nimport ImageEvenOdd from 'Assets/SvgComponents/trade_explanations/img-even-odd.svg';\nimport ImageHighLow from 'Assets/SvgComponents/trade_explanations/img-high-low.svg';\nimport ImageHighToClose from 'Assets/SvgComponents/trade_explanations/img-high-to-close.svg';\nimport ImageHighToLow from 'Assets/SvgComponents/trade_explanations/img-high-to-low.svg';\nimport ImageMatchDiff from 'Assets/SvgComponents/trade_explanations/img-match-diff.svg';\nimport ImageMultiplier from 'Assets/SvgComponents/trade_explanations/img-multiplier.svg';\nimport ImageOverUnder from 'Assets/SvgComponents/trade_explanations/img-over-under.svg';\nimport ImageReset from 'Assets/SvgComponents/trade_explanations/img-reset.svg';\nimport ImageRiseFall from 'Assets/SvgComponents/trade_explanations/img-rise-fall.svg';\nimport ImageRunHighLow from 'Assets/SvgComponents/trade_explanations/img-run-high-low.svg';\nimport ImageSpread from 'Assets/SvgComponents/trade_explanations/img-spread.svg';\nimport ImageTickHighLow from 'Assets/SvgComponents/trade_explanations/img-tick-high-low.svg';\nimport ImageTouch from 'Assets/SvgComponents/trade_explanations/img-touch.svg';\nimport ImageTurbos from 'Assets/SvgComponents/trade_explanations/img-turbos.svg';\nimport ContractTypeDescriptionVideo from './contract-type-description-video';\n\n// TODO: Replace static image svgs with themed GIFs or animated SVGs\nconst TradeCategoriesGIF = ({\n    category,\n    selected_contract_type,\n}: {\n    category?: string;\n    selected_contract_type?: string;\n}) => {\n    if (category !== selected_contract_type) return null;\n    switch (category) {\n        case 'asian':\n            return <ImageAsianUpDown />;\n        case 'callputspread':\n            return <ImageSpread />;\n        case 'end':\n            return <ImageEndsInOut />;\n        case 'even_odd':\n            return <ImageEvenOdd />;\n        case 'high_low':\n            return <ImageHighLow />;\n        case 'lb_call':\n            return <ImageCloseToLow />;\n        case 'lb_put':\n            return <ImageHighToClose />;\n        case 'lb_high_low':\n            return <ImageHighToLow />;\n        case 'rise_fall':\n            return <ImageRiseFall />;\n        case 'rise_fall_equal':\n            return <ImageRiseFall />;\n        case 'match_diff':\n            return <ImageMatchDiff />;\n        case 'multiplier':\n            return <ImageMultiplier />;\n        case 'over_under':\n            return <ImageOverUnder />;\n        case 'reset':\n            return <ImageReset />;\n        case 'run_high_low':\n            return <ImageRunHighLow />;\n        case 'accumulator':\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case 'tick_high_low':\n            return <ImageTickHighLow />;\n        case 'touch':\n            return <ImageTouch />;\n        case 'turbosshort':\n        case 'turboslong':\n            return <ImageTurbos />;\n        case 'vanilla':\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        default:\n            return null;\n    }\n};\n\nexport default TradeCategoriesGIF;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst ContractTypeGlossary = ({ category }: { category: string }) => {\n    let content;\n    if (category) {\n        switch (category) {\n            case 'accumulator':\n                content = [\n                    { type: 'heading', text: localize('Growth rate') },\n                    {\n                        type: 'paragraph',\n                        text: localize('You can choose a growth rate with values of 1%, 2%, 3%, 4%, and 5%.'),\n                    },\n                    { type: 'heading', text: localize('Payout') },\n                    {\n                        type: 'paragraph',\n                        text: localize('Payout is the sum of your initial stake and profit.'),\n                    },\n                    { type: 'heading', text: localize('Range') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'It is a percentage of the previous spot price. The percentage rate is based on your choice of the index and the growth rate.'\n                        ),\n                    },\n                    { type: 'heading', text: localize('Previous spot price') },\n                    {\n                        type: 'paragraph',\n                        text: localize('Spot price on the previous tick.'),\n                    },\n                    { type: 'heading', text: localize('Slippage risk') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'The spot price may change by the time your order reaches our servers. When this happens, your payout may be affected.'\n                        ),\n                    },\n                ];\n                break;\n            case 'vanilla':\n                content = [\n                    { type: 'heading', text: localize('Payout') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'Your payout is equal to the payout per point multiplied by the difference between the final price and the strike price.'\n                        ),\n                    },\n                    { type: 'heading', text: localize('Final price') },\n                    {\n                        type: 'paragraph',\n                        text: localize('This is the spot price of the last tick at expiry.'),\n                    },\n                    { type: 'heading', text: localize('Strike price') },\n                    {\n                        type: 'paragraph',\n                        text: localize('You must select the strike price before entering the contract.'),\n                    },\n                    {\n                        type: 'list',\n                        text: [\n                            localize(\n                                'If you select \"Call\", you’ll earn a payout if the final price is above the strike price at expiry. Otherwise, you won’t receive a payout.'\n                            ),\n                            localize(\n                                'If you select \"Put\", you’ll earn a payout if the final price is below the strike price at expiry. Otherwise, you won’t receive a payout.'\n                            ),\n                        ],\n                    },\n                    { type: 'heading', text: localize('Expiry') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'This is when your contract will expire based on the Duration or End time you’ve selected.'\n                        ),\n                    },\n                    {\n                        type: 'list',\n                        text: [\n                            localize(\n                                'If the duration is more than 24 hours, the Cut-off time and Expiry date will apply instead.'\n                            ),\n                        ],\n                    },\n                    { type: 'heading', text: localize('Payout per point') },\n                    {\n                        type: 'paragraph',\n                        text: localize('We calculate this based on the strike price and duration you’ve selected.'),\n                    },\n                    { type: 'heading', text: localize('Contract value') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'We’ll offer to buy your contract at this price should you choose to sell it before its expiry. This is based on several factors, such as the current spot price, duration, etc. However, we won’t offer a contract value if the remaining duration is below 60 seconds.'\n                        ),\n                    },\n                    { type: 'heading', text: localize('Cut-off time') },\n                    {\n                        type: 'paragraph',\n                        text: localize('Contracts will expire at exactly 23:59:59 GMT on your selected expiry date.'),\n                    },\n                    { type: 'heading', text: localize('Expiry date') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'Your contract will expire on this date (in GMT), based on the End time you’ve selected.'\n                        ),\n                    },\n                ];\n                break;\n            default:\n                content = [];\n                break;\n        }\n    }\n    return (\n        <React.Fragment>\n            {content?.map(({ type, text }: { type: string; text: string | string[] }) => {\n                if (type === 'heading' && typeof text === 'string') {\n                    return (\n                        <Text\n                            as='h2'\n                            key={text.substring(0, 10)}\n                            weight='bold'\n                            className='contract-type-info__content-glossary--heading'\n                        >\n                            {text}\n                        </Text>\n                    );\n                }\n                if (type === 'paragraph' && typeof text === 'string') {\n                    return (\n                        <Text as='p' key={text.substring(0, 10)}>\n                            {text}\n                        </Text>\n                    );\n                }\n                if (type === 'list' && typeof text !== 'string') {\n                    return (\n                        <ul key={text[0].substring(0, 15)}>\n                            {text.map(list_item_text => (\n                                <li key={list_item_text.substring(0, 20)}>{list_item_text}</li>\n                            ))}\n                        </ul>\n                    );\n                }\n                return null;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default ContractTypeGlossary;\n","import React from 'react';\nimport { Button, ThemedScrollbars, ButtonToggle } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport TradeCategories from 'Assets/Trading/Categories/trade-categories';\nimport TradeCategoriesGIF from 'Assets/Trading/Categories/trade-categories-gif';\nimport { getContractTypes } from '../../../../Helpers/contract-type';\nimport ContractTypeGlossary from './contract-type-glossary';\nimport classNames from 'classnames';\nimport { TContractType, TList } from '../types';\n\ntype TInfo = {\n    handleSelect: (\n        type: TContractType,\n        e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n    ) => void;\n    item: TContractType;\n    list: TList[];\n};\n\nconst TABS = {\n    DESCRIPTION: 'description',\n    GLOSSARY: 'glossary',\n};\n\nconst Info = ({ handleSelect, item, list }: TInfo) => {\n    const [selected_tab, setSelectedTab] = React.useState(TABS.DESCRIPTION);\n    const contract_types: TContractType[] | undefined = getContractTypes(list, item)?.filter(\n        (i: { value: TContractType['value'] }) => i.value !== 'rise_fall_equal' && i.value !== 'turbosshort'\n    );\n    const has_toggle_buttons = /accumulator|vanilla/i.test(item.value);\n    const should_show_video = /accumulator|vanilla/i.test(item.value);\n    const is_description_tab_selected = selected_tab === TABS.DESCRIPTION;\n    const is_glossary_tab_selected = selected_tab === TABS.GLOSSARY;\n    const width = isMobile() ? '328' : '528';\n    const scroll_bar_height = has_toggle_buttons ? '464px' : '560px';\n    const onClickGlossary = () => setSelectedTab(TABS.GLOSSARY);\n\n    const cards = contract_types?.map((type: TContractType) => {\n        if (type.value !== item.value) return null;\n        return (\n            <div key={type.value} className='contract-type-info__card'>\n                <ThemedScrollbars\n                    className={classNames('contract-type-info__scrollbars', {\n                        'contract-type-info__scrollbars-description--active': is_description_tab_selected,\n                        'contract-type-info__scrollbars-glossary contract-type-info__scrollbars-glossary--active ':\n                            is_glossary_tab_selected,\n                    })}\n                    style={{\n                        left: `${is_description_tab_selected ? '-' : ''}${width}px`,\n                        transform: `translate3d(${is_description_tab_selected ? '' : '-'}${width}px, 0, 0)`,\n                    }}\n                    height={isMobile() ? '' : scroll_bar_height}\n                    autohide={false}\n                >\n                    <div\n                        className={classNames('contract-type-info__content', {\n                            'contract-type-info__gif': is_description_tab_selected,\n                            'contract-type-info__gif--has-toggle-buttons': has_toggle_buttons,\n                            'contract-type-info__gif--has-video': should_show_video && is_description_tab_selected,\n                        })}\n                    >\n                        {is_description_tab_selected ? (\n                            <React.Fragment>\n                                <TradeCategoriesGIF category={type.value} selected_contract_type={item?.value} />\n                                <TradeCategories category={type.value} onClick={onClickGlossary} />\n                            </React.Fragment>\n                        ) : (\n                            <ContractTypeGlossary category={type.value} />\n                        )}\n                    </div>\n                </ThemedScrollbars>\n            </div>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            {has_toggle_buttons && (\n                <div className='contract-type-info__button-wrapper'>\n                    <ButtonToggle\n                        buttons_arr={[\n                            { text: localize('Description'), value: TABS.DESCRIPTION },\n                            { text: localize('Glossary'), value: TABS.GLOSSARY },\n                        ]}\n                        name='description_glossary_filter'\n                        is_animated\n                        has_rounded_button\n                        onChange={e => {\n                            setSelectedTab(e.target.value);\n                        }}\n                        value={selected_tab}\n                    />\n                </div>\n            )}\n            <div\n                className={classNames('contract-type-info', {\n                    'contract-type-info--has-toggle-buttons': has_toggle_buttons,\n                })}\n                style={{\n                    width: isMobile() ? '328px' : '528px',\n                }}\n            >\n                {cards}\n            </div>\n            <div className='contract-type-info__trade-type-btn-wrapper'>\n                <Button\n                    id={`dt_contract_info_${item?.value}_btn`}\n                    className='contract-type-info__button'\n                    onClick={e => handleSelect(item, e)}\n                    text={localize('Choose {{contract_type}}', {\n                        contract_type: item?.text,\n                        interpolation: { escapeValue: false },\n                    })}\n                    secondary\n                />\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Info;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\n\ntype THeader = {\n    onClickGoBack?: () => void;\n    text_size?: string;\n    title: string;\n};\n\nconst Header = ({ onClickGoBack, text_size = 's', title }: THeader) => (\n    <div className='contract-type-info__action-bar'>\n        <span className='contract-type-info__icon' id='dt_contract_info_back_nav' onClick={onClickGoBack}>\n            <Icon icon='IcArrowLeftBold' />\n        </span>\n        <Text size={text_size} weight='bold' color='prominent' className='contract-type-info__title'>\n            {title}\n        </Text>\n    </div>\n);\n\nexport default Header;\n","import Info from './contract-type-info';\n\nexport { default as Header } from './contract-type-info-header';\n\nexport default Info;\n","import React from 'react';\nimport { Icon, Input } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype TSearchInput = {\n    onChange: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement | null>;\n    onClickClearInput: () => void;\n    value: string;\n};\n\nconst SearchInput = React.forwardRef<HTMLInputElement & HTMLTextAreaElement, TSearchInput>(\n    ({ onChange, onClickClearInput, value }, ref) => (\n        <Input\n            ref={ref}\n            data-lpignore='true'\n            leading_icon={<Icon icon='IcSearch' />}\n            trailing_icon={value ? <Icon icon='IcCloseCircle' onClick={onClickClearInput} /> : undefined}\n            placeholder={localize('Search')}\n            type='text'\n            onChange={onChange}\n            value={value}\n        />\n    )\n);\n\nSearchInput.displayName = 'SearchInput';\n\nexport default React.memo(SearchInput);\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst NoResultsMessage = ({ text }: { text: string }) => (\n    <div className='no-results-found'>\n        <h2 className='no-results-found__title'>\n            {localize('No results for \"{{text}}\"', { text, interpolation: { escapeValue: false } })}\n        </h2>\n        <Text as='p' size='xxs' align='center' color='less-prominent' className='no-results-found__subtitle'>\n            {localize('Try checking your spelling or use a different term')}\n        </Text>\n    </div>\n);\n\nexport default NoResultsMessage;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Loading, ThemedScrollbars, VerticalTab } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport SearchInput from './search-input';\nimport NoResultsMessage from './no-results-message';\nimport { Header } from '../ContractTypeInfo/index.js';\nimport { getContractCategoryKey } from '../../../../Helpers/contract-type';\nimport { TList } from '../types';\nimport ContractType from '../contract-type';\n\ntype TDialog = {\n    categories: TList[];\n    item: React.ComponentProps<typeof ContractType.Info>['item'];\n    selected?: string;\n    children?: React.ReactNode;\n    is_info_dialog_open?: boolean;\n    is_open?: boolean;\n    onBackButtonClick?: () => void;\n    onCategoryClick?: (e: React.ComponentProps<typeof VerticalTab.Headers>['selected']) => void;\n    onChangeInput?: (e: string) => void;\n    show_loading?: boolean;\n};\n\nconst Dialog = ({\n    categories,\n    item,\n    selected,\n    children,\n    is_info_dialog_open,\n    is_open,\n    onBackButtonClick,\n    onCategoryClick,\n    onChangeInput,\n    show_loading,\n}: React.PropsWithChildren<TDialog>) => {\n    const input_ref = React.useRef<(HTMLInputElement & HTMLTextAreaElement) | null>(null);\n    const [input_value, setInputValue] = React.useState('');\n    const contract_category = getContractCategoryKey(categories, item);\n    const selected_item = selected ? { key: selected } : { key: contract_category };\n    const selected_category_contract = !categories?.find(category => category.key === selected_item.key)\n        ?.contract_categories?.length;\n    const onChange: React.ComponentProps<typeof VerticalTab.Headers>['onChange'] = e => {\n        if (is_info_dialog_open) {\n            onBackButtonClick?.();\n        }\n        if (input_value) {\n            onClickClearInput();\n        }\n        if (onCategoryClick) {\n            onCategoryClick(e);\n        }\n    };\n\n    const onChangeInputValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value);\n        onChangeInput?.(e.target.value);\n    };\n\n    const onClickClearInput = () => {\n        input_ref?.current?.focus();\n        setInputValue('');\n        onChangeInput?.('');\n    };\n\n    const renderChildren = () => {\n        if (!is_info_dialog_open) {\n            return <ThemedScrollbars height='calc(100vh - 172px)'>{children}</ThemedScrollbars>;\n        }\n        return children;\n    };\n    const action_bar_item = (\n        <SearchInput\n            ref={input_ref}\n            onChange={onChangeInputValue}\n            onClickClearInput={onClickClearInput}\n            value={input_value}\n        />\n    );\n    return (\n        <CSSTransition\n            in={is_open}\n            timeout={100}\n            classNames={{\n                enter: 'contract-type-dialog--enter',\n                enterDone: 'contract-type-dialog--enterDone',\n                exit: 'contract-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contract-type-dialog' data-testid='dt_contract_wrapper'>\n                <div className='contract-type-dialog__wrapper'>\n                    {show_loading ? (\n                        <Loading is_fullscreen={false} />\n                    ) : (\n                        <React.Fragment>\n                            {!is_info_dialog_open ? (\n                                <VerticalTab.Layout>\n                                    <VerticalTab.Headers\n                                        header_title={localize('Trade types')}\n                                        items={categories}\n                                        selected={selected_item}\n                                        onChange={onChange}\n                                        selectedKey='key'\n                                    />\n\n                                    <div className='dc-vertical-tab__content'>\n                                        <div className='dc-vertical-tab__action-bar'>{action_bar_item}</div>\n                                        <div className='dc-vertical-tab__content-container'>\n                                            {selected_category_contract && <NoResultsMessage text={input_value} />}\n                                            {renderChildren()}\n                                        </div>\n                                    </div>\n                                </VerticalTab.Layout>\n                            ) : (\n                                <React.Fragment>\n                                    <div className='dc-vertical-tab__action-bar dc-vertical-tab__action-bar--contract-type-info-header'>\n                                        <Header title={item.text || ''} onClickGoBack={onBackButtonClick} />\n                                    </div>\n                                    {renderChildren()}\n                                </React.Fragment>\n                            )}\n                        </React.Fragment>\n                    )}\n                </div>\n            </div>\n        </CSSTransition>\n    );\n};\n\nexport default Dialog;\n","import Dialog from './contract-type-menu';\n\nexport default Dialog;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\n\ntype TIconTradeCategory = {\n    category: string;\n    className?: string;\n};\n\nconst IconTradeCategory = ({ category, className }: TIconTradeCategory) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCallBarrier' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePutBarrier' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeExpirymiss' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeExpiryrange' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRange' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeUpordown' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitmatch' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitdiff' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigiteven' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitodd' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitover' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitunder' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeOnetouch' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeNotouch' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeAsianu' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeAsiand' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbcall' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbput' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbhighlow' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case 'run_high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRunhigh' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRunlow' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'reset':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeResetcall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeResetput' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'tick_high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTickhigh' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTicklow' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'callputspread':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCallspread' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePutspread' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'multiplier':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeMultup' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeMultdown' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'accumulator':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeAccu' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case 'turboslong':\n            case 'turbosshort':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTurboslong' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTurbosshort' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'vanilla':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeVanillaLongCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeVanillaLongPut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcUnknown' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className={classNames('categories-container', className)} data-testid='dt-categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nexport default IconTradeCategory;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, DesktopWrapper } from '@deriv/components';\nimport IconTradeCategory from 'Assets/Trading/Categories/icon-trade-categories';\nimport { findContractCategory } from '../../../Helpers/contract-type';\nimport { TContractCategory, TContractType, TList } from './types';\n\ntype TDisplay = {\n    is_open: boolean;\n    name: string;\n    list: TContractCategory[];\n    onClick: () => void;\n    value: string;\n};\n\nconst Display = ({ is_open, name, list, onClick, value }: TDisplay) => {\n    const getDisplayText = () =>\n        findContractCategory(list as unknown as TList[], { value })?.contract_types?.find(\n            (item: TContractType) => item.value === value\n        )?.text;\n\n    return (\n        <div\n            data-testid='dt_contract_dropdown'\n            className={classNames('contract-type-widget__display', {\n                'contract-type-widget__display--clicked': is_open,\n            })}\n            onClick={onClick}\n        >\n            <IconTradeCategory category={value} className='contract-type-widget__icon-wrapper' />\n            <span data-name={name} data-value={value}>\n                {getDisplayText()}\n            </span>\n            <DesktopWrapper>\n                <Icon\n                    icon='IcChevronDown'\n                    className={classNames(\n                        'contract-type-widget__select-arrow',\n                        'contract-type-widget__select-arrow--left'\n                    )}\n                />\n            </DesktopWrapper>\n        </div>\n    );\n};\n\nexport default Display;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport IconTradeCategory from 'Assets/Trading/Categories/icon-trade-categories';\nimport { TContractType } from './types';\n\ntype TItem = {\n    contract_types: TContractType[];\n    handleInfoClick?: (clicked_item: TContractType) => void;\n    handleSelect?: (clicked_item: TContractType, e: React.MouseEvent<HTMLDivElement>) => void;\n    value?: string;\n};\n\nconst Item = ({ contract_types, handleInfoClick, handleSelect, value }: TItem) => (\n    <React.Fragment>\n        {contract_types.map(type => (\n            <div\n                id={`dt_contract_${type.value}_item`}\n                data-testid='dt_contract_item'\n                key={type.value}\n                className={classNames('contract-type-item', {\n                    'contract-type-item--selected': value === type.value || value?.includes(type.value),\n                })}\n                onClick={e => handleSelect?.(type, e)}\n            >\n                <IconTradeCategory category={type.value} className='contract-type-item__icon-wrapper' />\n                <Text size='xs' className='contract-type-item__title'>\n                    {type.text}\n                </Text>\n                <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick?.(type)}>\n                    <Icon icon='IcInfoOutline' />\n                </div>\n            </div>\n        ))}\n    </React.Fragment>\n);\n\nexport default Item;\n","import React from 'react';\nimport Item from './contract-type-item';\nimport { localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\nimport classNames from 'classnames';\nimport { TContractType, TContractCategory } from './types';\n\ntype TListProps = {\n    handleInfoClick?: (clicked_item: TContractType) => void;\n    handleSelect?: (\n        clicked_item: TContractType,\n        e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n    ) => void;\n    list: TContractCategory[];\n    value?: string;\n};\n\nconst List = ({ handleInfoClick, handleSelect, list, value }: TListProps) => (\n    <React.Fragment>\n        {list.map(contract_category => {\n            const contract_types = contract_category.contract_types?.filter(contract_type => {\n                const base_contract_type = /^(.*)_equal$/.exec(contract_type.value)?.[1];\n                if (contract_type.value === 'turbosshort') return false;\n                if (base_contract_type) {\n                    return !contract_category.contract_types.some(c => c.value === base_contract_type);\n                }\n\n                return true;\n            });\n            const is_new = /(Accumulators|Turbos|Vanillas)/i.test(contract_category.key);\n\n            return (\n                <div key={contract_category.key} className='contract-type-list' data-testid='contract_list'>\n                    <div className='contract-type-item__container'>\n                        <Text size='xs' className='contract-type-list__label'>\n                            {contract_category.label}\n                        </Text>\n                        {is_new && (\n                            <span className={classNames('dc-vertical-tab__header--new', 'contract-type-item__new')}>\n                                {localize('NEW!')}\n                            </span>\n                        )}\n                    </div>\n                    <div className='contract-type-list__wrapper'>\n                        <Item\n                            contract_types={contract_types}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                            value={value}\n                        />\n                    </div>\n                </div>\n            );\n        })}\n        ;\n    </React.Fragment>\n);\n\nexport default List;\n","import React from 'react';\nimport Dialog from './contract-type-dialog';\nimport Display from './contract-type-display';\nimport List from './contract-type-list';\nimport Info from './ContractTypeInfo';\n\nconst ContractType = ({ children }: React.PropsWithChildren<{ children: React.ReactNode }>) => <>{children}</>;\n\nContractType.Dialog = Dialog;\nContractType.Display = Display;\nContractType.List = List;\nContractType.Info = Info;\n\nexport default ContractType;\n","import React from 'react';\nimport { DesktopWrapper, MobileDialog, MobileWrapper } from '@deriv/components';\nimport { Header } from './ContractTypeInfo';\nimport { localize } from '@deriv/translations';\nimport ContractTypeMenu from './ContractTypeMenu';\n\ntype TContractTypeDialog = {\n    is_info_dialog_open: boolean;\n    onClose: React.ComponentProps<typeof MobileDialog>['onClose'];\n    is_open: boolean;\n};\n\ntype TContractTypeDialogProps = Pick<\n    React.ComponentProps<typeof ContractTypeMenu>,\n    'selected' | 'categories' | 'onBackButtonClick' | 'onChangeInput' | 'onCategoryClick' | 'show_loading' | 'item'\n> &\n    TContractTypeDialog;\n\nconst ContractTypeDialog = ({\n    children,\n    is_info_dialog_open,\n    onClose,\n    is_open,\n    item,\n    selected,\n    categories,\n    onBackButtonClick,\n    onChangeInput,\n    onCategoryClick,\n    show_loading,\n}: React.PropsWithChildren<TContractTypeDialogProps>) => {\n    const current_mobile_title = is_info_dialog_open ? (\n        <Header title={item?.text || ''} onClickGoBack={onBackButtonClick} text_size='xs' />\n    ) : (\n        localize('Trade types')\n    );\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                <span className='contract-type-widget__select-arrow' />\n                <MobileDialog\n                    portal_element_id='modal_root'\n                    title={current_mobile_title}\n                    header_classname='contract-type-widget__header'\n                    wrapper_classname={is_info_dialog_open ? 'contracts-modal-info' : 'contracts-modal-list'}\n                    visible={is_open}\n                    onClose={onClose}\n                    has_content_scroll={!is_info_dialog_open}\n                >\n                    {children}\n                </MobileDialog>\n            </MobileWrapper>\n            <DesktopWrapper>\n                <ContractTypeMenu\n                    is_info_dialog_open={is_info_dialog_open}\n                    is_open={is_open}\n                    item={item}\n                    selected={selected}\n                    categories={categories}\n                    onBackButtonClick={onBackButtonClick}\n                    onChangeInput={onChangeInput}\n                    onCategoryClick={onCategoryClick}\n                    show_loading={show_loading}\n                >\n                    {children}\n                </ContractTypeMenu>\n            </DesktopWrapper>\n        </React.Fragment>\n    );\n};\n\nexport default ContractTypeDialog;\n","import React from 'react';\nimport { isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport ContractType from './contract-type';\nimport { getContractTypeCategoryIcons, findContractCategory } from '../../../Helpers/contract-type';\nimport { TContractCategory, TContractType, TList } from './types';\n\ntype TContractTypeWidget = {\n    name?: string;\n    value: TContractType['value'];\n    list: TContractCategory[];\n    onChange: (event: DeepPartial<React.ChangeEvent<HTMLInputElement>>) => void;\n    languageChanged?: boolean;\n};\n\nconst ContractTypeWidget = ({ name, value, list, onChange, languageChanged }: TContractTypeWidget) => {\n    const wrapper_ref = React.useRef<HTMLDivElement | null>(null);\n    const [is_dialog_open, setDialogVisibility] = React.useState(false);\n    const [is_info_dialog_open, setInfoDialogVisibility] = React.useState(false);\n    const [selected_category, setSelectedCategory] = React.useState<TList['key'] | null>(null);\n    const [search_query, setSearchQuery] = React.useState('');\n    const [item, setItem] = React.useState<TContractType | null>(null);\n\n    const handleClickOutside = React.useCallback(\n        (event: MouseEvent) => {\n            if (isMobile()) return;\n            if (wrapper_ref && !wrapper_ref.current?.contains(event.target as Node)) {\n                setDialogVisibility(false);\n                setInfoDialogVisibility(false);\n                setItem({ ...item, value });\n            }\n        },\n        [item, value]\n    );\n\n    React.useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [handleClickOutside]);\n\n    const handleCategoryClick: React.ComponentProps<typeof ContractType.Dialog>['onCategoryClick'] = ({ key }) => {\n        if (key) setSelectedCategory(key);\n    };\n\n    const handleSelect = (\n        clicked_item: TContractType,\n        e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n    ) => {\n        const categories = list_with_category();\n        const { key } = findContractCategory(categories, clicked_item);\n        if ('id' in e.target && e.target.id !== 'info-icon' && clicked_item) {\n            setDialogVisibility(false);\n            setInfoDialogVisibility(false);\n            setItem(clicked_item);\n            setSelectedCategory(key);\n            onChange({ target: { name, value: clicked_item.value } });\n        }\n    };\n\n    const handleInfoClick = (clicked_item: TContractType) => {\n        setInfoDialogVisibility(!is_info_dialog_open);\n\n        setItem(clicked_item);\n    };\n\n    const handleVisibility = () => {\n        setDialogVisibility(!is_dialog_open);\n    };\n\n    const onWidgetClick = () => {\n        setDialogVisibility(!is_dialog_open);\n        setInfoDialogVisibility(false);\n        setItem({ ...item, value });\n    };\n\n    const onBackButtonClick = () => {\n        setInfoDialogVisibility(false);\n        setItem({ ...item, value });\n    };\n\n    const onChangeInput = (searchQueryItem: string) => setSearchQuery(searchQueryItem);\n\n    const list_with_category = () => {\n        const contract_type_category_icon: { [key: string]: string } = getContractTypeCategoryIcons();\n        const order_arr = [\n            'Accumulators',\n            'Vanillas',\n            'Turbos',\n            'Multipliers',\n            'Ups & Downs',\n            'Highs & Lows',\n            'Digits',\n        ];\n        const ordered_list = list?.sort((a, b) => order_arr.indexOf(a.key) - order_arr.indexOf(b.key));\n        const accumulators_category = ordered_list?.filter(({ label }) => label === localize('Accumulators'));\n        const multipliers_category = ordered_list?.filter(({ label }) => label === localize('Multipliers'));\n        const options_category = ordered_list?.filter(\n            ({ label }) => label !== localize('Multipliers') && label !== localize('Accumulators')\n        );\n\n        const categories: TList[] = [];\n\n        if (list && list.length > 0) {\n            categories.push({\n                label: localize('All'),\n                contract_categories: [...list],\n                key: 'All',\n                icon: '',\n            });\n        }\n\n        if (multipliers_category && multipliers_category.length > 0) {\n            categories.push({\n                label: localize('Multipliers'),\n                contract_categories: multipliers_category,\n                key: 'Multipliers',\n                icon: '',\n            });\n        }\n\n        if (options_category && options_category.length > 0) {\n            categories.push({\n                label: localize('Options'),\n                contract_categories: options_category,\n                component: options_category.some(category => /Vanillas|Turbos/i.test(category.key)) ? (\n                    <span className='dc-vertical-tab__header--new'>{localize('NEW')}!</span>\n                ) : null,\n                key: 'Options',\n                icon: '',\n            });\n        }\n\n        if (accumulators_category && accumulators_category.length > 0) {\n            categories.push({\n                label: localize('Accumulators'),\n                contract_categories: accumulators_category,\n                component: <span className='dc-vertical-tab__header--new'>{localize('NEW')}!</span>,\n                key: 'Accumulators',\n                icon: '',\n            });\n        }\n\n        return categories.map(contract_category => {\n            const contract_types = contract_category?.contract_categories?.reduce<TContractType[]>(\n                (prev, current) => [...prev, ...current.contract_types],\n                []\n            );\n\n            const icon = contract_category.key\n                ? contract_type_category_icon[contract_category.key]\n                : contract_category.icon;\n\n            let contract_categories = contract_category.contract_categories;\n\n            if (search_query) {\n                contract_categories = contract_category?.contract_categories\n                    ?.filter(category =>\n                        category.contract_types.find(type =>\n                            type.text?.toLowerCase().includes(search_query.toLowerCase())\n                        )\n                    )\n                    .map(category => ({\n                        ...category,\n                        contract_types: category.contract_types.filter(type =>\n                            type.text?.toLowerCase().includes(search_query.toLowerCase())\n                        ),\n                    }));\n            }\n\n            return {\n                ...contract_category,\n                contract_types,\n                icon,\n                contract_categories,\n            };\n        });\n    };\n\n    const selected_category_contracts = () => {\n        const selected_list_category = list_with_category()?.find(\n            categoryItem => categoryItem.key === selected_category\n        );\n        return (selected_list_category || list_with_category()[0]).contract_categories;\n    };\n\n    return (\n        <div\n            data-testid='dt_contract_widget'\n            id='dt_contract_dropdown'\n            className={`contract-type-widget contract-type-widget--${value} dropdown--left`}\n            ref={wrapper_ref}\n            tabIndex={0}\n        >\n            <ContractType.Display\n                is_open={is_dialog_open || is_info_dialog_open}\n                list={list}\n                name={name ?? ''}\n                onClick={onWidgetClick}\n                value={value}\n            />\n            <ContractType.Dialog\n                is_info_dialog_open={is_info_dialog_open}\n                is_open={is_dialog_open}\n                item={item || { value }}\n                categories={list_with_category()}\n                selected={selected_category || list_with_category()[0]?.key}\n                onBackButtonClick={onBackButtonClick}\n                onClose={handleVisibility}\n                onChangeInput={onChangeInput}\n                onCategoryClick={handleCategoryClick}\n                show_loading={languageChanged}\n            >\n                {is_info_dialog_open ? (\n                    <ContractType.Info\n                        handleSelect={handleSelect}\n                        item={item || { value }}\n                        list={list_with_category()}\n                    />\n                ) : (\n                    <ContractType.List\n                        handleInfoClick={handleInfoClick}\n                        handleSelect={handleSelect}\n                        list={selected_category_contracts() as TContractCategory[]}\n                        value={value}\n                    />\n                )}\n            </ContractType.Dialog>\n        </div>\n    );\n};\n\nexport default ContractTypeWidget;\n","import ContractTypeWidget from './contract-type-widget';\n\nexport default ContractTypeWidget;\n","import React from 'react';\nimport { MobileWrapper, usePrevious } from '@deriv/components';\nimport { unsupported_contract_types_list } from '@deriv/shared';\nimport { isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport { localize } from '@deriv/translations';\nimport { ToastPopup } from 'Modules/Trading/Containers/toast-popup.jsx';\nimport { getMarketNamesMap } from '../../../Constants';\nimport ContractTypeWidget from '../Components/Form/ContractType';\nimport { getAvailableContractTypes } from '../Helpers/contract-type';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst Contract = observer(() => {\n    const {\n        contract_type,\n        contract_types_list,\n        is_mobile_digit_view_selected: is_digit_view,\n        onChange,\n        symbol,\n    } = useTraderStore();\n    const {\n        common: { current_language },\n    } = useStore();\n\n    const list = getAvailableContractTypes(contract_types_list, unsupported_contract_types_list);\n    const digits_message = localize('Last digit stats for latest 1000 ticks for {{ underlying_name }}', {\n        underlying_name: getMarketNamesMap()[symbol.toUpperCase()],\n    });\n    const prev_lang = usePrevious(current_language);\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                {isDigitTradeType(contract_type) && (\n                    <ToastPopup className='digits__toast-info' is_open={is_digit_view} type='info' timeout={3000}>\n                        {digits_message}\n                    </ToastPopup>\n                )}\n            </MobileWrapper>\n            <ContractTypeWidget\n                list={list}\n                name='contract_type'\n                onChange={onChange}\n                value={contract_type}\n                languageChanged={prev_lang && prev_lang !== current_language}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default Contract;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\n\nconst PurchaseButtonsOverlay = ({ is_to_cover_one_button = false, message }) => {\n    const desktop_text_size = is_to_cover_one_button ? 'xxs' : 'xs';\n    return (\n        <div\n            data-testid='dt_purchase_button_overlay'\n            className={classNames('purchase-buttons-overlay', {\n                'purchase-buttons-overlay__one-button': !isMobile() && is_to_cover_one_button,\n            })}\n        >\n            <Text\n                weight='bold'\n                size={isMobile() ? 'xxs' : desktop_text_size}\n                className='purchase-buttons-overlay__caption'\n            >\n                {message}\n            </Text>\n        </div>\n    );\n};\n\nexport default React.memo(PurchaseButtonsOverlay);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DesktopWrapper, MobileWrapper, Money, IconTradeTypes, Text } from '@deriv/components';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport ContractInfo from 'Modules/Trading/Components/Form/Purchase/contract-info.jsx';\nimport { getGrowthRatePercentage } from '@deriv/shared';\n\n// TODO [lazy-loading-required] Responsive related components\nconst ButtonTextWrapper = ({ should_fade, is_loading, type, is_high_low }) => {\n    return (\n        <div className='btn-purchase__text_wrapper'>\n            <Text size='xs' weight='bold' color='colored-background'>\n                {!should_fade && is_loading ? '' : getContractTypeDisplay(type, is_high_low, true)}\n            </Text>\n        </div>\n    );\n};\n\nconst IconComponentWrapper = ({ type }) => (\n    <div className='btn-purchase__icon_wrapper'>\n        <IconTradeTypes type={type} className='btn-purchase__icon' color='active' />\n    </div>\n);\n\nconst PurchaseButton = ({\n    buy_info,\n    basis, // mobile-only\n    currency,\n    growth_rate,\n    has_deal_cancellation,\n    index,\n    info,\n    is_accumulator,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_multiplier,\n    is_vanilla,\n    is_proposal_empty,\n    is_turbos,\n    purchased_states_arr,\n    setPurchaseState,\n    should_fade,\n    onClickPurchase,\n    type,\n}) => {\n    const getIconType = () => {\n        if (!should_fade && is_loading) return '';\n        return is_high_low ? `${type.toLowerCase()}_barrier` : type.toLowerCase();\n    };\n    const { has_increased } = info;\n    const is_button_disabled = (is_disabled && !is_loading) || is_proposal_empty;\n    const non_multiplier_info_right = is_accumulator ? `${getGrowthRatePercentage(info.growth_rate)}%` : info.returns;\n\n    let button_value;\n\n    if (is_multiplier) {\n        button_value = (\n            <Text size='xs' weight='bold' color='colored-background'>\n                <Money amount={info.stake} currency={currency} show_currency />\n            </Text>\n        );\n    } else if (!is_vanilla && !is_turbos) {\n        button_value = (\n            <Text size='xs' weight='bold' color='colored-background'>\n                {!(is_loading || is_disabled) ? non_multiplier_info_right : ''}\n            </Text>\n        );\n    }\n\n    return (\n        <button\n            disabled={is_disabled}\n            id={`dt_purchase_${type.toLowerCase()}_button`}\n            className={classNames('btn-purchase', {\n                'btn-purchase--disabled': is_button_disabled || !!buy_info.error,\n                'btn-purchase--animated--slide': is_loading && !should_fade,\n                'btn-purchase--animated--fade': is_loading && should_fade,\n                'btn-purchase--swoosh': !!purchased_states_arr[index],\n                'btn-purchase--1': index === 0,\n                'btn-purchase--2': index === 1,\n                'btn-purchase--accumulator': is_accumulator,\n                'btn-purchase--multiplier': is_multiplier,\n                'btn-purchase--multiplier-deal-cancel': has_deal_cancellation,\n                'btn-purchase--turbos': is_turbos,\n                'btn-purchase--1__vanilla-opts': index === 0 && is_vanilla,\n                'btn-purchase--2__vanilla-opts': index === 1 && is_vanilla,\n            })}\n            onClick={() => {\n                setPurchaseState(index);\n                onClickPurchase(info.id, info.stake, type);\n            }}\n        >\n            <DesktopWrapper>\n                <div className='btn-purchase__info btn-purchase__info--left'>\n                    <div className='btn-purchase__type-wrapper'>\n                        <IconComponentWrapper type={getIconType()} />\n                        <ButtonTextWrapper\n                            should_fade={should_fade}\n                            is_loading={is_loading}\n                            type={type}\n                            is_high_low={is_high_low}\n                        />\n                    </div>\n                </div>\n                <div className='btn-purchase__effect-detail' />\n                <div className='btn-purchase__effect-detail--arrow' />\n                <div className='btn-purchase__info btn-purchase__info--right'>\n                    <div className='btn-purchase__text_wrapper'>{button_value}</div>\n                </div>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <div\n                    className={classNames('btn-purchase__top', {\n                        'btn-purchase__top--accumulator': is_accumulator,\n                        'btn-purchase--vanilla': is_vanilla,\n                    })}\n                >\n                    <IconComponentWrapper type={getIconType()} />\n                    <ButtonTextWrapper\n                        should_fade={should_fade}\n                        is_loading={is_loading}\n                        type={type}\n                        is_high_low={is_high_low}\n                    />\n                </div>\n                {!is_turbos && !is_vanilla && (\n                    <div className='btn-purchase__bottom'>\n                        <ContractInfo\n                            basis={basis}\n                            currency={currency}\n                            growth_rate={growth_rate}\n                            has_increased={has_increased}\n                            is_accumulator={is_accumulator}\n                            is_loading={is_loading}\n                            is_multiplier={is_multiplier}\n                            is_turbos={is_turbos}\n                            should_fade={should_fade}\n                            proposal_info={info}\n                            type={type}\n                        />\n                    </div>\n                )}\n            </MobileWrapper>\n        </button>\n    );\n};\n\nPurchaseButton.propTypes = {\n    basis: PropTypes.string,\n    buy_info: PropTypes.object,\n    currency: PropTypes.string,\n    growth_rate: PropTypes.number,\n    has_deal_cancellation: PropTypes.bool,\n    index: PropTypes.number,\n    info: PropTypes.object,\n    is_accumulator: PropTypes.bool,\n    is_disabled: PropTypes.bool,\n    is_high_low: PropTypes.bool,\n    is_loading: PropTypes.bool,\n    is_multiplier: PropTypes.bool,\n    is_proposal_empty: PropTypes.bool,\n    is_turbos: PropTypes.bool,\n    is_vanilla: PropTypes.bool,\n    onClickPurchase: PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    should_fade: PropTypes.bool,\n    setPurchaseState: PropTypes.func,\n    type: PropTypes.string,\n};\n\nexport default PurchaseButton;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DesktopWrapper, MobileWrapper, Popover } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport ContractInfo from 'Modules/Trading/Components/Form/Purchase/contract-info.jsx';\nimport PurchaseButton from 'Modules/Trading/Components/Elements/purchase-button.jsx';\nimport CancelDealInfo from '../Form/Purchase/cancel-deal-info.jsx';\n\nconst PurchaseFieldset = ({\n    basis,\n    buy_info,\n    currency,\n    growth_rate,\n    has_cancellation,\n    info,\n    index,\n    is_accumulator,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_market_closed,\n    is_multiplier,\n    is_vanilla,\n    is_proposal_empty,\n    is_proposal_error,\n    is_turbos,\n    purchased_states_arr,\n    onClickPurchase,\n    onHoverPurchase,\n    setPurchaseState,\n    type,\n}) => {\n    const [should_fade, setShouldFade] = React.useState(false);\n\n    React.useEffect(() => {\n        setShouldFade(true);\n    }, []);\n\n    const purchase_button = (\n        <React.Fragment>\n            <PurchaseButton\n                buy_info={buy_info}\n                currency={currency}\n                info={info}\n                index={index}\n                growth_rate={growth_rate}\n                has_deal_cancellation={is_multiplier && has_cancellation}\n                is_accumulator={is_accumulator}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                is_multiplier={is_multiplier}\n                is_vanilla={is_vanilla}\n                is_proposal_empty={is_proposal_empty}\n                is_turbos={is_turbos}\n                purchased_states_arr={purchased_states_arr}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                should_fade={should_fade}\n                type={type}\n                basis={basis} // mobile-only\n            />\n            {is_multiplier && has_cancellation && (\n                <MobileWrapper>\n                    <CancelDealInfo proposal_info={info} />\n                </MobileWrapper>\n            )}\n        </React.Fragment>\n    );\n\n    return (\n        <Fieldset\n            className={classNames('trade-container__fieldset', 'purchase-container__option', {\n                'purchase-container__option--has-cancellation': has_cancellation,\n                'purchase-container__option--turbos': is_turbos,\n            })}\n        >\n            <DesktopWrapper>\n                <div\n                    className={classNames('trade-container__fieldset-wrapper', {\n                        'trade-container__fieldset-wrapper--disabled': is_proposal_error || is_disabled,\n                    })}\n                >\n                    {(has_cancellation || !is_multiplier) && !is_accumulator && (\n                        <ContractInfo\n                            basis={basis}\n                            currency={currency}\n                            proposal_info={info}\n                            has_increased={info.has_increased}\n                            is_loading={is_loading}\n                            is_multiplier={is_multiplier}\n                            is_turbos={is_turbos}\n                            is_vanilla={is_vanilla}\n                            should_fade={should_fade}\n                            type={type}\n                        />\n                    )}\n                    <div\n                        className={classNames('btn-purchase__shadow-wrapper', {\n                            'btn-purchase__shadow-wrapper--disabled': is_proposal_error || is_disabled,\n                        })}\n                        onMouseEnter={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(true, type);\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false);\n                            }\n                        }}\n                    >\n                        <div className='btn-purchase__box-shadow' />\n                        {is_proposal_error && !is_market_closed ? (\n                            <Popover\n                                has_error\n                                alignment='left'\n                                message={info.message}\n                                is_open={is_proposal_error && !is_market_closed}\n                                relative_render\n                                margin={6}\n                            >\n                                {purchase_button}\n                            </Popover>\n                        ) : (\n                            <React.Fragment>\n                                {is_multiplier ? (\n                                    <Popover\n                                        alignment='left'\n                                        is_bubble_hover_enabled\n                                        margin={8}\n                                        message={info.message}\n                                        relative_render\n                                    >\n                                        {purchase_button}\n                                    </Popover>\n                                ) : (\n                                    purchase_button\n                                )}\n                            </React.Fragment>\n                        )}\n                    </div>\n                </div>\n            </DesktopWrapper>\n            <MobileWrapper>\n                {is_proposal_error && <div className='btn-purchase__error'>{info.message}</div>}\n                {purchase_button}\n            </MobileWrapper>\n        </Fieldset>\n    );\n};\n\nPurchaseFieldset.propTypes = {\n    basis: PropTypes.string,\n    buy_info: PropTypes.object,\n    currency: PropTypes.string,\n    growth_rate: PropTypes.number,\n    has_cancellation: PropTypes.bool,\n    index: PropTypes.number,\n    info: PropTypes.object,\n    is_accumulator: PropTypes.bool,\n    is_disabled: PropTypes.bool,\n    is_high_low: PropTypes.bool,\n    is_loading: PropTypes.bool,\n    is_market_closed: PropTypes.bool,\n    is_multiplier: PropTypes.bool,\n    is_proposal_empty: PropTypes.bool,\n    is_proposal_error: PropTypes.bool,\n    is_turbos: PropTypes.bool,\n    is_vanilla: PropTypes.bool,\n    onClickPurchase: PropTypes.func,\n    onHoverPurchase: PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    setPurchaseState: PropTypes.func,\n    type: PropTypes.string,\n};\n\nexport default React.memo(PurchaseFieldset);\n","import React from 'react';\nimport { isAccumulatorContract, isEmptyObject } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport PurchaseButtonsOverlay from 'Modules/Trading/Components/Elements/purchase-buttons-overlay.jsx';\nimport PurchaseFieldset from 'Modules/Trading/Components/Elements/purchase-fieldset.jsx';\nimport { getContractTypePosition } from 'Constants/contract';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst Purchase = observer(({ is_market_closed }) => {\n    const {\n        portfolio: { active_positions },\n        ui: { purchase_states: purchased_states_arr, is_mobile, setPurchaseState },\n    } = useStore();\n    const {\n        basis,\n        contract_type,\n        currency,\n        is_accumulator,\n        is_multiplier,\n        growth_rate,\n        has_cancellation,\n        is_purchase_enabled,\n        is_turbos,\n        is_vanilla,\n        onPurchase: onClickPurchase,\n        onHoverPurchase,\n        proposal_info,\n        purchase_info,\n        symbol,\n        validation_errors,\n        vanilla_trade_type,\n        trade_types,\n        is_trade_enabled,\n    } = useTraderStore();\n    const is_high_low = /^high_low$/.test(contract_type.toLowerCase());\n    const isLoading = info => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return !has_validation_error && !info.has_error && !info.id;\n    };\n    const is_proposal_empty = isEmptyObject(proposal_info);\n    const components = [];\n    Object.keys(trade_types).map((type, index) => {\n        const getSortedIndex = () => {\n            if (getContractTypePosition(type) === 'top') return 0;\n            if (getContractTypePosition(type) === 'bottom') return 1;\n            return index;\n        };\n        const info = proposal_info[type] || {};\n        const is_disabled = !is_trade_enabled || !info.id || !is_purchase_enabled;\n        const is_proposal_error =\n            is_multiplier || (is_accumulator && !is_mobile) ? info.has_error && !!info.message : info.has_error;\n        const purchase_fieldset = (\n            <PurchaseFieldset\n                basis={basis}\n                buy_info={purchase_info}\n                currency={currency}\n                growth_rate={growth_rate}\n                info={info}\n                key={index}\n                index={getSortedIndex(index, type)}\n                has_cancellation={has_cancellation}\n                is_accumulator={is_accumulator}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={isLoading(info)}\n                is_market_closed={is_market_closed}\n                is_mobile={is_mobile}\n                is_multiplier={is_multiplier}\n                is_turbos={is_turbos}\n                is_vanilla={is_vanilla}\n                is_proposal_empty={is_proposal_empty}\n                is_proposal_error={is_proposal_error}\n                purchased_states_arr={purchased_states_arr}\n                onHoverPurchase={onHoverPurchase}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                type={type}\n            />\n        );\n\n        if (!is_vanilla) {\n            switch (getContractTypePosition(type)) {\n                case 'top':\n                    components.unshift(purchase_fieldset);\n                    break;\n                case 'bottom':\n                    components.push(purchase_fieldset);\n                    break;\n                default:\n                    components.push(purchase_fieldset);\n                    break;\n            }\n        } else if (vanilla_trade_type === type) {\n            components.push(purchase_fieldset);\n        }\n    });\n\n    const should_disable_accu_purchase =\n        is_accumulator &&\n        !!active_positions.find(\n            ({ contract_info, type }) => isAccumulatorContract(type) && contract_info.underlying === symbol\n        );\n\n    if (should_disable_accu_purchase) {\n        components.unshift(\n            <PurchaseButtonsOverlay\n                is_to_cover_one_button={components.length === 1}\n                key='overlay'\n                message={localize('You can only purchase one contract at a time')}\n            />\n        );\n    }\n    return components;\n});\n\nexport default Purchase;\n","import { isEmptyObject, getPropertyValue } from '@deriv/shared';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const hasCallPutEqual = contract_type_list => {\n    if (isEmptyObject(contract_type_list)) return false;\n\n    return ((getPropertyValue(contract_type_list, 'Ups & Downs') || {}).categories || []).some(\n        contract => contract.value === 'rise_fall_equal'\n    );\n};\n\nexport const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {}).reduce(\n        (key, list) => [...key, ...contract_type_list[list].categories.map(contract => contract.value)],\n        []\n    );\n\n    const contract_duration_list = contract_list.map(list => ({\n        [list]: getPropertyValue(ContractType.getFullContractTypes(), [\n            list,\n            'config',\n            'durations',\n            'units_display',\n            contract_start_type,\n        ]),\n    }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    if (hasCallPutEqual(contract_type_list)) {\n        const found = contract_duration_list.filter(contract => contract && contract.rise_fall_equal);\n        if (found.length > 0) {\n            return found[0].rise_fall_equal.some(duration => duration.value === duration_unit);\n        }\n    }\n\n    return false;\n};\n\nexport const isRiseFallEqual = contract_type => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n","export const onToggleCancellation = ({ has_cancellation, onChangeMultiple }) => {\n    // e.target.checked is not reliable, we have to toggle its previous value\n    const new_val = !has_cancellation;\n    onChangeMultiple({\n        has_cancellation: new_val,\n        ...(!new_val\n            ? {\n                  // reset deal cancellation price\n                  cancellation_price: undefined,\n              }\n            : {\n                  // unchecked Stop loss\n                  has_stop_loss: false,\n                  has_take_profit: false,\n              }),\n    });\n};\n\nexport const onChangeCancellationDuration = ({ event, onChangeMultiple }) => {\n    const { value } = event.target;\n    onChangeMultiple({\n        has_cancellation: true,\n        has_take_profit: false,\n        has_stop_loss: false,\n        cancellation_duration: value,\n    });\n};\n"],"names":["Fieldset","children","className","header","header_tooltip","is_center","is_tooltip_disabled","onMouseEnter","onMouseLeave","fieldset_header_class","classNames","fieldset_info_class","Popover","alignment","icon","is_bubble_hover_enabled","message","margin","relative_render","propTypes","PropTypes","NumberSelector","arr_arr_numbers","name","onChange","selected_number","should_show_in_percents","handleSelect","item","target","getAttribute","value","map","arr_numbers","idx","key","i","onClick","LabeledQuantityInputMobile","input_label","props","wrapper_classname","InputField","React","observer","proposal_info","useTraderStore","currency","has_cancellation","id","cancellation","error","has_error","is_row_layout","setIsRowLayout","ref","current","el_height","parentElement","clientHeight","isDesktop","getDecimalPlaces","isMobile","localize","Money","amount","ask_price","show_currency","ValueMovement","has_error_or_not_loaded","has_increased","is_turbos","is_vanilla","obj_contract_basis","should_format","Icon","ContractInfo","basis","growth_rate","is_loading","is_accumulator","is_multiplier","should_fade","type","localized_basis","getLocalizedBasis","basis_text","payout_per_point","payout","stake","stakeOrPayout","text","toLowerCase","DesktopWrapper","MobileWrapper","Text","size","weight","color","getGrowthRatePercentage","getCurrencyDisplayCode","Localize","i18n_default_text","components","values","title","getContractSubtype","maximum_payout","maximum_ticks","content","label","tooltip_text","line_height","align","as","zIndex","Expiration","is_text_only","text_size","expiration","start_time","useStore","common","server_time","formatDuration","getDiffDuration","unix","days","timestamp","date","getDateFromNow","style","display","alignItems","justifyContent","marginRight","MultipliersInfo","commission_text_size","stop_out_text_size","is_tooltip_relative","should_show_tooltip","trade","has_stop_loss","multiplier","commission","stop_out","commission_text","stop_out_text","commission_tooltip","commission_percentage","Number","toFixed","stop_out_tooltip","stop_out_percentage","Math","floor","abs","getInfo","ui","client","addToast","removeToast","current_focus","setCurrentFocus","is_single_currency","validation_errors","stop_loss","onChangeMultiple","InputWithCheckbox","classNameInlinePrefix","classNameInput","defaultChecked","error_messages","undefined","is_negative_disabled","is_input_hidden","max_value","e","new_val","tooltip_label","tooltip_alignment","error_message_alignment","take_profit","has_take_profit","barrier_1","setHoveredBarrier","barrier_choices","is_barriers_table_expanded","setIsBarriersTableExpanded","is_mobile_tooltip_visible","setIsMobileTooltipVisible","selected_barrier","setSelectedBarrier","toggleBarriersTable","onBarrierClick","barrier","header_tooltip_text","price_position","barriers_header_mobile","is_open","MobileDialog","onClose","portal_element_id","visible","header_classname","barriers_list","selected_item","show_table","subheader","onClickCross","onHover","Barrier","is_minimized","is_absolute_only","barrier_2","barrier_count","barrier_pipsize","duration_unit","trade_types","show_modal","setShowModal","type_with_current_spot","Object","keys","find","spot","contract_info","current_spot","current_barrier_price","has_spot_increased","usePrevious","barrier_title","input_class","is_absolute_barrier","format","float_value","parseFloat","sign","toString","is_float","is_signed","Modal","should_header_stick_body","toggleModal","height","width","is_incrementable","is_incrementable_on_long_press","is_read_only","BarriersListBody","ThemedScrollbars","autohide","BarriersList","CSSTransition","appear","in","timeout","enter","enterDone","exit","unmountOnExit","LastDigit","last_digit","arr_five","Array","contract_type","stake_boundary","vanilla_trade_type","isVanillaContract","toUpperCase","min_stake","max_stake","isNaN","strike","strike_price_list","is_title_centered","Div100vhContainer","max_autoheight_offset","trade_type","payout_status","classNameWrapper","classNameBubble","RadioGroup","onToggle","selected","Item","String","Strike","strike_price_choices","expiry_type","expiry_date","advanced_duration_unit","setIsOpen","should_open_dropdown","setShouldOpenDropdown","selected_value","setSelectedValue","toggleWidget","is_24_hours_contract","toMoment","isSame","is_relative_strike_applicable","strike_price","Dropdown","classNameDisplay","disabled","is_alignment_left","is_nativepicker","list","no_border","isTurbosContract","tab_list","TURBOS","LONG","is_displayed","SHORT","ButtonToggle","buttons_arr","filter","is_animated","TurbosTradeDescription","index","TradeTypeTemplate","category","styles","xmlns","fill","rx","d","clipPath","transform","ContractTypeDescriptionVideo","selected_contract_type","data_testid","is_dark_theme","is_dark_mode_on","getVideoSource","extension","getUrlBase","mp4_src","webm_src","autoPlay","loop","playsInline","disablePictureInPicture","controlsList","onContextMenu","preventDefault","preload","controls","src","substring","list_item_text","TABS","onClickGoBack","selected_tab","setSelectedTab","contract_types","getContractTypes","has_toggle_buttons","test","should_show_video","is_description_tab_selected","is_glossary_tab_selected","scroll_bar_height","onClickGlossary","cards","left","has_rounded_button","Button","interpolation","escapeValue","secondary","SearchInput","onClickClearInput","Input","leading_icon","trailing_icon","placeholder","displayName","categories","is_info_dialog_open","onBackButtonClick","onCategoryClick","onChangeInput","show_loading","input_ref","input_value","setInputValue","contract_category","getContractCategoryKey","selected_category_contract","contract_categories","length","focus","renderChildren","action_bar_item","Loading","is_fullscreen","VerticalTab","Layout","Headers","header_title","items","selectedKey","IconCategory","findContractCategory","handleInfoClick","includes","base_contract_type","exec","some","c","is_new","ContractType","Dialog","current_mobile_title","has_content_scroll","ContractTypeMenu","Display","List","Info","languageChanged","wrapper_ref","is_dialog_open","setDialogVisibility","setInfoDialogVisibility","selected_category","setSelectedCategory","search_query","setSearchQuery","setItem","handleClickOutside","event","contains","document","addEventListener","removeEventListener","clicked_item","list_with_category","contract_type_category_icon","getContractTypeCategoryIcons","order_arr","ordered_list","sort","a","b","indexOf","accumulators_category","multipliers_category","options_category","push","component","reduce","prev","tabIndex","searchQueryItem","categoryItem","Contract","contract_types_list","is_digit_view","is_mobile_digit_view_selected","symbol","current_language","getAvailableContractTypes","unsupported_contract_types_list","digits_message","underlying_name","getMarketNamesMap","prev_lang","isDigitTradeType","PurchaseButtonsOverlay","is_to_cover_one_button","desktop_text_size","ButtonTextWrapper","is_high_low","getContractTypeDisplay","IconComponentWrapper","IconTradeTypes","PurchaseButton","button_value","buy_info","has_deal_cancellation","info","is_disabled","is_proposal_empty","purchased_states_arr","setPurchaseState","onClickPurchase","getIconType","is_button_disabled","non_multiplier_info_right","returns","PurchaseFieldset","is_market_closed","is_proposal_error","onHoverPurchase","setShouldFade","purchase_button","Purchase","active_positions","portfolio","purchase_states","is_mobile","is_purchase_enabled","onPurchase","purchase_info","is_trade_enabled","isLoading","isEmptyObject","purchase_fieldset","getContractTypePosition","unshift","should_disable_accu_purchase","isAccumulatorContract","underlying","hasCallPutEqual","contract_type_list","getPropertyValue","contract","hasDurationForCallPutEqual","contract_start_type","contract_duration_list","getFullContractTypes","found","rise_fall_equal","duration","isRiseFallEqual","onToggleCancellation","cancellation_price","onChangeCancellationDuration","cancellation_duration"],"sourceRoot":""}