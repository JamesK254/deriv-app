{"version":3,"file":"trader/js/trader.trader-app.d90a82aba1a1b8b2d1e7.js","mappings":";8TAKA,SAFqBA,EAAAA,EAAAA,eAA8B,MCC/B,2EAAIC,87DC2DxB,QAtDwB,SAA6CC,GACjE,IAAkD,KAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA3CC,EAAU,KAAEC,EAAY,KACuB,KAAfF,EAAAA,EAAAA,WAAS,GAAM,GAA/CG,EAAa,KAAEC,EAAa,KACU,KAAnBJ,EAAAA,EAAAA,YAAmB,GAAtCK,EAAK,KAAEC,EAAQ,KACoC,KAAlCN,EAAAA,EAAAA,YAAkC,GAAnDO,EAAI,KAAEC,EAAO,KACdC,GAAaC,EAAAA,EAAAA,UACbC,GAAKC,EAAAA,EAAAA,SAELC,GAAYC,EAAAA,EAAAA,cACd,WAAyC,2BAArCC,EAAK,yBAALA,EAAK,gBACL,IAAMC,EAAOD,aAAK,EAALA,EAAQ,GACfE,EAAUD,GAAQ,YAAaA,EAAQA,EAAKC,aAAuCC,EAEzFhB,GAAa,GACbE,GAAc,GAcd,IAAI,MACAK,EAAWU,QAAUR,EAAGE,yWAAU,WAAGd,EAAO,GAAC,gBAAa,GAAC,GAAMkB,GAAW,CAAC,IAAMJ,WAZxE,SAACO,GACZZ,EAAQY,GACRlB,GAAa,EACjB,IAGgB,SAACkB,GACbd,EAASc,EAASf,OAClBH,GAAa,EACjB,GAOA,CAAE,MAAOmB,GACLf,EAASe,EACb,CACJ,GACA,CAACV,EAAIZ,IAGHuB,GAAcR,EAAAA,EAAAA,cAAY,WAAM,QAChB,QAAlB,EAAAL,EAAWU,eAAO,OAAa,QAAb,EAAlB,EAAoBG,mBAAW,OAA/B,UACAlB,GAAc,EAClB,GAAG,IAQH,OANAmB,EAAAA,EAAAA,YAAU,WACN,OAAO,WACHD,GACJ,CACJ,GAAG,CAACA,IAEG,CAAET,UAAAA,EAAWS,YAAAA,EAAarB,WAAAA,EAAYE,cAAAA,EAAeE,MAAAA,EAAOE,KAAAA,EACvE,EChDA,QAViB,WACb,IAAMiB,GAAQC,EAAAA,EAAAA,YAAWC,GAEzB,IAAKF,EACD,MAAM,IAAIG,MAAM,8CAGpB,OAAOH,CACX,ECLA,IAAMI,GAAwBC,EAAAA,EAAAA,KAAS,YAAoD,IAAjDC,EAAQ,EAARA,SACtC,EAA4BC,EAAgB,kBAApCxB,EAAI,EAAJA,KAAMM,EAAS,EAATA,UAEQmB,EAClBC,IADAC,eAAkBF,OAetB,OAZAT,EAAAA,EAAAA,YAAU,WACNV,EAAU,CAAEI,QAAS,CAAEkB,cAAe,QAC1C,GAAG,CAACtB,KAEJU,EAAAA,EAAAA,YAAU,WACN,GAAIhB,EAAM,CACN,IAAQ2B,EAAmB3B,EAAnB2B,eAEJA,GAAgBF,GAAO,SAAAI,GAAI,OAAIC,IAAMD,EAAMF,EAAe,GAClE,CACJ,GAAG,CAACF,EAAQzB,IAEL,oCAAGuB,EACd,IAEA,syBC1BqE,IAEhDQ,EAAS,WAG1B,WAAYvC,EAAcwC,gGAAgC,cAF1DhC,UAAsBW,GAGlBsB,EAAAA,EAAAA,gBAAeC,KAAM,CACjBlC,KAAMmC,EAAAA,WACNV,OAAQW,EAAAA,OAAOC,MACfC,QAASF,EAAAA,OAAOC,SAGpBE,EAAAA,EAAAA,IAAgBL,KAAM,CAAE1C,KAAAA,EAAMgD,WAAY,CAAC,QAASC,QAASC,OAAOC,eAAgBC,MAAK,kBACrFZ,aAAe,EAAfA,GAAmB,GAE3B,WAQC,SARA,0BAED,SAAOhC,GACHkC,KAAKlC,KAAOA,aAAgB6C,SAAW7C,EAAKkC,KAAKlC,MAAQA,CAC7D,GAAC,qBAED,YACI8C,EAAAA,EAAAA,IAAeZ,KACnB,oFAAC,EArByB,+pDCHM,IAGfa,EAAkB,yTACnC,aAAc,wHACJ,qBACV,CAAC,8FAHkC,CAAShB,+pDCDhD,IAAMiB,EAAQ,CACVC,KAAK,EACLC,KAAK,EACLC,KAAK,GAIYC,EAAiB,yTAClC,aAAc,gIACJ,qBAAqB,WAElB,EAAKpD,MAAM,EAAKyB,OAAOuB,GAGxB,EAAKhD,MAAQqD,OAAOC,KAAK,EAAKtD,MAAMuD,SAAWF,OAAOC,KAAKN,GAAOO,QAClE,EAAK9B,QAAO,SAAA+B,GACR,IAAMxD,EAAOgD,EAOb,OALAK,OAAOC,KAAKN,GAAOS,SAAQ,SAAAC,QAEL/C,IAAd6C,EAAIE,KAAqB1D,EAAK0D,GAAQF,EAAIE,GAClD,IAEO1D,CACX,GAER,GACJ,CAAC,8FApBiC,CAAS+B,uuCCyB/C,QA5BsB,SAAH,GAA6E,IAAvER,EAAQ,EAARA,SAAUN,EAAK,EAALA,MACzB0C,GAAyBC,EAAAA,EAAAA,UAAQ,WAEnC,MAAI,YAAa3C,GAASA,EAAM4C,QAAgB5C,EAGzC,OACAA,GAAK,IACRU,eAAgB,IAAIoB,EACpBe,cAAe,IAAIV,GAE3B,GAAG,CAACnC,IAUJ,OARAD,EAAAA,EAAAA,YAAU,WACN,OAAO,WACHqC,OAAOU,OAAOJ,GAAeF,SAAQ,SAAAO,GACZ,WAAjB,EAAOA,IAAsB,YAAaA,GAAOA,EAAM1B,SAC/D,GACJ,CACJ,GAAG,CAACqB,IAGA,kBAAC,EAAaM,SAAQ,CAACD,MAAOL,GAC1B,kBAAC,EAAqB,KAAEpC,GAGpC,qPC5BM2C,EAAW,CACbC,QAAS,CACLC,EAAG,EACHC,QAAS,GAEbC,QAAS,CACLF,EAAG,GACHC,QAAS,GAEbE,WAAY,CACRC,KAAM,SACNC,UAAW,IACXC,QAAS,GACTC,SAAU,KAIZC,EAAS,SAAH,OAAMrD,EAAQ,EAARA,SAAUsD,EAAS,EAATA,UAAWC,EAAU,EAAVA,WAAYC,EAAO,EAAPA,QAAO,OACtDD,EACI,kBAACE,EAAA,EAAOC,IAAG,CACPX,QAASJ,EAASI,QAClBH,QAASD,EAASC,QAClBI,WAAYL,EAASK,WACrBM,UAAWA,EACXK,IAAKH,GAEJxD,GAEL,IAAI,EAEZqD,EAAOO,UAAY,CACf5D,SAAU6D,IAAAA,KACVP,UAAWO,IAAAA,OACXN,WAAYM,IAAAA,KACZL,QAASK,IAAAA,QClCb,IAAMC,EAAiB,CACnBf,QAAS,CACLF,GAAI,GACJC,QAAS,GAEbF,QAAS,CACLC,EAAG,EACHC,QAAS,GAEbE,WAAY,CACRI,SAAU,KAIZW,EAAoB,CACtBhB,QAAS,CACLF,EAAG,GACHC,QAAS,GAEbF,QAAS,CACLC,EAAG,EACHC,QAAS,GAEbE,WAAY,CACRI,SAAU,KAIZY,EAAU,SAAH,GAA2D,IAArDhE,EAAQ,EAARA,SAAUsD,EAAS,EAATA,UAAWE,EAAO,EAAPA,QAASD,EAAU,EAAVA,WAC7C,MAAa,WADgD,EAAJN,KAGjD,oCACKM,GACG,kBAACE,EAAA,EAAOC,IAAG,CACPX,QAASgB,EAAkBhB,QAC3BH,QAASmB,EAAkBnB,QAC3BI,WAAYe,EAAkBf,WAC9BM,UAAWA,EACXK,IAAKH,GAEJxD,IAOjB,oCACKuD,GACG,kBAACE,EAAA,EAAOC,IAAG,CACPX,QAASe,EAAef,QACxBH,QAASkB,EAAelB,QACxBI,WAAYc,EAAed,WAC3BM,UAAWA,EACXK,IAAKH,GAEJxD,GAKrB,EAEAgE,EAAQJ,UAAY,CAChB5D,SAAU6D,IAAAA,KACVP,UAAWO,IAAAA,OACXN,WAAYM,IAAAA,KACZL,QAASK,IAAAA,OACTZ,KAAMY,IAAAA,gRCpEJI,EAAsB,SAAH,OAAMC,EAAK,EAALA,MAAK,OAChC,kBAAC,KAAa,CACVC,OAAQ,IACRC,MAAO,IACPF,MAAOA,EACPG,gBAAiB,2BACjBC,gBAAiB,wBAEjB,0BAAMC,EAAE,KAAK1B,EAAE,KAAK2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MACpD,0BAAMI,EAAE,MAAM1B,EAAE,KAAK2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MACrD,0BAAMI,EAAE,KAAK1B,EAAE,KAAK2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MACpD,0BAAMI,EAAE,KAAK1B,EAAE,KAAK2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,MAAMD,OAAO,MACrD,0BAAMI,EAAE,IAAI1B,EAAE,KAAK2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,MAAMD,OAAO,MACpD,0BAAMI,EAAE,KAAK1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MACrD,0BAAMI,EAAE,KAAK1B,EAAE,IAAI2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,OACnD,0BAAMI,EAAE,MAAM1B,EAAE,KAAK2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,OACrD,0BAAMI,EAAE,KAAK1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MACrD,0BAAMI,EAAE,MAAM1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MACtD,0BAAMI,EAAE,MAAM1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MACtD,0BAAMI,EAAE,KAAK1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MACrD,0BAAMI,EAAE,KAAK1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MACrD,0BAAMI,EAAE,MAAM1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MACtD,0BAAMI,EAAE,MAAM1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MAC1C,EAGpBF,EAAoBL,UAAY,CAC5BM,MAAOL,IAAAA,qCC1BLa,EAAoB,SAAH,OAAMR,EAAK,EAALA,MAAK,OAC9B,oCACI,kBAAC,EAAAS,cAAa,KACV,kBAAC,KAAa,CACVR,OAAQ,IACRC,MAAO,IACPF,MAAOA,EACPG,gBAAiB,2BACjBC,gBAAiB,uBACjBM,QAAQ,eAER,0BAAML,EAAE,MAAM1B,EAAE,KAAK2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,KAAKD,OAAO,MACrD,0BAAMI,EAAE,IAAI1B,EAAE,KAAK2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,MAAMD,OAAO,OACpD,0BAAMI,EAAE,IAAI1B,EAAE,KAAK2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,MAAMD,OAAO,OACpD,0BAAMI,EAAE,IAAI1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,MAAMD,OAAO,OACrD,0BAAMI,EAAE,MAAM1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,MAAMD,OAAO,SAG/D,kBAAC,EAAAU,eAAc,KACX,kBAAC,KAAa,CACVV,OAAQ,IACRC,MAAO,IACPF,MAAOA,EACPG,gBAAiB,2BACjBC,gBAAiB,wBAEjB,0BAAMC,EAAE,IAAI1B,EAAE,IAAI2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,MAAMD,OAAO,OACnD,0BAAMI,EAAE,IAAI1B,EAAE,KAAK2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,MAAMD,OAAO,QACpD,0BAAMI,EAAE,IAAI1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,MAAMD,OAAO,QACrD,0BAAMI,EAAE,IAAI1B,EAAE,MAAM2B,GAAG,IAAIC,GAAG,IAAIL,MAAM,MAAMD,OAAO,UAG9D,EAGPO,EAAkBd,UAAY,CAC1BM,MAAOL,IAAAA,ycCtCEiB,EAAmB,SAACC,EAAKC,GAClC,IAAKD,GAAOE,MAAMF,GACd,OAAOA,EAEX,IAAMG,EAAIC,OAAOH,IAAmBD,GAAKK,QAAQJ,GAAkBD,GAC7DM,EAAIH,EAAEI,QAAQ,KACpB,OAAOJ,EAAEK,QAAQ,6BAA6B,SAACC,EAAGC,GAAC,OAAMJ,GAAK,GAAKI,EAAIJ,EAAI,GAAH,OAAMG,EAAC,KAAMA,CAAC,GAC1F,EAEaE,EAAkB,SAAAC,GAC3B,OAAIC,EAAYD,EAAcE,gBACnBC,EAAAA,EAAAA,UAAS,WAEhBC,EAAAA,EAAAA,mBAAkBJ,EAAcE,gBACzBC,EAAAA,EAAAA,UAAS,WAEbA,EAAAA,EAAAA,UAAS,UACpB,EAEaE,EAAkB,SAAAL,GAC3B,OAAIC,EAAYD,EAAcE,eACnBI,EAAaN,GAAeA,EAAcE,eAE9Cf,EAAiBa,EAAcO,QAC1C,EAEaN,EAAc,SAAAC,GAAa,MAAI,QAAQM,KAAKN,EAAcO,cAAc,EAE/EH,EAAe,SAAAN,GAAa,MAAK,CACnCU,WAAWP,EAAAA,EAAAA,UAAS,kBAAmB,CAAEI,QAASP,EAAcO,UAChEI,WAAWR,EAAAA,EAAAA,UAAS,QACpBS,YAAYT,EAAAA,EAAAA,UAAS,qBAAsB,CAAEI,QAASP,EAAcO,UACpEM,UAAUV,EAAAA,EAAAA,UAAS,OACnBW,WAAWX,EAAAA,EAAAA,UAAS,mBAAoB,CAAEI,QAASP,EAAcO,UACjEQ,YAAYZ,EAAAA,EAAAA,UAAS,oBAAqB,CAAEI,QAASP,EAAcO,UACtE,EAEYS,EAAuB,SAAH,EAAkCC,GAAwB,MAApDf,EAAa,EAAbA,cAAegB,EAAS,EAATA,UAC5CC,GAAcC,EAAAA,EAAAA,WAAUH,GACxBI,GAAcC,EAAAA,EAAAA,WAAU,CAAEJ,UAAAA,IAC1BK,GAAanB,EAAAA,EAAAA,mBAAkBF,GAC/BsB,EAAcL,EACd,CAAC,OAAQ,QAAS,MAAO,QACoB,QADb,GAChCM,EAAAA,EAAAA,0BAAyBR,UAAoB,aAA7C,EAA+CO,YAC/CE,EAAQF,aAAW,EAAXA,EAAaG,SAASzB,GACpC,MAA4B,aAAxBe,EAA2CI,EACxCK,IAAUH,IAAeF,EACpC,oOC3BA,QAZgB,SAAH,OAAM1D,EAAS,EAATA,UAAWiE,EAAW,EAAXA,YAAaC,EAAY,EAAZA,aAAcC,EAAK,EAALA,MAAOC,EAAE,EAAFA,GAAE,OAC9D,yBACIA,GAAIA,EACJ,cAAaH,EACbjE,UAAWqE,IAAW,aAAc,eAAF,OAAiBF,GAAS,QAAU,CAAEG,UAAWJ,GAAgBlE,IAElGuE,MAAMC,KAAK,IAAID,MAAM,IAAIE,KAAI,SAACC,EAAIC,GAAG,OAClC,yBAAKtE,IAAKsE,EAAK3E,UAAS,6CAAwC2E,EAAM,EAAC,gBAAQA,EAAM,IAAO,IAE9F,EChBV,IAAMC,EAAc,SAAH,OAAMC,EAAO,EAAPA,QAAmB,SAAV5E,WAExB,yBAAKD,UAAU,2BACX,kBAAC,EAAO,CAACmE,MAAOU,EAAU,OAAS,QAASZ,YAAY,mBAE5D,IAAI,EAEZW,EAAYtE,UAAY,CACpBuE,QAAStE,IAAAA,KACTN,WAAYM,IAAAA,MAGhB,iUCXauE,EAAkB,SAAlBA,EAAmBC,EAAMC,GAClC,IAAIC,EAsBJ,OApBAD,EAAcE,MAAK,SAAAC,GACf,IAAIC,EACJ,IACIA,GAAaC,EAAAA,EAAAA,WAAUN,EAAMI,EACjC,CAAE,MAAOlJ,GACL,GAAI,YAAY4G,KAAK5G,EAAEqJ,SACnB,MAER,CAEA,OAAIF,GACAH,EAASE,GACF,KACAA,EAAWI,SAClBN,EAASH,EAAgBC,EAAMI,EAAWI,QAIlD,IAEON,CACX,gNCJA,MCvBA,EDE8B,SAAH,OAAMhK,EAAK,EAALA,MAAK,OAClC,yBAAK+E,UAAU,mBACX,yBAAKA,UAAU,4BACV/E,EACG,kBAAC,EAAAuK,KAAI,CAACC,MAAM,WAAWC,KAAK,MACvBzK,GAGL,kBAAC,aAAc,KACX,kBAAC,EAAA0K,KAAI,CAACC,KAAK,cAAc5F,UAAU,wBAAwB0F,KAAM,GAAID,MAAM,aAC3E,kBAAC,EAAAD,KAAI,CAACK,MAAM,SAAS7F,UAAU,wBAAwByF,MAAM,WAAWC,KAAK,OACxElD,EAAAA,EAAAA,UACG,mGAMlB,syBETV,IAAMsD,EAA0B,SAAH,GAOvB,IANGC,EAAkB,EAAvBC,IACAC,EAAO,EAAPA,QACAC,EAAe,EAAfA,gBACAC,EAAM,EAANA,OACAC,EAAU,EAAVA,WACGzK,EAAK,OAEA0K,GAAYC,EAAAA,EAAAA,qBAAoBF,GAAhCC,QAMR,OAJAE,IAAAA,WAAgB,WACZN,GACJ,GAAG,CAACF,EAAmB1D,cAAcmE,QAASP,IAG1C,kBAACQ,EAAA,EAAa,CACVC,GAAIL,EACJM,QAAS,IACTtC,WAAY,CACRuC,OAAQ,mCACRC,MAAO,mCACPC,UAAW,wCACXC,KAAM,mCAEVC,UAAWf,EACXgB,eAAa,GAEb,yBAAKjH,UAAU,6BACX,kBAAC,EAAAkH,oBAAmB,KACZnB,EACApK,EAAK,CACTwL,aAAc,WACVjB,GAAgB,EAAMH,EAAoBI,EAC9C,EACAiB,aAAc,WACVlB,GAAgB,EAAOH,EAAoBI,EAC/C,EACAkB,gBAAiBpB,EACjBqB,uBAAwBlB,MAK5C,EAEMmB,GAAkB9K,EAAAA,EAAAA,KAAS,YAAkB,IAAZd,EAAK,kFACxC,GAAuD6L,EAAAA,EAAAA,KAA/CrB,EAAM,EAANA,OAAuB7C,EAAmB,EAAlCf,cAChB,GAA0D1F,EAAAA,EAAAA,MAAlD4K,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAc,EAAdA,eAAgBC,EAAS,EAATA,UAAWC,EAAE,EAAFA,GAC3CC,EAAaL,EAAbK,SACAC,EAAgBL,EAAhBK,YACAC,EAAoBL,EAApBK,gBAEJC,EAOAL,EAPAK,cACAhN,EAMA2M,EANA3M,MACAiL,EAKA0B,EALA1B,gBACAgC,EAIAN,EAJAM,QACAC,EAGAP,EAHAO,cACAC,EAEAR,EAFAQ,YACoBC,EACpBT,EADAU,mBAGAC,EAUAV,EAVAU,UACAC,EASAX,EATAW,uBACuBC,EAQvBZ,EARAa,sBACAC,EAOAd,EAPAc,SACAC,EAMAf,EANAe,cACAC,EAKAhB,EALAgB,YACAC,EAIAjB,EAJAiB,gBACAC,EAGAlB,EAHAkB,iCACAC,EAEAnB,EAFAmB,0BACAC,EACApB,EADAoB,+BAEEC,EAAa3C,IAAAA,OAAa,MAC1B4C,EAAW5C,IAAAA,OAAa,MACxB6C,EAAgB7C,IAAAA,OAAa,MAEnCA,IAAAA,WAAgB,WACZ2B,GACJ,GAAG,CAACA,IAEJ3B,IAAAA,WAAgB,WAAM,QAClB4C,SAAiB,QAAT,EAARA,EAAUpN,eAAO,OAAjB,EAAmBsN,SAAS,GAC5BD,SAAsB,QAAT,EAAbA,EAAerN,eAAO,OAAtB,EAAwBuN,aAC5B,GAAG,CAACnD,EAAQ7C,IAEZ,IAAMiG,EAAYtB,EAAcuB,QAC5B,SAAAzH,GAAC,OACGA,EAAEM,eACF8D,IAAWpE,EAAEM,cAAcoH,aAC1BnG,EAAoBU,SAAS,WACxBX,EAAAA,EAAAA,IAAqBtB,EAAEM,cAAeqH,EAAAA,OAAOC,SAC7CtG,EAAAA,EAAAA,IAAqBtB,EAAEM,cAAeqH,EAAAA,OAAOE,OAC7CvG,EAAAA,EAAAA,IAAqBtB,EAAEM,cAAeiB,GAAqB,IAEnEuG,EACF,kBAAC,EAAAC,SAAQ,CACLC,YAAaR,EACbS,YAAa,SAAAC,GAAI,OACb,kBAACnE,EAAuB,GACpBI,gBAAiBA,EACjBC,OAAQA,EACR2B,SAAUA,EACVa,SAAUA,EACVR,cAAeA,EACfC,YAAaA,EACbC,cAAeA,EACfN,YAAaA,EACbC,gBAAiBA,EACjBO,UAAWA,EACXK,cAAeA,EACfC,YAAaA,EACbC,gBAAiBA,EACjBC,iCAAkCA,EAClCC,0BAA2BA,EAC3BC,+BAAgCA,GAC5BgB,EACAtO,GACN,EAENuO,UAAW,SAAAlE,GAAG,OAAIA,EAAI5B,EAAE,EACxB+F,QAAS,IAIjB,OACI,kBAAC,aAAc,KACX,yBACInK,UAAWqE,IAAW,uBAAwB,CAC1C,6BAA8BmE,MAGtC,yBACIpE,GAAG,sBACHpE,UAAWqE,IAAW,mBAAoB,CACtC,yBAA0BmE,KAG9B,yBAAKxI,UAAU,4BACX,kBAAC,EAAAwF,KAAI,CAACC,MAAM,YAAY2E,OAAO,OAAO1E,KAAK,OACtClD,EAAAA,EAAAA,UAAS,qBAEd,yBACI4B,GAAG,iCACHpE,UAAU,+BACVqK,QAAS5B,GAET,kBAAC,EAAA9C,KAAI,CAACC,KAAK,kBAGnB,yBAAK5F,UAAU,yBAAyBsK,IAAKpB,GACnB,IAArBK,EAAU7K,QAAgBzD,EAAQ,kBAAC,EAAqB,CAACA,MAAOA,IAAY4O,GAEjF,yBAAK7J,UAAU,4BACX,kBAAC,EAAAuK,QAAO,CACJnG,GAAG,oCACHpE,UAAU,yCACVwK,GAAIjF,EAAAA,OAAOkF,SAEX,kBAAC,EAAAjF,KAAI,CAACE,KAAK,KAAK0E,OAAO,SAClB5H,EAAAA,EAAAA,UAAS,qBAOtC,IAEA+E,EAAgBjH,UAAY,CACxB5D,SAAU6D,IAAAA,KACVmK,uBAAwBnK,IAAAA,KACxBoK,sBAAuBpK,IAAAA,MAG3B,MCzLA,EDyLA,40CE1LA,8lGAAA4B,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAUA,IAEMyI,EAAe,6BAAG,WAAMC,GAAW,uFAClBtP,EAAAA,GAAGuP,aAAaD,GAAY,OAArC,KAAJ1P,EAAO,EAAH,MACDF,MAAO,CAAF,wCACH,CAAE8P,uBAAwB5P,EAAKF,MAAMqK,UAAS,gCAElDnK,GAAI,2CACd,gBANoB,sCAQf6P,EAAY,SAACC,EAAeC,GAG9B,IAFA,IAAI/E,EACIgF,EAAYD,EAAZC,QACChJ,EAAI,EAAGA,EAAIgJ,EAAQzM,OAAQyD,IAEhC,IADA,IAAQiJ,EAAeD,EAAQhJ,GAAvBiJ,WACCC,EAAI,EAAGA,EAAID,EAAW1M,OAAQ2M,IAAK,CAGxC,QAAevP,KADfqK,EADoBiF,EAAWC,GAAvBC,QACSC,MAAK,SAAAC,GAAI,OAAIA,EAAKrF,SAAW8E,CAAa,KACjC,OAAO9E,CACrC,CAER,EAEMsF,EAAoB,SAAAC,GACtB,IAAMC,EAAaD,EAAyBE,KAAKC,MACjD,OAAOF,EAAa,EACd,CACIG,KAAMC,KAAKC,MAAML,EAAa,OAC9BM,MAAOF,KAAKC,MAAOL,EAAa,KAAoB,IACpDO,QAASH,KAAKC,MAAOL,EAAa,IAAO,GAAM,IAC/CQ,QAASJ,KAAKC,MAAOL,EAAa,IAAQ,KAE9C,CAAC,CACX,EAEMS,GAAuB3P,EAAAA,EAAAA,KAAS,YAA+D,IAA5D4P,EAAY,EAAZA,aAAcC,EAAiB,EAAjBA,kBAAmBC,EAAY,EAAZA,aAAcpG,EAAM,EAANA,OAC5EqG,GAAmBhF,EAAAA,EAAAA,KAAnBgF,eACFC,GAAYC,EAAAA,EAAAA,gBACgD,IAAlBnG,IAAAA,SAAe,CAAC,GAAE,GAA3DoG,EAAiB,KAAEC,EAAkB,KACiE,IAA5ErG,IAAAA,SAAekF,EAAkBkB,aAAiB,EAAjBA,EAAmBjB,yBAAwB,GAAtGmB,EAAS,KAAEC,EAAW,KACwB,IAApBvG,IAAAA,UAAe,GAAK,GAA9C1L,EAAU,KAAEkS,EAAU,KAE7BxG,IAAAA,WAAgB,WACZ,IAAK8F,GAAiBA,IAAgBW,EAAAA,EAAAA,gBAAeR,EAAgBrG,GAAU,CAC3E4G,GAAW,GAEX,IAAME,EAAe,6BAAG,WAAOC,EAAajC,GAAa,8FAEjDiC,EAhDc,GAgDyB,yCAAS,CAAC,GAAC,OAES,OAAzDC,EAAcC,IAAO,IAAIxB,MAAQyB,IAAIH,EAAa,QAAO,SACpCtC,EAAgBuC,EAAYG,OAAO,eAAc,OAA1D,IAAZC,EAAe,EAAH,MACAxC,uBAAwB,CAAF,gBAGiD,GAHjD,EAClBC,EAAUC,EAAesC,EAAarC,eAAhDsC,EAAK,EAALA,MACAC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,QAC6B,KAAjBD,aAAI,EAAJA,EAAM/O,SAA4B,OAAZ+O,EAAK,IAA4B,OAAbC,EAAM,IACnD,CAAF,yCAEVT,EAAgBC,EAAc,EAAGjC,IAAc,QAEpD0C,EAAWR,EAAYS,cAAcC,UAAU,EAAG,IAClDC,EAAa,SAAAC,GAAI,OAAI,IAAInC,KAAK,GAAD,OAAI+B,GAAQ,OAAGI,EAAI,KAAI,EACjD5L,EAAI,EAAC,aAAEA,GAAIsL,aAAI,EAAJA,EAAM/O,SAAM,iBACkB,MAAhCoP,EAAWL,EAAKtL,IAAMyJ,KAAKC,MAC9B,GAAC,iBACsC,GAA9CH,GAA0BoC,EAAWL,EAAKtL,KACtCsK,KAAexB,IAAkB9E,EAAM,0CAChCyG,EAAmB,CACtBM,YAAAA,EACAc,aAAcP,EAAKtL,GACnBuJ,uBAAAA,KACF,QAToBvJ,IAAG,wBAarC8K,EAAgBC,EAAc,EAAGjC,GAAe,4CAEvD,gBA/BoB,wCAiCrBgC,EAAgB,EAAG9G,EACvB,CAEJ,GAAG,CAACA,IAEJI,IAAAA,WAAgB,WACZ,IAAI0H,EAUJ,OATItB,SAAAA,EAAmBjB,yBACnBuC,EAAQC,YAAW,WACfpB,EAAYrB,EAAkBkB,EAAkBjB,yBAC5C,IAAIE,KAAKe,EAAkBjB,yBAA2B,IAAIE,KAAS,MACnEmB,GAAW,GACPV,GAAcE,GAAa,GAEvC,GAAG,MAEA,WACC0B,GACAE,aAAaF,EAErB,CACJ,GAAG,CAACpB,EAAWF,EAAmBJ,EAAcF,IAEhD9F,IAAAA,WAAgB,WACP1L,GAAYyR,GAAkB,EACvC,GAAG,CAACzR,EAAYyR,IAEhB,IAAI8B,EAAmB,GAEvB,GAAI5P,OAAOC,KAAKoO,GAAWnO,OAAQ,CAC/B,IAAMuN,GAA0B,GAAjBY,EAAUf,KAAYe,EAAUZ,OAAOoC,WAAWC,SAAS,EAAG,KACvEpC,EAAUW,EAAUX,QAAQmC,WAAWC,SAAS,EAAG,KACnDnC,EAAUU,EAAUV,QAAQkC,WAAWC,SAAS,EAAG,KACzDF,EAAmB,GAAH,OAAMnC,EAAK,YAAIC,EAAO,YAAIC,EAC9C,CAEA,IAAMQ,IAAqByB,EAAmB,OAAO,KAErD,IAAQJ,EAA8BrB,EAA9BqB,aAAcd,EAAgBP,EAAhBO,YAClBqB,EAAsB,KAC1B,GAAIP,EAAc,CACd,IAAMQ,GAAyBC,EAAAA,EAAAA,mBAAkBT,GAC3Cb,EAAcC,IAAO,IAAIxB,MAAQyB,IAAIH,EAAa,QAClDwB,EAAevB,EAAYG,OAAO,eAClCqB,EAAcxB,EAAYG,OAAO,QACvCiB,EACI,kBAAC,EAAA/I,KAAI,CACDK,MAAM,SACN+I,GAAG,IACH5O,UAAU,sCACV6O,YAAY,IACZpJ,MAAM,YACNC,KAAM2G,EAAe,IAAM,KAC3BjC,OAAO,QAEP,kBAAC,EAAA0E,SAAQ,CACLC,kBAAkB,gFAClBC,WAAY,CAAC,yBAAK3O,IAAK,KACvBnB,OAAQ,CACJsP,uBAAAA,EACAG,YAAAA,EACAD,aAAAA,KAKpB,CAIA,OAFI7T,GAAYkS,GAAW,GAGvB,kBAAC,aAAc,KACX,kBAAC,EAAAvH,KAAI,CACDoJ,GAAG,IACH5O,UAAWqE,IAAW,oCAAqC,CACvD,+CAAgDgI,IAEpDwC,YAAY,IACZnJ,KAAM2G,EAAe,KAAO,OAE5B,kBAAC,EAAAyC,SAAQ,CAACC,kBAAkB,uBAE/BR,EACD,kBAAC,EAAA/I,KAAI,CACDK,MAAM,SACN+I,GAAG,IACH5O,UAAWqE,IAAW,sCAAuC,CACzD,iDAAkDgI,IAEtDwC,YAAY,IACZnJ,KAAM2G,EAAe,KAAO,OAE5B,kBAAC,EAAAyC,SAAQ,CAACC,kBAAkB,yBAEhC,kBAAC,EAAAvJ,KAAI,CACDoJ,GAAG,IACH5O,UAAWqE,IAAW,kCAAmC,CACrD,6CAA8CgI,IAElDwC,YAAY,IACZpJ,MAAM,YACNC,KAAM2G,EAAe,IAAM,KAC3BjC,OAAO,QAENgE,GAEL,yBAAKpO,UAAU,wCAG3B,IAEAoM,EAAqB9L,UAAY,CAC7B+L,aAAc9L,IAAAA,KACd+L,kBAAmB/L,IAAAA,KACnBgM,aAAchM,IAAAA,KACd4F,OAAQ5F,IAAAA,OAAiB0O,YAG7B,yiCCzMA,IAAMC,EAAwB,SAAH,GAAyF,IAAnFC,EAAK,EAALA,MAAOC,EAAsC,EAAtCA,uCAAwC/E,EAAO,EAAPA,QAASkC,EAAY,EAAZA,aAAcpG,EAAM,EAANA,OACjC,IAApBI,IAAAA,UAAe,GAAK,GAA3D8I,EAAgB,KAAE/C,EAAiB,KAEtChH,EACA,kBAAC,EAAAwJ,SAAQ,CAACC,kBAAkB,wGAE5BO,GAAU9M,EAAAA,EAAAA,UAAS,yBAOvB,OALK4M,IACD9J,EAAU,KACVgK,GAAU9M,EAAAA,EAAAA,UAAS,qBAInB,yBACIxC,UAAWqE,IAAW,2BAA4B,CAC9C,oCAAqCgL,KAGzC,kBAAC,EAAA7J,KAAI,CAACoJ,GAAG,IAAI5O,UAAU,yCAAyCyF,MAAM,YAAY2E,OAAO,QACrF,kBAAC,EAAA0E,SAAQ,CAACC,kBAAkB,2BAEhC,kBAAC,EAAoB,CACjB1C,cAAY,EACZC,kBAAmBA,EACnBC,aAAcA,EACdpG,OAAQA,IAEXb,GACG,kBAAC,EAAAE,KAAI,CAACK,MAAM,SAAS+I,GAAG,IAAI5O,UAAU,yCAAyC0F,KAAK,MAC/EJ,KAGN6J,GAAUA,GAASC,IAClB,kBAAC,EAAAG,OAAM,CAACvP,UAAU,mCAAmCqK,QAASA,EAASmF,KAAMF,EAASG,SAAO,IAI7G,EAEAP,EAAsB5O,UAAY,CAC9B6O,MAAO5O,IAAAA,KACP6O,uCAAwC7O,IAAAA,KACxC8J,QAAS9J,IAAAA,KACTgM,aAAchM,IAAAA,KACd4F,OAAQ5F,IAAAA,QAGZ,6xECjDA,IAAMmP,EAAS,CACXC,UAAW,CACPC,SAAU,OACVC,WAAY,OACZC,SAAU,WACVC,OAAQ,EACRC,WAAY,qBACZvK,MAAO,OACPwK,QAAS,OACTC,UAAW,QACXC,QAAS,OACTC,UAAW,OACXvP,OAAQ,OACRC,MAAO,QAEXuP,UAAW,CACP5K,MAAO,eAEX6K,KAAM,CAAEH,QAAS,OAAQI,UAAW,SAAUC,aAAc,QAC5DC,IAAK,CACDb,SAAU,OACVc,OAAQ,iBACR5P,MAAO,OACPmP,QAAS,SAIXU,IAAOlU,EAAAA,EAAAA,KAAS,WAClB,IAAMmU,GAAS/T,EAAAA,EAAAA,MACTgU,GAAcrJ,EAAAA,EAAAA,KACdsJ,EAAc,CAChBC,MAAOvS,OAAOwS,QAAQH,GACtBpJ,OAAQjJ,OAAOwS,QAAQJ,EAAOnJ,QAC9BI,GAAIrJ,OAAOwS,QAAQJ,EAAO/I,IAC1BD,UAAWpJ,OAAOwS,QAAQJ,EAAOhJ,YAGmB,IAArBrB,IAAAA,UAAe,GAAM,GAAjDtG,EAAU,KAAEgR,EAAY,KACkB,IAAvB1K,IAAAA,SAAe,SAAQ,GAA1CnK,EAAK,KAAE8U,EAAQ,KAEtB3K,IAAAA,WAAgB,WAEZ,OADA4K,SAASC,iBAAiB,QAASC,GAAiB,GAC7C,WACHF,SAASG,oBAAoB,QAASD,EAC1C,CACJ,IAEA,IAAMA,EAAkB,SAAApV,GAEhBA,EAAEsV,SAAyB,KAAdtV,EAAEuV,SAAgBP,GAAchR,EACrD,EAcQ0P,EAAyBD,EAAzBC,UAAWc,EAAcf,EAAde,IAAKH,EAASZ,EAATY,KAExB,OACI,0BAAMlM,GAAG,aAAaqN,MAAK,OAAO9B,GAAS,IAAEQ,QAASlQ,EAAa,QAAU,UACzE,yBAAKwR,MAAOnB,GACP9R,OAAOC,KAAKqS,GAAarM,KAAI,SAAA7G,GAAO,OACjC,uBACIyC,IAAKzC,EACLyM,QAAS,kBAAM6G,EAAStT,EAAQ,EAChC6T,MAAK,OAAOhB,GAAG,IAAEiB,WAAY9T,IAAYxB,GAAS,UAEjDwB,EACD,KAGXkT,EAAY1U,GAAOuV,OAAOlN,KA3BR,SAAH,GAAe,aAAVmN,EAAC,KAAEC,EAAC,KAC7B,MACU,eAAND,GACa,mBAANC,GACH,yBAAKxR,IAAKuR,GACN,0BAAMH,MAAO/B,EAAOW,WAAYuB,EAAC,KAAU,IAC1CC,GAAkB,WAAb,EAAOA,GAAiBC,KAAKC,WAAUC,EAAAA,EAAAA,MAAKH,GAAI,KAAM,GAAKA,EAIjF,IAoBJ,IAEAlB,GAAKrQ,UAAY,CACb0Q,QAASzQ,IAAAA,OAGb,0QC9Fa0R,GAAe,SAAAC,GAAc,OACtCA,GACC,SAAA/L,GACG+L,EAAe,CACXC,OAAQ,CACJxX,KAAM,SACNwE,MAAOgH,IAGnB,CAAE,ECCOiM,IAAe3V,EAAAA,EAAAA,KAAS,YAAsB,IAAnB4V,EAAM,EAANA,OAAQC,EAAI,EAAJA,KACpC3K,GAAmB9K,EAAAA,EAAAA,MAAnB8K,eACR,GAKIH,EAAAA,EAAAA,KAJU+K,EAAa,EAAvBC,SACQ/I,EAAU,EAAlBtD,OACesM,EAAU,EAAzBlQ,cACYmQ,EAAc,EAA1BC,WAEIC,EAAkBjL,EAAlBiL,cACR,EAA8FA,EAAtFvQ,cAAAA,OAAa,IAAG,GAAC,EAAC,IAAoEuQ,EAAlEC,YAAAA,OAAW,IAAG,GAAC,EAAC,EAAEC,EAAgDF,EAAhDE,eAAgBC,EAAgCH,EAAhCG,kBAAmBC,EAAaJ,EAAbI,SACjF,OACI,kBAACC,GAAA,EAAM,CACH5Q,cAAeA,EACf6Q,aAAcb,EACdQ,YAAaA,EACbC,eAAgBA,EAChBC,kBAAmBA,EACnBC,SAAUA,EACVT,cAAeA,EACfY,eAAa,EACbb,KAAMA,EACNG,WAAYA,EACZC,eAAgBA,EAChBjJ,WAAYA,GAGxB,IAGa2J,IAAkB3W,EAAAA,EAAAA,KAAS,YAAgE,IAKhG4W,EALmCC,EAAU,EAAVA,WAAYC,EAAuB,EAAvBA,wBAAyBC,EAAW,EAAXA,YAAa/F,EAAI,EAAJA,KACjF5F,GAAOhL,EAAAA,EAAAA,MAAPgL,GACUqK,GAAmB1K,EAAAA,EAAAA,KAA7BgL,SAEFrO,EADsB0D,EAApB4L,gBACwB,OAAS,QAKzC,OAHIH,GAAcA,EAAWI,QACzBL,EAAaC,EAAWI,MAAML,YAG9B,kBAAC,KAAU,CACPG,YAAaA,EACb/F,KAAMA,EACNlF,WAAWoL,EAAAA,EAAAA,YACXJ,wBAAyBA,EACzBrB,eAAgBD,GAAaC,GAC7B/N,MAAOA,EACPyP,aAAcP,GAG1B,IAEaQ,GAAqB,SAAH,OAAMxB,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAMwB,EAAuB,EAAvBA,wBAAuB,OACtE,kBAAC,KAAa,CACVC,OAAQD,EAA0B,kBAACE,GAAA,EAAiB,MAAM,kBAAC5B,GAAY,CAACC,OAAQA,EAAQC,KAAMA,KAChG,EC3DA2B,GAASC,IAAS,CACpBC,OAAQ,kBACJR,EAAAA,EAAAA,YACM,wNACA,uNAAmE,EAC7ES,QAAS,kBAAM,IAAI,EACnBC,OAAM,SAACC,EAAQ3Y,GACX,IAAM4Y,EAAYD,EAAM,QACxB,OAAO,kBAACC,EAAc5Y,EAC1B,IAGE6Y,GAAa,SAAH,OAAMC,EAAgB,EAAhBA,iBAAkBC,EAAgB,EAAhBA,iBAAgB,OACpD,kBAAC,aAAc,KACX,kBAACT,GAAM,CAACS,iBAAkBA,EAAkBD,kBAAkBd,EAAAA,EAAAA,iBAAa7X,EAAY2Y,IAC1E,EAGrBD,GAAWlU,UAAY,CACnBmU,iBAAkBlU,IAAAA,KAClBmU,iBAAkBnU,IAAAA,MAGtB,SAAegG,IAAAA,KAAWiO,+4DCrB1B,IAAMG,GACG,YADHA,GAEG,YAFHA,GAGK,QAGLC,GAA6B,SAAH,GAM1B,MALFC,EAAY,EAAZA,aACAC,EAAiB,EAAjBA,kBACAhN,EAAQ,EAARA,SAAQ,IACR9H,UAAAA,OAAS,IAAG,qCAAkC,EAC9C+U,EAAM,EAANA,OAE2D,KAArBxO,IAAAA,UAAe,GAAM,GAApDyO,EAAY,KAAEC,EAAa,KACsB,KAArB1O,IAAAA,UAAe,GAAM,GAAjD2O,EAAU,KAAEC,EAAY,KACzBC,GAAmBC,EAAAA,EAAAA,aAAYvN,EAAUiN,GAAQ,EAAM,EAAG,GAE1DO,IAAwC,QAApB,EADN/O,IAAAA,OAAa6O,GACMrZ,eAAO,aAAnB,EAAqBwZ,MAAM,KAAK,GAAG,IACyB,KAAjChP,IAAAA,SAAe+O,GAAkB,GAAhFE,EAAoB,KAAEC,EAAqB,KAC5CC,EAAmBnP,IAAAA,SACnBoP,EAAkBpP,IAAAA,OAAa,MAC/BqP,EAAuBrP,IAAAA,SACvBsP,EAAqBtP,IAAAA,SACrBuP,EAAwBV,EAAiBG,MAAM,KAC/CQ,EAAsBD,EAAsB,GAC5CE,GAAgBF,EAAsB,GAAG,GACzCG,GAAqBH,EAAsB,GAAGI,MAAM,GACpDC,EAAMpB,GAAU,EAChBqB,EAAOrB,EAAS,EAAI,IAAM,GAE1BsB,EAAuB,SAAC9Y,EAAQ+Y,EAAaC,EAAOC,GACtDC,cAAcd,EAAgB5Z,SAC9B,IAAM2a,EAAcC,aAAY,WACxBpZ,IAAWoX,IAAee,EAAiB3Z,QAAUya,EACrDd,EAAiB3Z,SAAW2Z,EAAiB3Z,QAAU,GAAK,GACrDwB,IAAWoX,IAAee,EAAiB3Z,QAAUya,EAC5Dd,EAAiB3Z,QAAUgQ,KAAK6K,IAAIlB,EAAiB3Z,QAAU,GAAK,GAC7DwB,IAAWoX,IAAiBe,EAAiB3Z,QAAUwa,EAAQ,GACtEb,EAAiB3Z,SAAW,GAE5BwB,IAAWoX,GAAgBe,EAAiB3Z,UAAYwa,EAAQ,GAAKb,EAAiB3Z,UAAYya,IAElGC,cAAcC,GAElBjB,EAAsBC,EAAiB3Z,QAAU,GACrD,GAAGua,GACHX,EAAgB5Z,QAAU2a,CAC9B,EAEAnQ,IAAAA,WAAgB,WAWZ,GAVIwO,IACAE,GAAc,GACdE,GAAa,GACbS,EAAqB7Z,QAAUmS,YAAW,WACtC+G,GAAc,EAClB,GAAG,KACHY,EAAmB9Z,QAAUmS,YAAW,WACpCiH,GAAa,EACjB,GAAG,MAEQ,IAAXJ,EAAc,CACOwB,EAWTjB,EAXgBkB,EAWGR,EAVrBa,EAAQ9K,KAAK6K,IAAIJ,EAAMD,GAC7Bb,EAAiB3Z,QAAUwa,EACvBA,EAAQC,EACRH,EAAqB1B,GAAa,IAAMkC,EAAON,EAAOC,GAC/CD,EAAQC,EACfH,EAAqB1B,GAAa,IAAMkC,EAAON,EAAOC,GAEtDH,EAAqB1B,GAAe,GAAI4B,EAAOC,EAI3D,CAZwB,IAACD,EAAOC,EAClBK,EAYd,OAAO,WACH1I,aAAayH,EAAqB7Z,SAClCoS,aAAa0H,EAAmB9Z,SAChC0a,cAAcd,EAAgB5Z,QAClC,CACJ,GAAG,CAACgZ,EAAQO,EAAmBU,IAe/B,OACI,kBAAC,MAAU,CAACc,UAdF,SAAAxM,GACNA,IACKuK,GAEDvK,EAAIyM,YAAY,CAAEC,MAAO,KAAMC,MAAO,OAE1C3M,EAAIyM,YAAY,CACZC,OAAQlC,EACRmC,OAAQpC,IAGpB,EAGkC7U,UAAWqE,IAAWrE,EAAWmW,EAAM,MAAQ,SACzE,kBAAC,EAAA3Q,KAAI,CACD4E,OAAO,OACP1E,KAAK,IACLD,MAAO0Q,EAAM,iBAAmB,cAChCnW,UAAWqE,IAAW,GAAD,OAAIrE,EAAS,4BAC1BA,EAAS,uBAAwBgV,IAEzC,cAAY,8BAA4B,UAEpCoB,GAAI,OAAGL,EAAmB,KAC9B,yBAAK/V,UAAWkV,EAAa,GAAH,OAAMlV,EAAS,mBAAoB,IAAKwV,GAA2B,UACzFS,IAER,kBAAC,EAAAzQ,KAAI,CAACE,KAAK,MAAMkJ,GAAG,MAAM5O,UAAS,UAAKA,EAAS,gBAC5CkX,EAAAA,EAAAA,wBAAuBpP,IAIxC,EAEA8M,GAA2BtU,UAAY,CACnCN,UAAWO,IAAAA,OACXuH,SAAUvH,IAAAA,OACVsU,aAActU,IAAAA,OACduU,kBAAmBvU,IAAAA,OACnBwU,OAAQxU,IAAAA,QAGZ,SAAegG,IAAAA,KAAWqO,uiCC1H1B,IAAMuC,GAAgC,SAAH,GAY7B,QAXFC,UAAAA,OAAS,IAAG,UAAO,EACnBvC,EAAY,EAAZA,aACAC,EAAiB,EAAjBA,kBAAiB,IACjB9U,UAAAA,OAAS,IAAG,wCAAqC,EACjD8H,EAAQ,EAARA,SACAuP,EAAS,EAATA,UACAC,EAAc,EAAdA,eACAC,EAAY,EAAZA,aACA/Q,EAAO,EAAPA,QACAuO,EAAM,EAANA,OACAyC,EAAuB,EAAvBA,wBAEiE,KAArBjR,IAAAA,UAAe,GAAM,GAA1DkR,EAAe,KAAEC,EAAgB,KAClCvB,EAAMpB,GAAU,EAChB4C,EAAkBpR,IAAAA,OAAa,MAErCA,IAAAA,WAAgB,WACZ,OAAO,WACH4H,aAAawJ,EAAgB5b,QACjC,CACJ,GAAG,IAEHwK,IAAAA,WAAgB,WACRC,IACAkR,GAAiB,GACjBC,EAAgB5b,QAAU6b,EAAe,KAEjD,GAAG,CAACpR,IAEJ,IAAMoR,EAAiB,SAAA9X,GAAQ,OAC3BoO,YAAW,WACPwJ,GAAiB,EACrB,GAAG5X,EAAS,EAEV+X,EAAsB,WACxB1J,aAAawJ,EAAgB5b,SAC7B4b,EAAgB5b,QAAU6b,EAAe,KAC7C,EAEME,EAA0BvR,IAAAA,SAAc,WAC1C,IAAMwR,EAAa,CAAC,OAAQ,SAC5B,OAAOA,EAAW/T,SAASoT,GACrBW,EAAWxM,MAAK,SAAAyM,GAAE,OAAIA,IAAOZ,CAAS,IACtC,CAAC,MAAO,UAAU7L,MAAK,SAAAyM,GAAE,OAAIA,IAAOZ,CAAS,GACvD,GAAG,CAACA,IAeJ,MAAsB,iBAAXrC,EAA4B,MAClCvO,GAAWsO,GAAqByC,GAAgBC,EAE7C,kBAAC,GAA0B,CACvB1P,SAAUA,EACV+M,aAAcA,EACdC,kBAAmBA,EACnBC,OAAQA,IAGbvO,GAAW8Q,EACd,kBAAC,MAAU,CAACR,UAxBF,SAAAxM,GACNA,IACK+M,GAED/M,EAAIyM,YAAY,CAAEC,MAAO,KAAMC,MAAO,OAE1C3M,EAAIyM,YAAY,CACZC,OAAQM,EACRL,OAAQI,IAGpB,EAakCrX,UAAWqE,IAAWrE,EAAWmW,EAAM,MAAQ,SACzE,0BACInW,UAAS,UAAKA,EAAS,iBACvBmH,aAAc,kBAAMuQ,GAAiB,EAAK,EAC1CtQ,aAAcyQ,EACdI,aAAc,kBAAMP,GAAiB,EAAK,EAC1CQ,WAAYL,EACZ,cAAY,gCAEhB,kBAACpR,EAAA,EAAa,CACVC,GAAI+Q,EACJ9Q,QAAS,CACLI,KAAM,KAEVE,eAAa,EACb5C,WAAU,UAAKrE,EAAS,cAExB,yBAAKA,UAAWqE,IAAW,GAAD,OAAIrE,EAAS,6BAAsB8X,KACzD,kBAAC,EAAAtS,KAAI,CAACE,KAAK,MAAM1F,UAAS,UAAKA,EAAS,YACnCwC,EAAAA,EAAAA,UAAS,uBAEd,kBAAC,EAAAgD,KAAI,CAACE,KAAK,KAAK1F,UAAS,UAAKA,EAAS,UAAUoK,OAAO,QACpD,kBAAC,EAAA+N,MAAK,CAACC,OAAQrD,EAAQjN,SAAUA,EAAUuQ,UAAQ,EAACC,eAAa,QAKjF,IACR,EAEAnB,GAA8B7W,UAAY,CACtC8W,UAAW7W,IAAAA,OACXsU,aAActU,IAAAA,OACduU,kBAAmBvU,IAAAA,OACnBP,UAAWO,IAAAA,OACXuH,SAAUvH,IAAAA,OACV8W,UAAW9W,IAAAA,OACX+W,eAAgB/W,IAAAA,OAChBgX,aAAchX,IAAAA,OACdiG,QAASjG,IAAAA,OACTwU,OAAQxU,IAAAA,OACRiX,wBAAyBjX,IAAAA,MAG7B,SAAegG,IAAAA,KAAW4Q,8SCtH1B,IAAMoB,GAA4B,SAAH,GAOzB,IANFtQ,EAAa,EAAbA,cACA4M,EAAY,EAAZA,aACAC,EAAiB,EAAjBA,kBACA0D,EAAyB,EAAzBA,0BACAhB,EAAuB,EAAvBA,wBACArR,EAAM,EAANA,OAEMsS,EAAyBxQ,EAAcuB,QACzC,gBAAGnH,EAAa,EAAbA,cAAa,OACZA,GAAiB8D,IAAW9D,EAAcoH,aAAcpG,EAAAA,GAAAA,IAAqBhB,EAAe,cAAc,IAGlH,OACI,kBAAC,aAAc,OACRoW,EAAuB/Z,QACtB+Z,EAAuBhU,KAAI,gBAAGpC,EAAa,EAAbA,cAAa,OACvC,kBAAC,GAA6B,IAC1BhC,IAAKgC,EAAcqW,aACfrW,EAAa,CACjBmV,wBAAyBA,IAC3B,IAETgB,KAA+B1D,GAC5B,kBAAC,KAAW,CACR6D,cAAe,CACXC,iBAAkB,MAClB3X,EAAG6T,EACHvV,EAAGsV,GAEPgE,qBAAsB,CAAE7Y,UAAW,gCAKvD,EAEAuY,GAA0BjY,UAAY,CAClC2H,cAAe1H,IAAAA,MACfsU,aAActU,IAAAA,OACduU,kBAAmBvU,IAAAA,OACnBiY,0BAA2BjY,IAAAA,KAC3BiX,wBAAyBjX,IAAAA,KACzB4F,OAAQ5F,IAAAA,QAGZ,SAAegG,IAAAA,KAAWgS,IC/C1B,IAAMO,GAAiB,SAAH,GAAyD,IAAnDhJ,EAAQ,EAARA,SAAUiJ,EAAe,EAAfA,gBAAiBC,EAAiB,EAAjBA,kBACjD,OACI,kBAAC,MAAa,CAAClJ,SAAUA,IAAY6D,EAAAA,EAAAA,YAAa,SAAW,MACzD,kBAAC,MAAS,CAACsF,aAAa,aAAaC,YAAaH,EAAiBI,cAAeH,KACjFI,EAAAA,EAAAA,cAAe,kBAAC,MAAW,CAACH,aAAa,aAAaI,qBAAqB,uBAC3ED,EAAAA,EAAAA,cAAe,kBAAC,MAAK,CAACH,aAAa,aAAaI,qBAAqB,uBACrED,EAAAA,EAAAA,cAAe,kBAAC,MAAS,CAACH,aAAa,gBACvCG,EAAAA,EAAAA,cAAe,kBAAC,MAAK,CAACH,aAAa,eAGhD,EAEAH,GAAexY,UAAY,CACvBwP,SAAUvP,IAAAA,OACVwY,gBAAiBxY,IAAAA,KACjByY,kBAAmBzY,IAAAA,MAGvB,SAAegG,IAAAA,KAAWuS,mxCCtB1B,gmGAAA3W,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,olBAAAA,GAAA,gEAAAA,GAAA,0JAAAA,EAAA,6FAAAA,GAAA,mIAAAA,IAAA,KAAAA,IAAA,6gBAAAA,EAAA,iBAAAA,EAAA,EAAAA,IAAA,EAAAA,GAAA,EAAAA,GAAA,SAeA,IAAMmX,GAAsB,SAAH,GAA6C,IAAvChH,EAAI,EAAJA,KAAMD,EAAM,EAANA,OAAQkH,EAAO,EAAPA,QAASC,EAAS,EAATA,UAYlD,OAXAjT,IAAAA,WAAgB,WACZgT,EAAQjH,EAEZ,GAAG,CAACA,IAEJ/L,IAAAA,WAAgB,WACZiT,EAAUnH,EAEd,GAAG,CAACA,IAGG,IACX,EAEMoH,IAAQhd,EAAAA,EAAAA,KAAS,WACnB,OAA+BI,EAAAA,EAAAA,MAAvB4K,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQG,EAAE,EAAFA,GACxB,GAoBIL,EAAAA,EAAAA,KAnBAkS,EAAe,EAAfA,gBACAC,EAAkB,EAAlBA,mBACAC,EAAkC,EAAlCA,mCACAC,EAAgB,EAAhBA,iBACApF,EAAgB,EAAhBA,iBACAC,EAAgB,EAAhBA,iBACAlC,EAAQ,EAARA,SACAtK,EAAO,EAAPA,QACA4R,EAAS,EAATA,UACAC,EAAiB,EAAjBA,kBACAC,EAAgB,EAAhBA,iBACAC,EAAkB,EAAlBA,mBACAC,EAAiB,EAAjBA,kBACAC,EAAc,EAAdA,eACAhU,EAAM,EAANA,OACAiU,EAAuB,EAAvBA,wBACAhL,EAAsC,EAAtCA,uCACAiL,EAAS,EAATA,UACAzW,EAAU,EAAVA,WAG0B0W,EAI1BzS,EAJA0S,yBACqCC,EAGrC3S,EAHA4S,oCACAC,EAEA7S,EAFA6S,mCACiBC,EACjB9S,EADA4L,gBAEItE,EAAU1H,EAAV0H,MACAyL,EAAmBlT,EAAnBkT,eAEsC,KAAlBrU,IAAAA,SAAe,IAAG,GAAvC8L,EAAM,KAAEmH,EAAS,KACkB,KAAlBjT,IAAAA,SAAe,CAAC,GAAE,GAAnC+L,EAAI,KAAEiH,EAAO,KACyD,KAArBhT,IAAAA,UAAe,GAAM,GAAtEsU,EAAqB,KAAEC,EAAsB,KACe,KAArBvU,IAAAA,UAAe,GAAM,GAA5DwU,EAAgB,KAAEC,EAAiB,KACU,KAApBzU,IAAAA,SAAe,MAAK,GAA7C0U,EAAQ,KAAEC,EAAW,KAC8B,MAApB3U,IAAAA,SAAe,MAAK,GAAnD4U,GAAW,MAAEC,GAAc,MAC8C,MAArB7U,IAAAA,UAAe,GAAM,GAAzEgN,GAAuB,MAAE8H,GAAuB,MACjD/H,GAAa/M,IAAAA,SAEbiN,GAAcjN,IAAAA,SAAc,WAC9B,OAAIsU,EACO,CAAEI,SAAU,cACZF,GAAoBE,EACpB,CAAEA,SAAAA,EAAUE,YAAAA,IAEhB,IACX,GAAG,CAACN,EAAuBE,EAAkBE,EAAUE,KAEvD5U,IAAAA,WAAgB,WAEZ,GADA2B,KACKkS,EAAyB,CAC1B,IAAMkB,EAAS,+BAAG,6FACiD,OAAzDC,EAAoB,CAAC,QAAS,UAAW,eAAgB,SAEpD5B,EAAmB4B,GAAkB,oJAAK,CAAC,EAAC,eADrCC,EAAU,EAApBP,SAAmCQ,EAAa,EAA1BN,YAE1BK,IACAN,EAAYM,GACZJ,GAAeK,IAClB,4CACJ,kBARc,mCAUfH,GACJ,CACA,OAAO,kBAAMxB,GAAW,CAC5B,GAAG,CAAC5R,EAAS4R,EAAWH,EAAoBS,IAE5C7T,IAAAA,WAAgB,YACRoN,EAAAA,EAAAA,aACA6F,EAAU,IAEdsB,GAAuB,GACvBE,GAAkB,EACtB,GAAG,CAAC7U,EAAQqT,EAAWsB,EAAwBV,IAE/C7T,IAAAA,WAAgB,WACZ,IAAMmV,EAAiB,+BAAG,+FAChB1B,IAAkB,OAExBxH,EAAS,CAAEL,OAAQ,CAAExX,KAAM,gBAAiBwE,MAAO,gBAAkB,2CACxE,kBAJsB,oCAKnBub,GAAuCb,IAAqBO,GAA4B3F,GACxFiH,GAGR,GAAG,CAAChB,EAAoCb,IAExC,IAAM8B,GAAgBpV,IAAAA,aAAkB,YAA4B,IAAjBqV,EAAC,EAATvJ,OAAiBwJ,EAAC,EAAPvJ,KAClD,OAAO,kBAACgH,GAAmB,CAACjH,OAAQuJ,EAAGtJ,KAAMuJ,EAAGtC,QAASA,EAASC,UAAWA,GACjF,GAAG,IAOGsC,GAAiB,+BAAG,+EACjB1B,GAIDU,GAAuB,GACvB5M,YAAW,kBAAM4M,GAAuB,EAAM,MAJ9CE,GAAkB,GAClB9M,YAAW,kBAAM8M,GAAkB,EAAM,KAI5C,2CACJ,kBARsB,mCAUjBe,GAAaxV,IAAAA,aACf,gBAAMyV,EAAM,0FACR,kBAAC5I,GAAe,IACZI,YAAaA,GACb/F,KAAMoN,GAAyBE,EAC/BzH,WAAYA,GACZC,wBAAyBA,IACrByI,GACN,GAEN,CAACxI,GAAaqH,EAAuBE,EAAkBzH,GAAYC,KAGjE0I,IAAqBtI,EAAAA,EAAAA,YAAa,iBAAmB,kCACrDuI,GAAsB3V,IAAAA,SAAc,WACtC,OAAI4T,EAAuB,QACvBE,EAAkB,QACf,OACX,GAAG,CAACA,EAAWF,IAEf,OACI,yBACI/V,GAAG,kBACHpE,UAAWqE,IAAW,kBAAmB,iCAChB8V,EAAiB,eAAiB,UAAaA,GAAkBE,KAG1F,kBAAC,EAAA9Y,eAAc,KACX,kBAAC,EAAe,OAKpB,kBAAC,EAAA4a,kBAAiB,CACd/X,GAAG,kBACHpE,UAAU,kBACVoc,aAAahD,EAAAA,EAAAA,aACbiD,cAAeH,IAEf,kBAAC5B,EAAoB,MACrB,kBAAC,aAAc,CACXgC,SAAU,kBAAC,IAAW,CAACzX,QAAS8V,EAAe1a,YAAakG,GAAU0T,KAEtE,kBAAC,EAAAtY,eAAc,KACX,yBAAKvB,UAAWqE,IAAW,2BAA4B,CAAE,sBAAuBT,KAC5E,kBAAC,IAAW,CAAC3D,WAAY4Z,GAAoBD,IAC7C,kBAAC2C,GAAU,CACPR,WAAYA,GACZzI,WAAYA,GACZ6G,eAAgBA,MAI5B,kBAAC,EAAA9Y,cAAa,KACV,kBAAC,IAAW,CAACpB,WAAY4Z,GAAoBD,IAC7C,kBAAC,EAAA4C,iBAAgB,CACbhK,SAvEO,SAAAiK,GAC3BxC,EAA6B,IAAVwC,GACnBpB,GAAkC,IAAVoB,EAC5B,EAqEwBL,aACKlC,IACAxF,GAC0B,IAA3BgF,EAAgBhb,QAChBmb,GACAD,EAEJ5Z,UAAWqE,IAAW,CAAE,sBAAuBT,KAE9CsW,GAAqB,kBAAC9H,GAAY,CAACC,OAAQA,EAAQC,KAAMA,IAC1D,kBAACiK,GAAU,CACPR,WAAYA,GACZzI,WAAYA,GACZqI,cAAezB,EAAoByB,QAAgB7f,EACnDqe,eAAgBA,OAOhC,kBAAC,GAAI,OAET,yBAAKna,UAAWic,IACXxH,IAAqB+F,GAClB,kBAAC,EAAqB,IAClBrL,MAAOA,EACPC,uCAAwCA,GACnCD,GAAS8L,EAAQ,CACtB5Q,QAASyR,GACTvP,aAAcwN,EACd5T,OAAQA,KAGhB,kBAAC,GAAU,CACPsO,iBAAkBA,EAClBC,iBACIA,GAAoBgF,EAAgBhb,OAAS,GAA8B,WAAzBkc,EAAc,SAMxF,IAEA,YAOA,IAAM8B,GAAoBnW,IAAAA,YAAiB,SAAC5K,EAAO2O,GAAG,OAAK,kBAACqS,GAAA,GAAU,IAACC,SAAUtS,GAAS3O,GAAS,IAG7FkhB,IAAepgB,EAAAA,EAAAA,KAAS,SAAAqgB,GAC1B,OAAuCjgB,EAAAA,EAAAA,MAA/BgL,EAAE,EAAFA,GAAIJ,EAAM,EAANA,OAAQE,EAAc,EAAdA,eACZoV,EAA+BpV,EAA/BoV,cAAeC,EAAgBrV,EAAhBqV,YACErC,EAAkB9S,EAAnC4L,gBACA3L,EAAaL,EAAbK,SACR,OAAOiV,EAActY,KAAI,SAAAwY,GACrB,IAAMC,EAASC,GAAAA,EAAWF,EAAOtd,MACjC,OACI,kBAACud,EAAM,IACH7c,IAAK4c,EAAO5c,IACZsa,cAAeA,EACfqC,YAAaA,EACblV,SAAUA,EACVgV,OAAQA,GACJG,GAGhB,GACJ,IAEMV,IAAa9f,EAAAA,EAAAA,KAAS,SAAAd,GACxB,IAAQwe,EAAsDxe,EAAtDwe,eAAgBiD,EAAsCzhB,EAAtCyhB,UAAWrB,EAA2BpgB,EAA3BogB,WAAYzI,EAAe3X,EAAf2X,WAC/C,GAA0DzW,EAAAA,EAAAA,MAAlD4K,EAAM,EAANA,OAAQI,EAAE,EAAFA,GAAIH,EAAM,EAANA,OAAQC,EAAc,EAAdA,eAAgBC,EAAS,EAATA,UAExCyV,EAOA1V,EAPA0V,0BACAC,EAMA3V,EANA2V,mCACAC,EAKA5V,EALA4V,WACAP,EAIArV,EAJAqV,YACAxE,EAGA7Q,EAHA6Q,0BACAQ,EAEArR,EAFAqR,kBACAD,EACApR,EADAoR,gBAEI9Q,EAAkBL,EAAlBK,cACAuV,EAAyE3V,EAAzE2V,wBAAyBC,EAAgD5V,EAAhD4V,2BAA4BhK,EAAoB5L,EAApB4L,gBACrDiK,EAAuChW,EAAvCgW,iBAAkBC,EAAqBjW,EAArBiW,iBAClB7V,EAAqCL,EAArCK,SAAU8V,EAA2BnW,EAA3BmW,uBAClB,GAiBIpW,EAAAA,EAAAA,KAhBAqW,EAAgB,EAAhBA,iBACAnJ,EAAgB,EAAhBA,iBACwBoJ,EAAY,EAApCC,uBACoBC,EAAc,EAAlCC,mBACA/D,EAAiB,EAAjBA,kBACA/T,EAAM,EAANA,OACA+X,EAAY,EAAZA,aACAC,EAAc,EAAdA,eACAC,EAAY,EAAZA,aACAC,EAAQ,EAARA,SACAC,EAAc,EAAdA,eACAC,EAAa,EAAbA,cACAC,EAAW,EAAXA,YACAhS,EAAc,EAAdA,eACAiS,EAAsB,EAAtBA,uBACAC,EAAY,EAAZA,aAGEC,EAAW,CACbC,kBAAkB,EAClBC,UAAWpB,EACXqB,8BAA8B,EAC9BC,SAAUpB,EAAiB7a,cAC3BgN,SAAU0N,EAA0B,SAAW,OAC/CrZ,MAAOsP,EAAkB,OAAS,SAGtC,EAA4C4J,GAA6B,CAAC,EAAlExI,EAAY,EAAZA,aAAcC,EAAiB,EAAjBA,kBAEhB6G,EAAgBpV,IAAAA,aAClB,gBAAG8L,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAI,OACX,kBAACuB,GAAkB,CAACxB,OAAQA,EAAQC,KAAMA,EAAMwB,wBAAyBqG,EAAgBhH,eAAa,GAAG,GAE7G,CAACgH,IAoBC6E,EAAWlB,EAAe,CAACA,GAAY,UAAKE,IAAkBA,EAG9DiB,EAA4B,IAAhBjC,EAAoB,EAAI,GAE1C,OAAK7W,GAAoC,IAA1BqG,EAAe9N,OAG1B,kBAACge,GAAiB,CACdpS,IAAKgJ,EACL0L,SAAUA,EACVrD,eAAgBxB,GAAkBD,KAAsBd,EAAAA,EAAAA,aAAcuC,EAAgBhgB,EAAMggB,cAC5FuD,WAAWvL,EAAAA,EAAAA,YAAa,OAAI7X,EAC5BqjB,0BAA2B,IAC3BC,sBAAoBhG,EAAAA,EAAAA,cAAcc,EAClCmF,qBAAsB,KACtBC,oBAAqB,SAAAzN,GAAC,OAAIsM,GAAgBtM,EAAE,EAC5C0N,UAAWhC,EACXiC,YAAa,CACTC,cAAe3N,KAAK4N,MAAM5N,KAAKC,UAAUvF,KAE7CmT,UAAW,CACPF,cAAe3N,KAAK4N,MAAM5N,KAAKC,UAAUvF,KAE7CoT,SAAU,CACNH,eAAe,GAEnBI,yBAAyBzG,EAAAA,EAAAA,aACzB0G,oBAAoB,EACpB1b,GAAG,QACHuP,UAAUA,EAAAA,EAAAA,YACVoM,SAASpM,EAAAA,EAAAA,YAAasL,OAAYnjB,EAClCkhB,YAAa9C,GAAqBC,EAAiB,EAAI6C,EACvDgD,WAAYzB,EACZ0B,cAAe5B,EACf6B,oBAAqB5B,EACrB6B,iBAAkB3B,EAClBG,SAAUA,EACVf,uBAAwBA,EACxBwC,uBAAwBlG,GAAqBC,EAC7CkG,oBAAqBxC,EACrB1X,OAAQA,EACR4V,WAAYrH,EAAmBqH,EAAa,KAC5CuE,mBAAoB5C,EACpB6C,YAAY,EACZC,cAAe,kBACX,kBAAC,GAAc,CAACzH,gBAAiBA,EAAiBC,kBAAmBA,GAAqB,EAE9FyH,eAAgBrC,EAChBsC,eAAgBxC,EAChByC,yBAA0BvD,EAC1BwD,qBAAsBnC,EACtBC,aAAcA,EACdmC,gBAtEgB,SAAArU,GACpB,IAAMsU,EAAkB,kBAElBC,IAAwBvU,EAAejB,MAAK,SAAAyV,GAAC,OAAIA,EAAEC,SAAWH,CAAe,IACnF,OAAOtU,EACF0J,QACAvE,MAAK,SAACuP,EAAGC,GAAC,OAAMD,EAAEE,aAAeD,EAAEC,cAAgB,EAAI,CAAC,IACxD3c,KAAI,SAAAuc,GAAC,OAAIA,EAAEC,MAAM,IACjBI,QACG,SAACC,EAAKL,GAEF,OAD6B,IAAzBK,EAAItf,QAAQif,IAAgBK,EAAIC,KAAKN,GAClCK,CACX,GACAP,EAAsB,CAACD,GAAmB,GAEtD,EAwDQU,YAAa,CACTC,KAAK9N,EAAAA,EAAAA,YAAa,GAAK,MAG3B,kBAACkJ,GAAY,MACZ1C,GACG,kBAAC,GAAyB,CACtBlS,cAAeA,EACf4M,aAAcA,EACdC,kBAAmBA,EACnB0D,0BAA2BA,EAC3BhB,0BACM8F,EAAmCoE,4BACrCC,EAAAA,EAAAA,kBAAiB7Z,IAAa,EAElC3B,OAAQA,KAhE2B,IAqEvD,IC5ZA,YCGA,IAqBIyb,GArBEC,GAAkBtb,IAAAA,MAAW,kBAC/Bub,EAAAA,EAAAA,eAAa,kBAAM,iEAA6D,GAAC,IAuB/EC,GAAgB,CAAEC,UAnBRzb,IAAAA,MAAW,kBAAMub,EAAAA,EAAAA,eAAa,kBAAM,kEAAuD,GAAC,IAmBhEG,SAAU,kBAAMzf,EAAAA,EAAAA,UAAS,YAAY,GAUjF,SARwB,WAKpB,OAJKof,KACDA,GAnBG,CACH,CACI7c,KAAMQ,EAAAA,OAAO2c,SACbF,UAAWH,GAEXI,SAAU,kBAAMzf,EAAAA,EAAAA,UAAS,mBAAmB,EAC5C2f,kBAAkB,GAEtB,CAAEpd,KAAMQ,EAAAA,OAAOwL,MAAOiR,UAAWvI,GAAOwI,SAAU,kBAAMzf,EAAAA,EAAAA,UAAS,SAAS,EAAE4f,OAAO,KAYtEb,KAAKQ,IAEfH,EACX,soBC5BA,IAAMS,GAAa,SAAH,GAAiD,IAA3CC,EAAY,EAAZA,aAAc9X,EAAE,EAAFA,GAAI9N,EAAQ,EAARA,SAAaf,EAAK,SAChDoJ,ElBPmB,SAAAA,GAAI,MAAK,MAAMlC,KAAKkC,GAAQA,EAAO,IAAH,OAAOA,GAAQ,GAAI,CkBO/Dwd,CAAc/X,GACrBgY,EAAQ1d,EAAgBC,EAAM0d,MAEpC,IAAKD,EACD,MAAM,IAAIjmB,MAAM,oBAAD,OAAqBiO,IAGxC,OAAOA,EACH,kBAAC,EAAAD,QAAO,IACJ,cAAY,iBACZC,GAAIzF,EACJ2d,gBAAiBJ,GAAgB,SACjCF,MAAOI,EAAMJ,OACTzmB,GAEHe,GAGL,0BAAG,cAAY,kBAAqBf,GAC/Be,EAGb,EAEA2lB,GAAW/hB,UAAY,CACnBgiB,aAAc/hB,IAAAA,OACd7D,SAAU6D,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,MAAiBA,IAAAA,SAClEiK,GAAIjK,IAAAA,QAGR,8RC0BA,SApD2B,SAAAiiB,GAiDvB,OAAO,kBAAC,EAAAG,MAAK,CAACP,MAAOI,EAAMJ,MAAOrd,KAAMyd,EAAMzd,KAAMsP,OAvC9B,SAAA1Y,GAAS,MACvBsJ,EAAS,KAEP2d,GAAWC,EAAAA,EAAAA,kBAAiBC,SAASF,UAAU3gB,QAAQ,MAAO,IAC9D8gB,EAbY,SAAAH,GAAY,MAC9B,MAAiB,KAAbA,IACU,QAAd,EAAIJ,EAAMzd,YAAI,OAAV,EAAYf,SAAS,KACG4e,EAAS/U,UAAU,EAAG+U,EAASI,YAAY,KAAO,KAC/CR,EAAMzd,KAAK8I,UAAU,EAAG2U,EAAMzd,KAAK/C,QAAQ,MAEnEwgB,EAAMzd,OAAS6d,MAAeJ,EAAMjd,SAAUid,EAAMjd,OAAOgG,MAAK,SAAA0X,GAAC,OAAIL,IAAaK,EAAEle,IAAI,KACnG,CAM2Bme,CAAcN,GAErC,GAAIJ,EAAMR,YAAcmB,EAAAA,SAAU,CAC9B,IAAI3Y,EAAKgY,EAAMhY,GAGf,GAAIgY,EAAMzd,OAASQ,EAAAA,OAAOkX,MAEtBjS,EADqB7O,EAAbmnB,SACMF,SAAS9f,cAAcb,QAAQugB,EAAMzd,KAAM,IAE7DE,EAAS,kBAAC,EAAAke,SAAQ,CAAC3Y,GAAIA,GAC3B,MAAO,GAAIuY,GAAkBP,EAAML,mBAAqBK,EAAMY,gBAAkBZ,EAAMa,cAClFC,EAAAA,EAAAA,iBAAgBd,EAAMa,cAAcE,EAAAA,EAAAA,oBACjC,CACH,IAAMC,EAAmBhB,EAAMjd,OAASid,EAAMjd,OAAOgG,MAAK,SAAA0X,GAAC,OAAIA,EAAC,OAAQ,IAAI,CAAC,EACvEQ,IAAwBC,EAAAA,EAAAA,eAAcF,GAE5Cve,EACI,kBAAC,aAAc,KACVwe,GAAwBb,IAAaJ,EAAMzd,MAAQ,kBAAC,EAAAoe,SAAQ,CAAC3Y,GAAIgZ,EAAiBze,OAClFge,EAAiB,kBAACP,EAAMR,UAAS,MAAKrmB,EAAK,CAAE4J,OAAQid,EAAMjd,UAAa,kBAAC,WAAO,MAG7F,CAGA,IAAMoe,GAAsB,QAAd,EAAAnB,EAAMP,gBAAQ,aAAd,OAAAO,KAAsB,GAMpC,OALArR,SAASwS,MAAQ,GAAH,OAAMA,EAAK,cAAMC,EAAAA,gBAE/BC,EAAAA,EAAAA,2BACAC,EAAAA,EAAAA,0BAEO7e,CACX,GAGJ,yOCjDA,MCTA,GDDqB,SAAAtJ,GAAK,OACtB,kBAAC,aAAc,CAAC2gB,SAAU,+BACtB,kBAAC,EAAAyH,OAAM,KACFtB,KAAkBhe,KAAI,SAAC+d,EAAOwB,GAAG,OAC9B,kBAAC,GAAkB,IAAC3jB,IAAK2jB,GAASxB,EAAW7mB,GAAS,KAGjD,EEDrB,IAAMsoB,GAAoB,SAACC,EAAYnf,GACnC,OAAOmf,EAAWhf,MAAK,SAAAsd,GAAK,SAAMnd,EAAAA,EAAAA,WAAUN,EAAM,CAAEA,KAAMyd,EAAOJ,OAAO,GAAO,GACnF,EAEM+B,GAA8B,SAAH,GAAiE,IAA3DC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAAS9mB,EAAM,EAANA,OAAQ+mB,EAAc,EAAdA,eAAgBC,EAAQ,EAARA,SAChE,SAAXhnB,GAAgC,QAAXA,GAOrBgnB,EAJkBD,EAAepf,MAC7B,SAAAsf,GAAO,OAAIP,GAAkBO,EAAQhgB,KAAM4f,IAAcH,GAAkBO,EAAQha,GAAI6Z,EAAQ,KAMvG,OAAO,CACX,EAEM9nB,GAAQ2X,IAAS,CACnBC,OAAQ,kBAAM,sFAAkF,EAChGC,QAASqQ,EAAAA,SACTpQ,OAAM,SAACC,EAAQ3Y,GACX,IAAM4Y,EAAYD,EAAM,QACxB,OAAO,kBAACC,EAAc5Y,EAC1B,IAGE+oB,IAASjoB,EAAAA,EAAAA,KAAS,YAA8B,IAA3BkoB,EAAO,EAAPA,QAASC,EAAW,EAAXA,YAChC,GAA0C/nB,EAAAA,EAAAA,MAAlC4K,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQG,EAAE,EAAFA,GAAID,EAAS,EAATA,UACKid,GAA2Brd,EAAAA,EAAAA,KAApDsd,wBACA7pB,EAAqByM,EAArBzM,MAAO8pB,EAAcrd,EAAdqd,UACIC,EAAuBpd,EAAlCkS,UACAuJ,EAAgC5b,EAAhC4b,aAAcD,EAAkB3b,EAAlB2b,cACd6B,EAAqBpd,EAArBod,iBAqDR,OAnDA1e,IAAAA,WAAgB,WAyCZ,OAxCI0e,GACAA,GAAiB,GAAM,SAACC,EAAU3nB,GA0B9B,OAxBA4mB,GAA4B,CACxBC,UAAWO,EAAQ7B,SAASF,SAC5ByB,QAASa,EAAStC,SAClB0B,eAAgB,CACZ,CACI9f,KAAMie,KACD0C,SAAQ,SAAA3C,GACL,OAAIA,EAAMjd,OACCid,EAAMjd,OAAOd,KAAI,SAAA2gB,GAAQ,OAAIA,EAASrgB,IAAI,IAE9C,CAACyd,EAAMzd,KAClB,IACCyE,QAAO,SAAAzE,GAAI,OAAIA,GAAQA,IAASQ,EAAAA,OAAO8f,KAAOtgB,IAASQ,EAAAA,OAAO+f,OAAO,IAC1E9a,GAAI,CAACjF,EAAAA,OAAO8f,IAAK9f,EAAAA,OAAO+f,WAGhC/nB,OAAAA,EACAgnB,SAAU,SAAAgB,GACFA,GACAP,GAER,IAGGb,GAA4B,CAC/BC,UAAWO,EAAQ7B,SAASF,SAC5ByB,QAASa,EAAStC,SAClB0B,eAAgB,CACZ,CAAE9f,KAAM,CAACe,EAAAA,OAAO2c,UAAW1X,GAAI,CAACjF,EAAAA,OAAOwL,QACvC,CAAEvM,KAAM,CAACe,EAAAA,OAAOwL,OAAQvG,GAAI,CAACjF,EAAAA,OAAO2c,YAExC3kB,OAAAA,EACAgnB,SAAUM,GAElB,IAGG,WACHI,SAAAA,GAAmB,EACvB,CAEJ,GAAG,IAEH1e,IAAAA,WAAgB,WACZ,OAAO,kBAAMye,GAAoB,CACrC,GAAG,CAACA,IAEAD,EAAkB,kBAAC,GAAU9pB,GAE1B,kBAAC,GAAY,CAACooB,aAAcA,EAAcD,cAAeA,EAAewB,YAAaA,GAChG,IAEAF,GAAOpkB,UAAY,CACfqkB,QAASpkB,IAAAA,OACTqkB,YAAarkB,IAAAA,QAGjB,UAAeilB,EAAAA,EAAAA,YAAWd,mOCpGpBe,GAAe,SAAH,GAA+B,IAAzBxlB,EAAU,EAAVA,WACdylB,EAA6B,QADG,EAANzgB,OAEhC,OACI,kBAAC,aAAc,KACX,kBAACwB,EAAA,EAAa,CACVC,GAAIzG,EACJ0G,QAAS,IACTtC,WAAY,CACRwC,MAAO,sCACPC,UAAW,2CACXC,KAAM,sCAEVE,eAAa,GAEb,yBAAKjH,UAAU,wCAAwC,cAAY,iBAC/D,0BACIA,UAAWqE,IAAW,gCAAiC,CACnD,qCAAsCqhB,EACtC,uCAAwCA,KAG3CA,EACG,kBAAC,aAAc,MACVljB,EAAAA,EAAAA,UAAS,OACV,kBAAC,EAAAmD,KAAI,CAACC,KAAK,oBAAoB5F,UAAU,6BAA6ByF,MAAM,WAGhF,kBAAC,aAAc,MACVjD,EAAAA,EAAAA,UAAS,QACV,kBAAC,EAAAmD,KAAI,CAACC,KAAK,gBAAgB5F,UAAU,6BAA6ByF,MAAM,YAQxG,EAEAggB,GAAanlB,UAAY,CACrBL,WAAYM,IAAAA,KACZ0E,OAAQ1E,IAAAA,QAGZ,YCrBA,IAAMolB,IAAqBlpB,EAAAA,EAAAA,KACvB,YAoBM,QAnBFuD,EAAS,EAATA,UACAqC,EAAa,EAAbA,cACAujB,EAAe,EAAfA,gBACA9d,EAAQ,EAARA,SACA+d,EAAY,EAAZA,aACAzhB,EAAE,EAAFA,GACA0hB,EAAU,EAAVA,WACAjrB,EAAU,EAAVA,WACAkrB,EAAiB,EAAjBA,kBACAC,EAAc,EAAdA,eACA5d,EAAW,EAAXA,YACA6d,EAAW,EAAXA,YACA9d,EAAa,EAAbA,cACAlD,EAAM,EAANA,OACAihB,EAAU,EAAVA,WACAC,EAAM,EAANA,OACAC,EAAe,EAAfA,gBACAnd,EAA8B,EAA9BA,+BACAtJ,EAAI,EAAJA,KAEA,GAAuC9C,EAAAA,EAAAA,MAA/BgL,EAAE,EAAFA,GAAIH,EAAM,EAANA,OAAQC,EAAc,EAAdA,eACZ6E,GAAmBhF,EAAAA,EAAAA,KAAnBgF,eACAzE,EAAgBL,EAAhBK,YACAC,EAAoBL,EAApBK,gBAEJW,EAOAd,EAPAc,SACAC,EAMAf,EANAe,cACAL,EAKAV,EALAU,UACAM,EAIAhB,EAJAgB,YACAC,EAGAjB,EAHAiB,gBACAC,EAEAlB,EAFAkB,iCACAC,EACAnB,EADAmB,0BAEEqd,EACF,yBAAKrmB,UAAU,wCACX,kBAAC,KAAmB,CAACY,MAAO,KAG9B0lB,GAAgBC,EAAAA,EAAAA,sBAAqBlkB,EAAcE,eACnD4X,GAAiBqM,EAAAA,EAAAA,uBAAsBnkB,EAAcE,eACrD8X,GAAYoM,EAAAA,EAAAA,kBAAiBpkB,EAAcE,eAC3CqB,GAAanB,EAAAA,EAAAA,mBAAkBJ,EAAcE,eAC7CmkB,GAAYC,EAAAA,EAAAA,kBAAiBtkB,EAAcoH,YAC3Cmd,GAAuBN,GAAkBI,GAAaJ,EACtDO,KAAcC,EAAAA,EAAAA,YAAWzkB,GACzB0kB,EAAkBd,GAAe,EAAI,MAAQ,OAC7Ce,IAAeC,EAAAA,EAAAA,gBAAe5kB,GAE9B6kB,IAAmBC,EAAAA,EAAAA,oBAAmB9kB,KAAkB+kB,EAAAA,EAAAA,QAAO/kB,GAC/D+e,IAAeiG,EAAAA,EAAAA,sBACjB7a,GACA8a,EAAAA,GAAAA,IAAqBjlB,EAAckB,WAAWkG,YAG5C8d,GACF,kBAAC,aAAc,KACX,yBAAKvnB,UAAWqE,IAAW,6BAA8B,sCACrD,yBAAKrE,UAAU,yCACX,kBAAC,EAAA2F,KAAI,CACDC,KAAMvD,EAAcoH,WAAa,eAAH,OAAkBpH,EAAcoH,YAAe,YAC7E/D,KAAM,KAEV,kBAAC,EAAAF,KAAI,CAACE,KAAK,MAAM1F,UAAU,+BAA+BoK,OAAO,QAC5D/H,EAAc+e,eAGvB,yBAAKphB,UAAU,8BACX,kBAAC,EAAAwnB,aAAaC,iBAAgB,CAC1BC,uBAAwBA,GAAAA,GACxBhkB,aAAaC,EAAAA,EAAAA,WAAU,CAAEJ,UAAWlB,EAAckB,YAClDokB,WAAYtlB,EAAcslB,WAC1BhoB,KAAMA,KAGd,kBAAC8G,EAAA,EAAa,CACVC,GAAIwgB,GACJvgB,QAAS,IACTtC,WAAY,CACRwC,MAAO,2CACPC,UAAW,gDACXC,KAAM,2CAEVE,eAAa,GAEb,yBAAKjH,UAAU,qCACX,kBAAC,EAAAwnB,aAAaI,KAAI,CACdvlB,cAAeA,EACf0jB,kBAAmBA,EACnB8B,cAAeA,GAAAA,GACfzf,YAAaA,OAK7B,kBAAC,EAAA0f,cAAa,CAAChgB,SAAiC,QAAzB,EAAEzF,aAAa,EAAbA,EAAeyF,gBAAQ,QAAI,KACpD,yBAAK9H,UAAWqE,IAAW,6BAA8B,oCACrD,yBAAKrE,UAAWqE,IAAW,6CACvB,yBACIrE,UAAWqE,IACP,oCACA,4CAGHY,GAASzC,EAAAA,EAAAA,UAAS,iBAAkBA,EAAAA,EAAAA,UAAS,2BAElD,yBACIxC,UAAWqE,IACP,mCACA,2CAGFY,GAAyCzC,EAAAA,EAAAA,UAAS,YAAzCA,EAAAA,EAAAA,UAAS,sBAExB,yBACIxC,UAAWqE,IAAW,oCAAqC,CACvD,gDAAgD0jB,EAAAA,EAAAA,kBAAiBjgB,GACjE,8CAA+Cme,EAAc,EAC7D,8CAA+CA,EAAc,KAGjE,kBAAC,EAAA9N,MAAK,CAACC,OAAQrM,KAAK6K,IAAIqP,GAAcne,SAAUA,IAChD,yBACI9H,UAAWqE,IAAW,6CAA8C,CAChE,wDAAyDY,KAGjD,WAAXkhB,GAAuB,kBAAC,EAAAxgB,KAAI,CAACC,KAAK,aACvB,SAAXugB,GAAqB,kBAAC,EAAAxgB,KAAI,CAACC,KAAK,aAGzC,yBAAK5F,UAAU,oCACX,kBAAC,EAAAmY,MAAK,CAACC,OAAQ8N,GAAcJ,EAAYhe,SAAUA,IACnD,yBACI9H,UAAWqE,IAAW,6CAA8C,CAChE,wDAAyDY,KAGjD,WAAXkhB,GAAuB,kBAAC,EAAAxgB,KAAI,CAACC,KAAK,aACvB,SAAXugB,GAAqB,kBAAC,EAAAxgB,KAAI,CAACC,KAAK,cAI7C,yBAAK5F,UAAWqE,IAAW,4CACvB,yBAAKrE,UAAU,wCACX,kBAAC,EAAAwF,KAAI,CAACE,KAAK,OAAO1F,UAAU,yCACvBwC,EAAAA,EAAAA,UAAS,oBAEd,kBAAC,EAAAgD,KAAI,CAAC4E,OAAO,OAAO1E,KAAK,MAAM1F,UAAU,wCACrC,kBAAC,EAAAmY,MAAK,CAACC,OAAQ/V,EAAc2lB,UAAWlgB,SAAUA,MAG1D,yBAAK9H,UAAU,sCACX,kBAAC,EAAAwF,KAAI,CAACE,KAAK,OAAO1F,UAAU,uCACvBwC,EAAAA,EAAAA,UAAS,sBAEd,kBAAC,EAAAgD,KAAI,CAAC4E,OAAO,OAAO1E,KAAK,MAAM1F,UAAU,sCACpCqC,EAAc4lB,OACX,kBAAC,EAAA9P,MAAK,CAACC,OAAQ/V,EAAc4lB,OAAQngB,SAAUA,IAE/C,yCAMf7C,GAAY5C,EAAcmE,QACvB,kBAAC,GAAY,CACTkS,YAAatU,EACbnE,aAAcoC,EAAcmE,QAC5BvB,OAAQA,GAAU8hB,IAGtB,kBAAC,EAAAmB,qBAAoB,CACjBloB,UAAU,iCACV6lB,aAAcA,EACdgC,cAAeA,GAAAA,GACfhtB,WAAYA,EACZstB,WAAY9lB,EAAc+lB,WAC1BC,YAAahmB,EAAcimB,YAC3BvgB,YAAaA,EACbwgB,YAAalmB,EAAcmmB,eAOzCC,GACF,kBAAC,aAAc,KACX,kBAAC,EAAAle,QAAO,CACJvK,UAAWqE,IAAW,mBAAoB,CACtC,0BAA2B4hB,EAAc,IAAMhhB,EAC/C,wBAAyBghB,EAAc,IAAMhhB,IAEjDuF,GAAI,CACAoY,SAAU,aAAF,OAAevgB,EAAcqW,eAGzC,kBAAC,EAAA8O,aAAakB,OAAM,CAChBrmB,cAAeA,EACf+e,aAAcA,GACdyG,cAAeA,GAAAA,GACfH,uBAAwBA,GAAAA,GACxBd,qBAAsBre,GAAaqe,EACnCre,UAAWA,EACXwd,kBAAmBA,EACnB3d,YAAaA,EACbL,YAAaA,KAGrB,kBAAC,EAAA+f,cAAa,CAAChgB,SAAiC,QAAzB,EAAEzF,aAAa,EAAbA,EAAeyF,gBAAQ,QAAI,KACpD,yBAAK9H,UAAWqE,IAAW,6BAA8B,oCACrD,yBAAKrE,UAAWqE,IAAW,6CACvB,yBAAKrE,UAAU,wCACX,kBAAC,EAAAwF,KAAI,CAACE,KAAK,OAAO1F,UAAU,yCACvBwC,EAAAA,EAAAA,UAAS,eAEd,kBAAC,EAAAgD,KAAI,CAAC4E,OAAO,OAAO1E,KAAK,MAAM1F,UAAU,wCACrC,kBAAC,EAAAmY,MAAK,CAACC,OAAQ/V,EAAc2lB,UAAWlgB,SAAUA,MAG1D,yBAAK9H,UAAU,sCACX,kBAAC,EAAAwF,KAAI,CAACE,KAAK,OAAO1F,UAAU,uCACvBwC,EAAAA,EAAAA,UAAS,oBAEd,kBAAC,EAAAgD,KAAI,CAAC4E,OAAO,OAAO1E,KAAK,MAAM1F,UAAU,sCACrC,kBAAC,EAAAmY,MAAK,CAACC,OAAQ/V,EAAcsmB,UAAW7gB,SAAUA,OAK9D,yBAAK9H,UAAWqE,IAAW,4CACvB,yBAAKrE,UAAU,wCACX,kBAAC,EAAAwF,KAAI,CAACE,KAAK,OAAO1F,UAAU,yCACvBwC,EAAAA,EAAAA,UAAS,gBAEd,kBAAC,EAAAgD,KAAI,CAAC4E,OAAO,OAAO1E,KAAK,MAAM1F,UAAU,wCACrC,kBAAC,EAAAmY,MAAK,CAACC,OAAQ/V,EAAcumB,WAAY9gB,SAAUA,MAG3D,yBAAK9H,UAAU,sCACX,kBAAC,EAAAwF,KAAI,CAACE,KAAK,OAAO1F,UAAU,uCACvBwC,EAAAA,EAAAA,UAAS,YAEd,kBAAC,EAAAgD,KAAI,CAAC4E,OAAO,OAAO1E,KAAK,MAAM1F,UAAU,sCACrC,kBAAC,EAAAmY,MAAK,CAACC,OAAQ/V,EAAcO,QAASkF,SAAUA,OAK3D7C,GAAY5C,EAAcmE,QACvB,kBAAC,GAAY,CACTkS,YAAatU,EACbnE,aAAcoC,EAAcmE,QAC5BvB,OAAQA,GAAU8hB,IAGtB,kBAAC,EAAAmB,qBAAoB,CACjBloB,UAAU,iCACV6lB,aAAcA,EACdgC,cAAeA,GAAAA,GACfhtB,WAAYA,EACZstB,WAAY9lB,EAAc+lB,WAC1BC,YAAahmB,EAAcimB,YAC3BvgB,YAAaA,EACbwgB,YAAalmB,EAAcmmB,cAIvC,yBAAKxoB,UAAWqE,IAAW,6BAA8BrE,IACrD,yBAAKA,UAAU,kCAAiC6nB,EAAAA,GAAAA,MAAgBgB,mBAChE,yBACI7oB,UAAWqE,IAAW,8BAA+B,CACjD,uCAAuC0jB,EAAAA,EAAAA,kBAAiBjgB,GACxD,qCAAsCkf,GAAe,EACrD,uCAAwCA,GAAe,KAG3D,kBAAC,EAAA7O,MAAK,CAACC,OAAQ4O,GAAclf,SAAUA,IACvC,yBACI9H,UAAWqE,IAAW,yCAA0C,CAC5D,oDAAqDhC,EAAcmE,WAG3D,WAAX2f,GAAuB,kBAAC,EAAAxgB,KAAI,CAACC,KAAK,aACvB,SAAXugB,GAAqB,kBAAC,EAAAxgB,KAAI,CAACC,KAAK,cAI7C,kBAAC,EAAA4hB,aAAasB,OAAM,CAChBzmB,cAAeA,EACfwlB,cAAeA,GAAAA,GACfvB,cAAeA,EACfP,kBAAmBA,EACnB5d,cAAeA,EACfC,YAAaA,EACbL,YAAaA,EACboe,OAAQA,KAKd4C,GACF,kBAAC,EAAAvB,aAAakB,OAAM,CAChBrmB,cAAeA,EACf+e,aAAcA,GACdyG,cAAeA,GAAAA,GACfH,uBAAwBA,GAAAA,GACxBd,qBAAuBre,GAAaqe,GAAwBzM,EAC5D5R,UAAWA,EACXwd,kBAAmBA,EACnB3d,YAAaA,EACbL,YAAaA,IAIfihB,GACF,kBAAC,EAAAxB,aAAayB,KAAI,CACdtgB,SAAUA,EACVtG,cAAeA,EACfujB,gBAAiBA,EACjB9d,SAAUA,EACVc,cAAeA,EACfif,cAAeA,GAAAA,GACf7f,gBAAiBA,EACjBmS,eAAgBA,EAChB5R,UAAWA,EACX+d,cAAeA,EACf4C,cAAY,EACZ1iB,UAAWnE,EAAcmE,QACzB6T,UAAWA,EACXuM,oBAAqBre,GAAaqe,IAAwBC,EAC1Dhe,YAAaA,EACbd,YAAaA,EACbe,gBAAiBA,EACjBC,iCAAkCA,EAClCod,OAAQA,EACRnd,0BAA2BA,IAI7BmgB,GACF,kBAAC,EAAA3B,aAAasB,OAAM,CAChBzmB,cAAeA,EACfwlB,cAAeA,GAAAA,GACfvB,cAAeA,EACfP,kBAAmBA,EACnB5d,cAAeA,EACfC,YAAaA,EACbL,YAAaA,EACboe,OAAQA,IAIViD,GACF,kBAAC,aAAc,KACX,kBAAC,EAAA5B,aAAY,CACTnlB,cAAeA,EACfwlB,cAAeA,GAAAA,GACfvB,cAAeA,EACfL,YAAaA,EACboD,4BAA4B,GAE3BN,GACAC,GACAG,KAMPG,GAAchD,GAAiBnM,GAAkBE,EAAY+O,GADhDxlB,EAAa6kB,GAAsBlB,GAGtD,OACI,yBAAKnjB,GAAE,yBAAoBA,GAAMpE,UAAWqE,IAAW,gCAAiCrE,IACnFgmB,EACG,yBACIhmB,UAAWqE,IAAW,wBACtBgG,QAAS,kBAAMpB,GAA+B,EAAK,GAElD5G,EAAcoH,WAAa6f,GAAcjD,GAG9C,kBAAC,aAAc,KACX,kBAAC,GAAU,CACPhc,QAAS+b,EACTpmB,UAAWqE,IAAW,uBAAwB,CAC1C,mCAAoCiiB,IAExC9b,IAAI+e,EAAAA,EAAAA,iBAAgBnlB,IAEnB/B,EAAcoH,WAAa6f,GAAcjD,IAMlE,IAGJV,GAAmBrlB,UAAY,CAC3BN,UAAWO,IAAAA,OACX8B,cAAe9B,IAAAA,OACfqlB,gBAAiBrlB,IAAAA,OACjBuH,SAAUvH,IAAAA,OACVslB,aAActlB,IAAAA,OACdT,SAAUS,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SACjDipB,cAAejpB,IAAAA,OACfkpB,UAAWlpB,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAClD6D,GAAI7D,IAAAA,OACJulB,WAAYvlB,IAAAA,OACZ1F,WAAY0F,IAAAA,KACZwlB,kBAAmBxlB,IAAAA,KACnBylB,eAAgBzlB,IAAAA,KAChBmpB,iBAAkBnpB,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,OACzD6H,YAAa7H,IAAAA,KACb4H,cAAe5H,IAAAA,KACf0lB,YAAa1lB,IAAAA,OACb0E,OAAQ1E,IAAAA,OACR2lB,WAAY3lB,IAAAA,OACZopB,UAAWppB,IAAAA,OACX4lB,OAAQ5lB,IAAAA,OACR6lB,gBAAiB7lB,IAAAA,KACjB0I,+BAAgC1I,IAAAA,KAChCZ,KAAMY,IAAAA,QAGV,YCrcA,IAAMqpB,GAAkB,SAAH,GAAsD,IAAhDC,EAAe,EAAfA,gBAAiBC,EAAO,EAAPA,QAAS1D,EAAe,EAAfA,gBAC3C2D,EAAyB1lB,IAAW,mBAAoB,CAC1D,2BAA4BylB,EAC5B,8BAA+BD,EAAkB,IAErD,OACI,uBACIzlB,GAAG,sBACH,cAAY,sBACZpE,UAAW+pB,EACX1f,QAAS+b,EACT,aAAYyD,GAEZ,kBAAC,EAAAlkB,KAAI,CAAC1B,YAAY,UAAU2B,KAAK,cAAc5F,UAAU,2BAGrE,EAEA4pB,GAAgBtpB,UAAY,CACxBwpB,QAASvpB,IAAAA,KACTiI,uBAAwBjI,IAAAA,KACxBspB,gBAAiBtpB,IAAAA,OACjB6lB,gBAAiB7lB,IAAAA,KACjBmI,sBAAuBnI,IAAAA,MAG3B,4nDC6FA,UAlH8B9D,EAAAA,EAAAA,KAC1B,YAWM,IAVFutB,EAAsB,EAAtBA,uBACAliB,EAAQ,EAARA,SACAmiB,EAAU,EAAVA,WACAC,EAAS,EAATA,UACAjvB,EAAK,EAALA,MACAkvB,EAAkB,EAAlBA,mBACAC,EAAQ,EAARA,SACAhiB,EAAW,EAAXA,YACAD,EAAa,EAAbA,cACAc,EAA8B,EAA9BA,+BAEA,GAA0DpM,EAAAA,EAAAA,MAAWgL,GAA7Da,EAAqB,EAArBA,sBAAuBF,EAAsB,EAAtBA,uBACyC,KAAlBjC,IAAAA,SAAe,IAAG,GAAjE8jB,EAAoB,KAAEC,EAAqB,KAC5CC,EAAsBJ,EACvB3gB,QAAO,SAAAzH,GAAC,OACLsoB,EAAqBG,OAAM,SAAAC,GAAkB,OAAIA,IAAuB1oB,EAAEM,cAAcqW,WAAW,GAAC,IAEvGxC,MAAM,EAAG,GACRwU,EAAuBH,EACxB/gB,QAAO,SAAAsG,GAAQ,aAA0B,QAA1B,EAAIA,EAASzN,qBAAa,aAAtB,EAAwBmE,OAAO,IAClD/B,KAAI,SAAA1C,GAAC,OAAIA,EAAEM,cAAcqW,WAAW,IAEnCiS,EAAa,WACfL,EAAsB,GAAI,IAAIM,IAAI,GAAD,UAAKP,GAAoB,GAAKK,OAC/DhiB,GACJ,EAGMmB,EACF,kBAAC,aAAc,KACX,kBAACghB,GAAA,EAAe,CAAC7I,UAAU,OACtBuI,EAAoB9lB,KAAI,SAAAsB,GAAkB,OACvC,kBAACU,EAAA,EAAa,CACVG,QAAM,EACNvG,IAAK0F,EAAmB3B,GACxBsC,IAAI,EACJC,QAAS,IACTtC,WAAY,CACRuC,OAAQ,mCACRC,MAAO,mCACPC,UAAW,wCACXC,KAAM,mCAEVE,eAAa,GAEb,kBAAC,GAAkB,IACfmB,YAAaA,EACbD,cAAeA,EACf9H,IAAK0F,EAAmB3B,GACxB0D,SAAUA,EACVmB,+BAAgCA,EAChCmd,gBAAiB1d,GACb3C,IAEI,MAMhC,OACI,kBAAC,aAAc,KACX,kBAAC,GAAe,CACZ+jB,QAASthB,EACT4d,gBAAiB1d,EACjBmhB,gBAAiBG,IAErB,kBAAC,EAAAc,MAAK,CACFhB,QAASthB,EACTuiB,YAAaJ,EACbvmB,GAAG,sBACH4mB,iBAAe,EACfC,gBAAc,EACdf,UAAWA,EACXD,WAAYA,EACZnpB,MAAM,sBAEN,kBAAC,EAAAqb,kBAAiB,CAACnc,UAAU,kBAAkBqc,cAAc,QACzD,yBAAKrc,UAAU,2BACX,kBAAC,EAAAwF,KAAI,CAACE,KAAK,OAAO1F,UAAU,0BACxB,kBAAC,EAAA2F,KAAI,CAACC,KAAK,cAAc5F,UAAU,iCAClCwC,EAAAA,EAAAA,UAAS,qBAEd,yBAAKxC,UAAU,6BAA6BqK,QAASsgB,GACjD,kBAAC,EAAAhlB,KAAI,CAAC1B,YAAY,wBAAwB2B,KAAK,kBAGvD,yBAAK5F,UAAU,yBACVoqB,IAAaG,EAAoB7rB,QAAUzD,EACxC,kBAAC,EAAqB,CAACA,MAAOA,IAE9B4O,GAGR,yBAAK7J,UAAU,2BACX,kBAAC,EAAAuK,QAAO,CACJF,QAASsgB,EACT3qB,UAAU,qEACVwK,GAAIjF,EAAAA,OAAOgE,WAEX,kBAAC,EAAA/D,KAAI,CAACE,KAAK,KAAK0E,OAAO,SAClB5H,EAAAA,EAAAA,UAAS,sBAQ1C,IC7EJ,UAtCuB/F,EAAAA,EAAAA,KAAS,WAC5B,OAAkCI,EAAAA,EAAAA,MAA1B+K,EAAS,EAATA,UAAWC,EAAE,EAAFA,GAAIJ,EAAM,EAANA,OACvB,GAAuDD,EAAAA,EAAAA,KAA/CrB,EAAM,EAANA,OAAuB7C,EAAmB,EAAlCf,cACE2oB,EAAuBzjB,EAAjCK,SACAmiB,EAA0BpiB,EAA1BoiB,WAAYC,EAAcriB,EAAdqiB,UAEhBF,EAKApiB,EALAoiB,uBACezgB,EAIf3B,EAJAK,cACOkjB,EAGPvjB,EAHA3M,MACamwB,EAEbxjB,EAFAQ,YACeijB,EACfzjB,EADAO,cAGEgiB,EAAqB5gB,EAAUC,QACjC,SAAAzH,GAAC,OACGA,EAAEM,eACF8D,IAAWpE,EAAEM,cAAcoH,aAC1BnG,EAAoBU,SAAS,WACxBX,EAAAA,EAAAA,IAAqBtB,EAAEM,cAAeqH,EAAAA,OAAOC,SAC7CtG,EAAAA,EAAAA,IAAqBtB,EAAEM,cAAeqH,EAAAA,OAAOE,OAC7CvG,EAAAA,EAAAA,IAAqBtB,EAAEM,cAAeiB,GAAqB,IAGzE,OACI,kBAAC,GAAqB,CAClB0mB,uBAAwBA,EACxBG,mBAAoBA,EACpBriB,SAAUojB,EACVjB,WAAYA,EACZG,UAAWD,EAAmBzrB,OAC9BwrB,UAAWA,EACXjvB,MAAOkwB,EACP/iB,YAAagjB,EACbjjB,cAAekjB,GAG3B,IC9BA,SAR+B,SAAH,GAA6E,IAAvE3uB,EAAQ,EAARA,SAAUN,EAAK,EAALA,MACxC,OACI,kBAAC,KAAa,CAACA,MAAOA,GAClB,kBAAC,IAAmB,KAAEM,GAGlC,yPCVA,gmGAAAyF,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,gYAuEA,UA3D8B1F,EAAAA,EAAAA,KAAS,YAA2C,IAAxCL,EAAK,EAALA,MACtC,GAA2CS,EAAAA,EAAAA,MAAnC4K,EAAM,EAANA,OAAQ6jB,EAAO,EAAPA,QAASzjB,EAAE,EAAFA,GAAID,EAAS,EAATA,UACrB2jB,EAA6B1jB,EAA7B0jB,yBACSC,EAAqB5jB,EAA9BM,QACAmb,EAA6C5b,EAA7C4b,aAAcoI,EAA+BhkB,EAA/BgkB,2BACtB,EAAoEH,EAAQI,QAAQC,cAA7DC,EAAc,EAA7BC,cAA+BC,EAAwB,EAAxBA,yBAEjCC,EAAwBjJ,SAASF,WAAard,EAAAA,OAAO8f,IACrD2G,EAAiB3I,GAAgB0I,EAEjCE,EAAyB1lB,IAAAA,aAAkB,WAC7C,IAAM2lB,EAAeF,EACjB,kBAAC,EAAA3qB,cAAa,KACV,kBAAC,GAAe,CAACjF,MAAOA,GACpB,kBAAC,GAAc,QAGvB,KAEJmvB,EAAyBW,EAC7B,GAAG,CAACX,EAA0BnvB,EAAO2vB,EAAuBN,IAoC5D,OAlCAllB,IAAAA,WAAgB,WACZ,IAAM4lB,EAAY,eAnC1B,EAmC0B,GAnC1B,EAmC0B,WAAG,oFACbxY,EAAAA,EAAAA,cAAcoY,EAAqB,iCAC7BK,EAAAA,EAAAA,OAAK,kBAAOX,CAA0B,IAAC,WACzCpI,EAAc,CAAF,+BACN9nB,EAAAA,GAAG8wB,KAAK,aAAY,OAC1Bb,IACAI,GAAe,GACfE,IAA2B,OAInCG,IAAyB,2CA9CrC,iLA+CS,kBAZiB,mCAkBlB,OAJAE,IAAc,OAAO,WACjB,IAGG,kBAAMZ,EAAyB,KAAK,CAC/C,GAAG,CACCK,EACAJ,EACAS,EACAV,EACAO,EACA1vB,EACA2vB,IAGJxlB,IAAAA,WAAgB,WACZ0lB,GACJ,IAEO,IACX,ICpEA,MCKA,IAAMK,IAAwB7vB,EAAAA,EAAAA,KAAS,WACnC,OAAkCI,EAAAA,EAAAA,MAA1B4K,EAAM,EAANA,OAAQG,EAAS,EAATA,UAAWC,EAAE,EAAFA,GACnBwb,EAAiB5b,EAAjB4b,aACA2G,EAA2BpiB,EAA3BoiB,uBACAxhB,EAA4EX,EAA5EW,uBAAwB+jB,EAAoD1kB,EAApD0kB,yBAA0B7jB,EAA0Bb,EAA1Ba,sBAC1DnC,IAAAA,WAAgB,kBAAMimB,GAAgB,IAEtCjmB,IAAAA,WAAgB,kBAAM,kBAAMgmB,EAAyB,GAAG,IAAE,IAE1D,IAAME,EAAsB,WAAH,OACrB,kBAAC,GAAe,CACZ3C,QAASthB,EACT4d,gBAAiB1d,EACjBmhB,gBAAiBG,GACnB,EAGAwC,EAAiB,WACnB,IAAMT,EAAwBjJ,SAASF,WAAard,EAAAA,OAAOwL,MAGvDwb,EADAlJ,GAAgB0I,EACS,CACrB,CACIjc,SAAU,OACVyE,UAAWkY,IAIM,GAEjC,EAEA,OAAO,IACX,IAEAH,GAAsBhsB,UAAY,CAC9BwiB,SAAUviB,IAAAA,QAGd,UAAeilB,EAAAA,EAAAA,YAAW8G,IClC1B,IAAMI,GAAwBxY,IAAS,CACnCC,OAAQ,kBACJ,6FAEC,EACLC,QAAS,kBAAM,kBAAC,EAAAqQ,SAAQ,KAAG,IA2C/B,UA5BgChoB,EAAAA,EAAAA,KAAS,YAA8C,IAA3CL,EAAK,EAALA,MAEhCuwB,GADO9vB,EAAAA,EAAAA,MAAPgL,GACA8kB,2BACFC,EAAmB,WACrB,IAAMC,EAA+D,CACjE,CACIjnB,KAAM,UACNknB,OAAOtqB,EAAAA,EAAAA,UAAS,UAChBrD,MAAO,SAAAxD,GAAK,OAdJ,SAAmBA,EAAUS,GAAkB,OACnE,kBAAC,GAAe,CAACA,MAAOA,GACpB,kBAACswB,GAA0B/wB,GACb,CAWUoxB,CAAgBpxB,EAAOS,EAAM,IAQrDuwB,EAA2BE,EAC/B,EAQA,OANAtmB,IAAAA,WAAgB,WACZ,OAAO,kBAAMomB,EAA2B,KAAK,CACjD,GAAG,CAACA,IAEJpmB,IAAAA,WAAgB,kBAAMqmB,GAAkB,IAEjC,IACX,sXCzDA,kiNACO,IAAMI,GAAmB,eADhC,EACgC,GADhC,EACgC,WAAG,WAAM7mB,GAAM,kFACrC8mB,GAAAA,EAAaC,yBAAyB/mB,GAAO,0CAFvD,iLAGC,gBAF+B,+gECEhC,IAEagnB,GAAqB,WAAH,2WAC3B/U,OAAQ,CACJgV,MAAO,CACH,CAAC,MAAO,CAAE9nB,SAAS9C,EAAAA,EAAAA,UAAS,iCAC5B,CAAC,SAAU,CAAE6qB,IAAK,EAAG1tB,KAAM,YAGnC2tB,UAAW,CACPF,MAAO,CACH,CACI,MACA,CACIG,UAAW,SAAAnxB,GAAK,OAAIA,EAAMoxB,eAAiBpxB,EAAMsd,gBAAgB1X,QAAQ,YAAc,CAAC,EACxFsD,SAAS9C,EAAAA,EAAAA,UAAS,kCAG1B,CAAC,UAAW,CAAE+qB,UAAW,SAAAnxB,GAAK,OAAIA,EAAMoxB,aAAa,IACrD,CACI,SACA,CACIC,KAAM,SAACtuB,EAAOuuB,EAAStxB,EAAOuxB,GAAM,QAChCvxB,EAAMoxB,cAAgB,KAAKruB,GAASwuB,EAAOC,SAAgB,EAC/DtoB,SAAS9C,EAAAA,EAAAA,UAAS,uDAG1B,CACI,SACA,CACIirB,KAAM,SAACtuB,EAAOuuB,EAAStxB,EAAOuxB,GAAM,OAChC,QAAQ9qB,KAAK8qB,EAAOL,aA/BT1pB,EAgCqBxH,EAAMwH,WAhCfiqB,GAgC4BF,EAAOL,UAhCzB1pB,GAAwB,IAAViqB,GAArC,IAACjqB,EAAYiqB,CAiCb,EACdvoB,SAAS9C,EAAAA,EAAAA,UAAS,8BAI9BsrB,QAAS,aAEbF,UAAW,CACPR,MAAO,CACH,CACI,MACA,CACIG,UAAW,SAAAnxB,GAAK,OAAIA,EAAMoxB,cAAgB,GAAKpxB,EAAMsd,gBAAgB1X,QAAQ,YAAc,CAAC,EAC5FsD,SAAS9C,EAAAA,EAAAA,UAAS,kCAG1B,CAAC,UAAW,CAAE+qB,UAAW,SAAAnxB,GAAK,OAAIA,EAAMoxB,aAAa,IACrD,CACI,SACA,CACIC,KAAM,SAACtuB,EAAOuuB,EAAStxB,EAAOuxB,GAAM,MAC/B,SAAS9qB,KAAK8qB,EAAOL,YAAc,SAASzqB,KAAK1D,IACjD,aAAa0D,KAAK8qB,EAAOL,YAAc,aAAazqB,KAAK1D,EAAO,EACrEmG,SAAS9C,EAAAA,EAAAA,UAAS,kDAG1B,CACI,SACA,CACIirB,KAAM,SAACtuB,EAAOuuB,EAAStxB,EAAOuxB,GAAM,OAAMA,EAAOL,WAAanuB,CAAK,EACnEmG,SAAS9C,EAAAA,EAAAA,UAAS,uDAI9BsrB,QAAS,aAEbhuB,SAAU,CACNstB,MAAO,CAAC,CAAC,MAAO,CAAE9nB,SAAS9C,EAAAA,EAAAA,UAAS,qCAExCurB,WAAY,CACRD,QAAS,cAEbE,YAAa,CACTF,QAAS,eAEb3F,WAAY,CACRiF,MAAO,CACH,CACI,SACA,CACIK,KAAM,SAACtuB,EAAOuuB,EAAStxB,GAAK,MAAmC,SAA9BA,EAAM6xB,sBAAkCC,EAAAA,EAAAA,aAAY/uB,EAAM,EAC3FmG,SAAS9C,EAAAA,EAAAA,UAAS,wDAG1B,CACI,SACA,CACIirB,KAAM,SAACtuB,EAAOuuB,EAAStxB,GAAK,MAAmC,SAA9BA,EAAM6xB,sBAAkCE,EAAAA,EAAAA,aAAYhvB,EAAM,EAC3FmG,SAAS9C,EAAAA,EAAAA,UAAS,oCAG1B,CACI,SACA,CACIirB,KAAM,SAACtuB,EAAOuuB,EAAStxB,GAAK,MAAmC,SAA9BA,EAAM6xB,sBAAkCG,EAAAA,EAAAA,eAAcjvB,EAAM,EAC7FmG,SAAS9C,EAAAA,EAAAA,UAAS,sCAG1B,CACI,SACA,CACIirB,KAAM,SAACtuB,EAAOuuB,EAAStxB,GACnB,GAAkC,SAA9BA,EAAM6xB,oBAAgC,OAAO,EACjD,KAAKC,EAAAA,EAAAA,aAAY/uB,GAAQ,OAAO,EAChC,IAAMkvB,GAAeC,EAAAA,EAAAA,UAASlyB,EAAM2xB,YAC9BQ,EAAqBF,EAAaG,QACT,KAAhBrvB,EAAMoW,MAAM,KAAI,GAAxBkZ,EAAC,KAAEvsB,EAAC,KACX,OAAOwsB,EAAAA,GAAAA,GAAmBtyB,EAAMuyB,SAAUJ,EAAmBxgB,KAAK0gB,GAAGG,OAAO1sB,GAAImsB,EACpF,EACA/oB,SAAS9C,EAAAA,EAAAA,UAAS,yCAKlC6lB,YAAa,CACT+E,MAAO,CACH,CACI,SACA,CACIK,KAAM,SAACtuB,EAAOuuB,EAAStxB,GAAK,MAAmC,SAA9BA,EAAM6xB,sBAAkCC,EAAAA,EAAAA,aAAY/uB,EAAM,EAC3FmG,SAAS9C,EAAAA,EAAAA,UAAS,wDAG1B,CACI,SACA,CACIirB,KAAM,SAACtuB,EAAOuuB,EAAStxB,GAAK,MAAmC,SAA9BA,EAAM6xB,sBAAkCE,EAAAA,EAAAA,aAAYhvB,EAAM,EAC3FmG,SAAS9C,EAAAA,EAAAA,UAAS,oCAG1B,CACI,SACA,CACIirB,KAAM,SAACtuB,EAAOuuB,EAAStxB,GAAK,MAAmC,SAA9BA,EAAM6xB,sBAAkCG,EAAAA,EAAAA,eAAcjvB,EAAM,EAC7FmG,SAAS9C,EAAAA,EAAAA,UAAS,sCAG1B,CACI,SACA,CACIirB,KAAM,SAACtuB,EAAOuuB,EAAStxB,GACnB,GAAkC,SAA9BA,EAAM6xB,oBAAgC,OAAO,EACjD,KAAKC,EAAAA,EAAAA,aAAY/uB,GAAQ,OAAO,EAChC,IAAMkvB,GAAeC,EAAAA,EAAAA,UAASlyB,EAAM2xB,YAC9BQ,EAAqBF,EAAaG,QACT,KAAhBrvB,EAAMoW,MAAM,KAAI,GAAxBkZ,EAAC,KAAEvsB,EAAC,KACX,OAAOwsB,EAAAA,GAAAA,GAAmBtyB,EAAMuyB,SAAUJ,EAAmBxgB,KAAK0gB,GAAGG,OAAO1sB,GAAImsB,EACpF,EACA/oB,SAAS9C,EAAAA,EAAAA,UAAS,2CAK/BqsB,KAA8B,EAGxBA,GAA+B,WAAH,MAAU,CAC/CC,UAAW,CACP1B,MAAO,CACH,CACI,MACA,CACIG,UAAW,SAAAnxB,GAAK,OAAIA,EAAM2yB,gBAAkB3yB,EAAM0yB,SAAS,EAC3DxpB,SAAS9C,EAAAA,EAAAA,UAAS,wCAKlCwsB,YAAa,CACT5B,MAAO,CACH,CACI,MACA,CACIG,UAAW,SAAAnxB,GAAK,OAAIA,EAAM6yB,kBAAoB7yB,EAAM4yB,WAAW,EAC/D1pB,SAAS9C,EAAAA,EAAAA,UAAS,0CAKrC,8VCzLD,yiPACO,IAAM0sB,GAAe,eAD5B,EAC4B,GAD5B,EAC4B,WAAG,WAAOC,EAAalY,EAAO2N,GAAW,2FACjErpB,EAAAA,GAAG6zB,IAAI,IACHD,YAAAA,EACAlY,MAAAA,GACI2N,GAAe,CAAEA,YAAAA,MACvB,0CANN,iLAMM,gBALsB,o2BCKrB,ICLMyK,GAA2B,SAAH,GAA+C,IAAzCC,EAAmB,EAAnBA,oBAAqB/sB,EAAa,EAAbA,cAC5D,OAAO0qB,GAAAA,EAAasC,gBAAgBD,EAAqB/sB,EAC7D,EACaitB,GAAuB,SAAApzB,GAAK,OAAI6wB,GAAAA,EAAawC,kBAAkBrzB,EAAM,qxECF3E,IAAMszB,GAAiB,SAAAtzB,GAC1B,IAAMuzB,GAAuBC,EAAAA,EAAAA,eAAcxzB,GAO3C,OAAO,IACHuzB,qBAAAA,GAJAvzB,EAAMuzB,uBAAyBA,GAC/B1C,GAAAA,EAAa4C,YAAYzzB,EAAMmG,cAAeotB,GAMtD,EAEaH,GAAuB,SAAApzB,GAChC,IAAMuzB,GAAuBC,EAAAA,EAAAA,eAAcxzB,GAEnC0D,EAA8C1D,EAA9C0D,SAAUgwB,EAAoC1zB,EAApC0zB,iBAAkBtG,EAAkBptB,EAAlBotB,cAIpC,OAAO,MAFcuG,GAAe,CAAEJ,qBAAAA,EAAsB7vB,SAAAA,EAAUgwB,iBAAAA,EAAkBtG,cAAAA,IAK5F,EAEMuG,GAAiB,WAA8E,6DAAP,CAAC,EAArEJ,EAAoB,EAApBA,qBAAsB7vB,EAAQ,EAARA,SAAUgwB,EAAgB,EAAhBA,iBAAkBtG,EAAa,EAAbA,cACyB,MAA9EwG,EAAAA,EAAAA,yBAAwBF,EAAkBH,EAAsBnG,GAAc,GAA1F6D,EAAG,KAAE4C,EAAG,KAEf,OAAInwB,EAAWutB,EACJ,CAAEvtB,SAAUutB,GAEnBvtB,EAAWmwB,EACJ,CAAEnwB,SAAUmwB,GAEhB,CAAC,CACZ,yPCtCA,+uPACO,IAAMC,GAAiB,+BAAG,WAAM9zB,GAAK,0GAuBuD,OAtBvFmG,EAA6CnG,EAA7CmG,cAAeinB,EAA8BptB,EAA9BotB,cAAeuE,EAAe3xB,EAAf2xB,WAChChmB,EAAc3L,EAAM+zB,WAAWzoB,OAAOK,YACtCogB,EAAyC/rB,EAAzC+rB,WAAY6F,EAA6B5xB,EAA7B4xB,YAAaoC,EAAgBh0B,EAAhBg0B,YAE/BjI,EAAaA,GAAcpgB,EAAYymB,QAAQnhB,IAAI,EAAG,UAAUC,OAAO,SAEjE+iB,EAA0BpD,GAAAA,EAAaqD,aAAavC,GACpDE,EAAsBoC,EAAwBpC,oBAC9CsC,EAAetD,GAAAA,EAAauD,YAAYjuB,EAAewrB,GACvDY,EAAW4B,EAAa5B,SACxB8B,EAAiBxD,GAAAA,EAAayD,aAAa/B,EAAUZ,EAAY5F,GACvEA,EAAasI,EAAetI,WAEtBwI,EAA0B1D,GAAAA,EAAa2D,qBAAqBruB,EAAe0rB,GAC3E4C,EAAsBF,EAAwBE,oBAC9CC,EAAoB7D,GAAAA,EAAa8D,gBAAgBvH,EAAejnB,EAAe0rB,GAE/E+C,EAAkB/D,GAAAA,EAAa2C,cAAciB,EAAqBT,GACxEA,EAAcY,EAAgBZ,YACxBa,EAAkBhE,GAAAA,EAAaiE,cAAcL,EAAqB7C,EAAaoC,EAAarC,GAClGC,EAAciD,EAAgBjD,YAExBmD,EAAuBlE,GAAAA,EAAamE,kBAAkB7uB,EAAe0rB,GAAoB,6CAGxFoC,GACAM,GACAQ,GACAL,GACAP,GACAE,GACAQ,GACAD,IAAe,4CAEzB,gBAnC6B,sCAqCjBtB,GAAc,+BAAG,WAAMtzB,GAAK,8FACkD,OAA/E+rB,EAAoF/rB,EAApF+rB,WAAY6F,EAAwE5xB,EAAxE4xB,YAAaoC,EAA2Dh0B,EAA3Dg0B,YAAa/H,EAA8CjsB,EAA9CisB,YAAa0F,EAAiC3xB,EAAjC2xB,WAAY5nB,EAAqB/J,EAArB+J,OAAQwoB,EAAavyB,EAAbuyB,SAAQ,SAE3D1B,GAAAA,EAAariB,gBAAgBojB,EAAa7nB,GAAO,OAa5E,OAbK+E,EAAgB,EAAH,KACbmmB,EAAwB,CAAEC,kBAAmBpmB,EAAcuC,MAC3D8jB,EAAyB,CAAEC,mBAAoBtmB,EAAcwC,OAE7D8jB,EAAqBD,EAAuBC,mBAC5CC,EAAkBxE,GAAAA,EAAayE,cACjC1D,EACA3F,EACA+H,EACAoB,EACA7C,EACAZ,EACA5F,GACH,8BAGMsJ,GACAJ,GACAE,IAAsB,2CAEhC,gBAvB0B,+hCCtC3B,gmGAAApvB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4fAAAA,EAAA,EAAAA,EAAA,iBAAAA,IAAA,uBAAAA,GAAA,UAAAA,GAAA,GAAAA,EAAA,0gCAIA,IAAMwvB,GAAiB,+BAAG,WAAOv1B,EAAOw1B,GAAS,0EACvCC,EAAWz1B,EAAM01B,cAEd3vB,EAAI,EAAC,YAAEA,EAAIyvB,EAAUlzB,QAAM,iBAGV,OAHU,KAGhCF,OAAM,KAAQqzB,EAAQ,SAAQD,EAAUzvB,GAAG0vB,GAAS,wBAA7CE,OAAM,4BAHqB5vB,IAAG,uBAKzC/F,EAAM41B,YAAY,MACXH,IACJ,4CACN,gBAXsB,wCAaVI,GAAkB,+BAAG,WAAO71B,EAAO81B,GAAS,0EACH,OAA5CN,EAAYO,GAAe/1B,EAAO81B,GAAU,SAC5CP,GAAkBv1B,EAAOw1B,GAAU,OAEQ,OAA3CQ,EAAqBC,KAAsB,SAC3CV,GAAkBv1B,EAAOg2B,GAAmB,OAElDh2B,EAAM41B,YAAY,CACdtd,kBAAkB,IACnB,2CACN,gBAV8B,wCAYzByd,GAAiB,SAAC/1B,EAAO81B,GAAS,OACpCI,GAAAA,EAAmBC,sBACnBtF,IAAqC,UACjC,sCAAsCpqB,KAAKrE,OAAOC,KAAKyzB,MAAgB91B,EAAMmG,cAC3E,CAAC0qB,IACD,IAAE,CACRuF,GACAC,IAAuB,GACnB,sCAAsC5vB,KAAKrE,OAAOC,KAAKyzB,MAAgB91B,EAAMmG,cAC3E,CAACkwB,IACD,IAAE,EAGNJ,GAAuB,WAAH,MAAS,CAACG,GAAyB,2DCzChDE,GAAkB,SAAC/yB,GAC5B,OAAQA,GACJ,IAAK,cACD,OAAOgzB,EAAAA,eAAeC,IAC1B,IAAK,aACD,OAAOD,EAAAA,eAAeE,MAC1B,QACI,OAAOF,EAAAA,eAAeG,KAElC,uvBC4BA,SAvCY,WACR,0GAAc,SACVz1B,KAAK01B,OAAS,CAAC,CACnB,WAiCC,SAjCA,uBAED,SAAIC,EAAW1tB,GACNjI,KAAK41B,IAAID,KACV31B,KAAK01B,OAAOC,GAAa,KAGoB,IAA7C31B,KAAK01B,OAAOC,GAAWhxB,QAAQsD,IAC/BjI,KAAK01B,OAAOC,GAAWzR,KAAKjc,EAEpC,GAAC,iBAED,WACI,OAAOjI,KAAK01B,MAChB,GAAC,mBAED,SAAMC,GACF,OAAI31B,KAAK41B,IAAID,GACF31B,KAAK01B,OAAOC,GAAW,GAE3B,IACX,GAAC,iBAED,SAAIA,GACA,OAAI31B,KAAK41B,IAAID,GACF31B,KAAK01B,OAAOC,GAGhB,EACX,GAAC,iBAED,SAAIA,GACA,OAAOx0B,OAAO00B,UAAUC,eAAeC,KAAK/1B,KAAK01B,OAAQC,EAC7D,sFAAC,EApCO,utBC+GZ,MC7GA,GDEe,WACX,WAAYnF,EAAOT,GAAqB,IAAdhxB,EAAQ,UAAH,6CAAG,kGAAI,SAClCiB,KAAKwwB,MAAQA,EACbxwB,KAAK+vB,MAAQA,EACb/vB,KAAKjB,MAAQA,EACbiB,KAAK01B,OAAS,IAAIx2B,GAElBc,KAAKg2B,YAAc,CACvB,WAgGC,SA9FD,IA8EA,4BAMA,SAAqBC,GACjB,IAAMC,EAAiC,iBAATD,EACxBE,EAAc,CAChB74B,KAAM44B,EAAiBD,EAAOA,EAAK,GACnC5F,QAAS6F,EAAiB,CAAC,EAAID,EAAK,IAAM,CAAC,GAK/C,OAFAE,EAAYC,UAAiC,WAArBD,EAAY74B,KAAoB24B,EAAK,GAAG7F,MAAOiG,EAAAA,EAAAA,mBAAkBF,EAAY74B,MAAM8yB,KAEpG+F,CACX,OA9FA,yBAMA,SAAWR,EAAWM,EAAMK,GACxB,IAAIruB,EAAUquB,GAAiBL,EAAK5F,QAAQpoB,UAAWouB,EAAAA,EAAAA,mBAAkBJ,EAAK34B,MAAM2K,UAClE,WAAdguB,EAAK34B,KACL2K,GAAUsuB,EAAAA,GAAAA,UAAStuB,EAAS,CACxBguB,EAAK5F,QAAQL,MAAQiG,EAAK5F,QAAQuC,IAAMqD,EAAK5F,QAAQL,IAAM,GAAH,OAAMiG,EAAK5F,QAAQL,IAAG,YAAIiG,EAAK5F,QAAQuC,OAE9E,QAAdqD,EAAK34B,KACZ2K,GAAUsuB,EAAAA,GAAAA,UAAStuB,EAAS,CAACguB,EAAK5F,QAAQL,MACrB,cAAdiG,EAAK34B,OACZ2K,GAAUsuB,EAAAA,GAAAA,UAAStuB,EAAS,CAACguB,EAAK5F,QAAQmG,MAAOP,EAAK5F,QAAQoG,SAElEz2B,KAAK01B,OAAO1lB,IAAI2lB,EAAW1tB,GAC3BjI,KAAKg2B,aACT,GAEA,mBAKA,WAAQ,WAwCJ,OAvCA70B,OAAOC,KAAKpB,KAAKwwB,OAAOjvB,SAAQ,SAAAo0B,GACvBx0B,OAAO00B,UAAUC,eAAeC,KAAK,EAAKhG,MAAO4F,IAItD,EAAK5F,MAAM4F,GAAWp0B,SAAQ,SAAA00B,GAC1B,IAAMS,EAAaC,EAAUC,cAAcX,GAE3C,IAAKS,EAAWN,WAA6C,mBAAzBM,EAAWN,cAI3CM,EAAWrG,QAAQH,WAAcwG,EAAWrG,QAAQH,UAAU,EAAKnxB,UAIzC,KAA1B,EAAKyxB,MAAMmF,IAAyC,QAApBe,EAAWp5B,MAA/C,CAIA,IAAIu5B,EAAUP,EACd,GAAwB,WAApBI,EAAWp5B,KAAmB,CAC9B,MAA2Bo5B,EAAWN,UAClC,EAAK5F,MAAMmF,GACXe,EAAWrG,QACX,EAAKtxB,MACL,EAAKyxB,OAETqG,EANa,EAALC,MAORR,EAPsB,EAAPruB,OAQnB,MACI4uB,EAAWH,EAAWN,UAAU,EAAK5F,MAAMmF,GAAYe,EAAWrG,QAAS,EAAKtxB,MAAO,EAAKyxB,OAG3FqG,GACD,EAAKE,WAAWpB,EAAWe,EAAYJ,EAjB3C,CAmBJ,GACJ,KACQt2B,KAAKg2B,WACjB,GAEA,sBAKA,WACI,OAAOh2B,KAAKg3B,OAChB,sFAkBC,EAxGU,0PEHf,gmGAAAlyB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4zBAAAA,EAAA,EAAAA,EAAA,iBAAAA,IAAA,uBAAAA,GAAA,UAAAA,GAAA,GAAAA,EAAA,+ZAAAA,EAAA,EAAAA,EAAA,SAAAA,IAAA,SAAAA,GAAA,4bAIA,IAKqBjF,GAAS,WA8C1B,aAA0B,WAAdwwB,EAAU,UAAH,6CAAG,CAAC,GAvD3B,4FAuD4B,cArCxB4G,kBAAoB,CAAC,EAAC,KAEtBC,iBAAmB,CAAC,EAAC,KAErBC,yBAA2B,KAAI,KAC/BC,4BAA8B,KAAI,KAElCC,sBAAwB,KAAI,KAC5BC,wBAA0B,KAAI,KAE9BC,eAAiB,KAAI,KACrBC,gBAAkB,KAAI,KAEtBC,mBAAqB,KAAI,KACzBC,qBAAuB,KAAI,KAE3BC,4BAA8B,KAAI,KAClCC,+BAAiC,KAAI,KAErCC,oBAAsB,KAAI,KAC1BC,sBAAwB,KAAI,KAE5BC,+BAAiC,KAAI,KACrCC,mCAAqC,KAAI,KAEzCC,mBAAqB,GAajBl4B,EAAAA,EAAAA,gBAAeC,KAAM,CACjBi3B,kBAAmBh3B,EAAAA,WACnBi3B,iBAAkBj3B,EAAAA,WAClBg4B,mBAAoBh4B,EAAAA,WACpBi4B,oBAAqBh4B,EAAAA,OACrBi4B,2BAA4Bj4B,EAAAA,OAC5Bk4B,mBAAoBl4B,EAAAA,OACpBm4B,QAASn4B,EAAAA,OACTo4B,iBAAkBp4B,EAAAA,OAClBq4B,sBAAuBr4B,EAAAA,OACvBs4B,gBAAiBt4B,EAAAA,OAAOC,MACxBs4B,mBAAoBv4B,EAAAA,OAAOC,MAC3Bu4B,SAAUx4B,EAAAA,OAAOC,MACjBw4B,aAAcz4B,EAAAA,OAAOC,MACrBy4B,sBAAuB14B,EAAAA,OAAOC,MAC9B04B,cAAe34B,EAAAA,OAAOC,MACtB24B,uBAAwB54B,EAAAA,OAAOC,MAC/B44B,wBAAyB74B,EAAAA,OAAOC,MAChC64B,qBAAsB94B,EAAAA,OAAOC,MAC7B84B,cAAe/4B,EAAAA,OAAOC,MACtB+4B,kBAAmBh5B,EAAAA,OAAOC,MAC1Bg5B,2BAA4Bj5B,EAAAA,OAAOC,MACnCi5B,mBAAoBl5B,EAAAA,OAAOC,MAC3Bk5B,4BAA6Bn5B,EAAAA,OAAOC,MACpCsc,UAAWvc,EAAAA,OAAOC,MAClBm5B,oBAAqBp5B,EAAAA,OAAOC,QAGhC,IAAQ2yB,EACJzC,EADIyC,WAAYyG,EAChBlJ,EADgBkJ,yBAA0BC,EAC1CnJ,EAD0CmJ,2BAA4BtC,EACtE7G,EADsE6G,iBAAkBuC,EACxFpJ,EADwFoJ,WAoB5F,GAjBAt4B,OAAOu4B,eAAe15B,KAAM,aAAc,CACtC25B,YAAY,EACZC,UAAU,IAEdz4B,OAAOu4B,eAAe15B,KAAM,2BAA4B,CACpD25B,YAAY,EACZC,UAAU,IAEdz4B,OAAOu4B,eAAe15B,KAAM,6BAA8B,CACtD25B,YAAY,EACZC,UAAU,IAITL,GAA4BA,EAAyBl4B,QACrDm4B,GAA8BA,EAA2Bn4B,OAE5B,CAC9B,IAAKo4B,EACD,MAAM,IAAIv6B,MAAM,oDAGpBiC,OAAOu4B,eAAe15B,KAAM,aAAc,CACtC8B,MAAO23B,EACPE,YAAY,EACZC,UAAU,GAElB,CAEA55B,KAAK8yB,WAAaA,EAClB9yB,KAAKu5B,yBAA2BA,GAA4B,GAC5Dv5B,KAAKw5B,2BAA6BA,GAA8B,GAEhE3oB,YAAW,WACP,EAAKunB,mBAAmBlB,GAExB,EAAK2C,+BACL,EAAKC,iCACL,EAAK5B,qBACT,GAAG,EACP,CA/HJ,UA4hBK,OA5hBL,EAiII,EAjIJ,EAiII,0BAOA,SAAY53B,GACR,IAAIk0B,GAAW7f,EAAAA,EAAAA,MAAK3U,MAUpB,OARKqmB,EAAAA,EAAAA,eAAcrmB,KAAK8yB,cACpB0B,EAAS1B,WAAa9yB,KAAK8yB,YAG3BxyB,GAAcA,EAAWe,SACzBmzB,EAAWl0B,EAAW0jB,QAAO,SAACpc,EAAQlD,GAAC,OAAKvD,OAAOuzB,OAAO9sB,EAAQ,MAAGlD,EAAI8vB,EAAS9vB,IAAK,GAAE,CAAC,IAGvF8vB,CACX,GAEA,0CAKA,WAA+B,WACvBx0B,KAAKu5B,yBAAyBl4B,SAC9B04B,EAAAA,EAAAA,WACI,kBAAM,EAAKR,yBAAyBnyB,KAAI,SAAAtC,GAAC,OAAI,EAAKA,EAAE,GAAC,IACrD,kBAAM,EAAKk1B,cAAc,EAAKT,yBAA0B15B,EAAUo6B,SAASC,cAAc,GAGrG,GAEA,4CAKA,WAAiC,WACzBl6B,KAAKw5B,2BAA2Bn4B,SAChC04B,EAAAA,EAAAA,WACI,kBAAM,EAAKP,2BAA2BpyB,KAAI,SAAAtC,GAAC,OAAI,EAAKA,EAAE,GAAC,IACvD,kBAAM,EAAKk1B,cAAc,EAAKR,2BAA4B35B,EAAUo6B,SAASE,gBAAgB,GAGzG,GAEA,2BAOA,SAAc75B,EAAYC,GACtB,IAAMi0B,EAAW/f,KAAKC,UAAU1U,KAAKy0B,YAAYn0B,IAAa,SAAC0C,EAAKlB,GAChE,GAAc,OAAVA,EAAgB,OAAOA,CAE/B,IAEIvB,IAAYV,EAAUo6B,SAASC,cAC/Bz5B,aAAa25B,QAAQp6B,KAAKy5B,WAAYjF,GAC/Bj0B,IAAYV,EAAUo6B,SAASE,iBACtCE,eAAeD,QAAQp6B,KAAKy5B,WAAYjF,EAEhD,GAEA,iCAIA,WAAsB,WACZ8F,EAAyB7lB,KAAK4N,MAAM5hB,aAAa85B,QAAQv6B,KAAKy5B,WAAY,CAAC,IAC3Ee,EAA2B/lB,KAAK4N,MAAMgY,eAAeE,QAAQv6B,KAAKy5B,WAAY,CAAC,IAE/EjF,EAAW,SAAK8F,GAA2BE,GAEjDr5B,OAAOC,KAAKozB,GAAUjzB,SAAQ,SAAAgT,GAAC,OAAK,EAAKA,GAAKigB,EAASjgB,EAAE,GAC7D,GAEA,wCAOA,SAA2BkmB,EAAcC,GAAU,WAK1C16B,KAAKi3B,kBAAkBwD,KAHtB,EAAKxD,kBAAkBwD,GACpBtuB,QAAO,SAAAvI,GAAC,OAAK82B,EAAS/zB,SAAS/C,EAAE,IACjC+2B,OAAOD,EAASvuB,QAAO,SAAAvI,GAAC,OAAK,EAAKqzB,kBAAkBwD,GAAc9zB,SAAS/C,EAAE,KAAGvC,SAErFrB,KAAKi3B,kBAAkBwD,GAAgBC,EAE/C,GAEA,gCAMA,WAA+B,WAAZ3K,EAAQ,UAAH,6CAAG,CAAC,EACxB5uB,OAAOC,KAAK2uB,GAAOxuB,SAAQ,SAAAyB,GACvB,EAAKq1B,QAAQr1B,EAAK+sB,EAAM/sB,GAC5B,GACJ,GAEA,qBAOA,SAAQ43B,EAAU7K,GAAO,WACrB/vB,KAAKk3B,iBAAiB0D,GAAY7K,GAElC8K,EAAAA,EAAAA,WAAU76B,KAAM46B,GAAU,SAAAE,GAEtB,OADA,EAAKxC,iBAAiBsC,EAAUE,EAAOC,UAChCD,CACX,GACJ,GAEA,8BAOA,SAAiBF,EAAU94B,GAAO,WACxB2uB,EAAUzwB,KAAKk3B,iBAAiB0D,GAAUnK,QAC1CH,EAAS,MAAGsK,OAAqBn8B,IAAVqD,EAAsBA,EAAQ9B,KAAK46B,IAC1D1D,EAAmB,MAAG0D,EAAW56B,KAAKk3B,iBAAiB0D,GAAU7K,OAAS,IAE1EU,GAAWtvB,OAAO20B,eAAeC,KAAK/1B,KAAMywB,KAC9CH,EAAOG,GAAWzwB,KAAKywB,GACvByG,EAAiBzG,GAAWzwB,KAAKk3B,iBAAiBzG,GAASV,OAAS,IAGxE,IAAMqG,EAAY,IAAIO,GAAUrG,EAAQ4G,EAAkBl3B,MAE1Do2B,EAAU4E,WAEV75B,OAAOC,KAAKkvB,GAAQ/uB,SAAQ,SAAAyB,GACxB,EAAKm1B,2BAA2Bn1B,EAAKozB,EAAUV,OAAOuF,IAAIj4B,GAC9D,GACJ,GAEA,mCAIA,WAAwB,WACdk0B,EAAmB/1B,OAAOC,KAAKpB,KAAKk3B,kBACpCD,EAAoB91B,OAAOC,KAAKpB,KAAKi3B,mBAC3CC,EAAiB31B,SAAQ,SAAAmD,GACrB,EAAK4zB,iBAAiB5zB,EAAG,EAAKA,GAClC,IAGAuyB,EAAkB11B,SAAQ,SAAA3D,GACjBs5B,EAAiBvwB,SAAS/I,WACpB,EAAKq5B,kBAAkBr5B,EAEtC,GACJ,GAAC,6BAED,SAAgBs9B,GAAU,WAClBA,IACAl7B,KAAKs3B,wBAA0B4D,EAE/Bl7B,KAAKq3B,uBAAwBtI,EAAAA,EAAAA,OACzB,kBAAM,EAAK+D,WAAW1oB,OAAO+wB,gBAAgB,IAC7C,WACI,IACI,IAAMvzB,EAAS,EAAK0vB,0BACpB,IAAI1vB,IAAUA,EAAOlH,MAA+B,mBAAhBkH,EAAOlH,KAMvC,MAAM,IAAIxB,MAAM,iEALhB0I,EAAOlH,MAAK,WACR,EAAKoyB,WAAW1oB,OAAOgxB,kBACvB,EAAK5C,gBAAgB,EAAKlB,wBAC9B,GAIR,CAAE,MAAO15B,IAGAy9B,EAAAA,EAAAA,iBACDC,QAAQ19B,MAAMA,EAEtB,CACJ,IAGZ,GAAC,gCAED,SAAmBs9B,GAAU,WACrBA,IACAl7B,KAAKo3B,4BAA8B8D,EACnCl7B,KAAKm3B,0BAA2BpI,EAAAA,EAAAA,OAC5B,kBAAM,EAAK+D,WAAW1oB,OAAOmxB,oBAAoB,IACjD,WACI,IAAI,MACM3zB,EAAyC,QAAnC,EAAG,EAAKwvB,mCAA2B,aAAhC,UACf,IAAIxvB,IAAUA,EAAOlH,MAA+B,mBAAhBkH,EAAOlH,KAMvC,MAAM,IAAIxB,MAAM,kEALhB0I,EAAOlH,MAAK,WACR,EAAKoyB,WAAW1oB,OAAOoxB,qBAAoB,GAC3C,EAAK/C,mBAAmB,EAAKrB,4BACjC,GAIR,CAAE,MAAOx5B,IAGAy9B,EAAAA,EAAAA,iBACDC,QAAQ19B,MAAMA,EAEtB,CACJ,IAGZ,GAAC,sBAED,SAASs9B,GAAU,WACfl7B,KAAKu3B,gBAAiBxI,EAAAA,EAAAA,OAClB,kBAAM,EAAK+D,WAAW1oB,OAAOqxB,cAAc,iBAC3C,qFAE6C,GAF7C,WAEc7zB,EAAS,EAAK4vB,qBACN5vB,EAAOlH,MAA+B,mBAAhBkH,EAAOlH,KAAmB,gBAC1DkH,EAAOlH,MAAK,WACR,EAAKoyB,WAAW1oB,OAAOsxB,WAAU,GACjC,EAAKhD,SAAS,EAAKlB,gBACvB,IAAG,4BAEG,IAAIt4B,MAAM,sDAAqD,wDAKpEm8B,EAAAA,EAAAA,iBACDC,QAAQ19B,MAAM,EAAD,IAChB,0DAIboC,KAAKw3B,gBAAkB0D,CAC3B,GAAC,0BAED,SAAaA,GAAU,WACnBl7B,KAAKy3B,oBAAqB1I,EAAAA,EAAAA,OACtB,kBAAM,EAAK+D,WAAW1oB,OAAOuxB,qBAAqB,iBAClD,qFAEkD,GAFlD,WAEc/zB,EAAS,EAAK8vB,0BACN9vB,EAAOlH,MAA+B,mBAAhBkH,EAAOlH,KAAmB,gBAC1DkH,EAAOlH,MAAK,WACR,EAAKoyB,WAAW1oB,OAAOwxB,gBAAe,GACtC,EAAKjD,aAAa,EAAKjB,qBAC3B,IAAG,4BAEG,IAAIx4B,MAAM,2DAA0D,wDAKzEm8B,EAAAA,EAAAA,iBACDC,QAAQ19B,MAAM,EAAD,IAChB,0DAIboC,KAAK03B,qBAAuBwD,CAChC,GAAC,mCAED,SAAsBA,GAAU,WAC5Bl7B,KAAK23B,6BAA8BoC,EAAAA,EAAAA,WAC/B,kBAAM,EAAKjH,WAAWzoB,OAAOwxB,iBAAiB,IAC9C,SAAAC,GACI,IACI,EAAKlE,+BAA+BkE,EACxC,CAAE,MAAOl+B,IAGAy9B,EAAAA,EAAAA,iBACDC,QAAQ19B,MAAMA,EAEtB,CACJ,IAGJoC,KAAK43B,+BAAiCsD,CAC1C,GAAC,2BAED,SAAcA,GAAU,WACpBl7B,KAAK63B,qBAAsBkC,EAAAA,EAAAA,WACvB,kBAAM,EAAKjH,WAAWtoB,GAAG4L,eAAe,IACxC,SAAAA,GACI,IACI,EAAK0hB,sBAAsB1hB,EAC/B,CAAE,MAAOxY,IAGAy9B,EAAAA,EAAAA,iBACDC,QAAQ19B,MAAMA,EAEtB,CACJ,IAGJoC,KAAK83B,sBAAwBoD,CACjC,GAAC,oCAED,SAAuBA,GAAU,WAC7Bl7B,KAAK+3B,gCAAiChJ,EAAAA,EAAAA,OAClC,kBAAM,EAAK+D,WAAWtoB,GAAGuxB,6BAA6B,IACtD,WACI,IACI,IAAMn0B,EAAS,EAAKowB,qCACpB,IAAIpwB,IAAUA,EAAOlH,MAA+B,mBAAhBkH,EAAOlH,KAMvC,MAAM,IAAIxB,MAAM,mEALhB0I,EAAOlH,MAAK,WACR,EAAKoyB,WAAWtoB,GAAGwxB,yBAAwB,GAC3C,EAAKlD,uBAAuB,EAAKd,mCACrC,GAIR,CAAE,MAAOp6B,IAGAy9B,EAAAA,EAAAA,iBACDC,QAAQ19B,MAAMA,EAEtB,CACJ,IAGJoC,KAAKg4B,mCAAqCkD,CAC9C,GAAC,qCAED,WACiD,mBAAlCl7B,KAAKm3B,0BACZn3B,KAAKm3B,2BAETn3B,KAAKo3B,4BAA8B,IACvC,GAAC,kCAED,WAC8C,mBAA/Bp3B,KAAKq3B,uBACZr3B,KAAKq3B,wBAETr3B,KAAKs3B,wBAA0B,IACnC,GAAC,2BAED,WACuC,mBAAxBt3B,KAAKu3B,gBACZv3B,KAAKu3B,iBAETv3B,KAAKw3B,gBAAkB,IAC3B,GAAC,+BAED,WAC2C,mBAA5Bx3B,KAAKy3B,oBACZz3B,KAAKy3B,qBAETz3B,KAAK03B,qBAAuB,IAChC,GAAC,wCAED,WACoD,mBAArC13B,KAAK23B,6BACZ33B,KAAK23B,8BAET33B,KAAK43B,+BAAiC,IAC1C,GAAC,gCAED,WAC4C,mBAA7B53B,KAAK63B,qBACZ73B,KAAK63B,sBAET73B,KAAK83B,sBAAwB,IACjC,GAAC,yCAED,WACuD,mBAAxC93B,KAAK+3B,gCACZ/3B,KAAK+3B,iCAET/3B,KAAKg4B,mCAAqC,IAC9C,GAAC,uBAED,WACIh4B,KAAK+4B,0BACL/4B,KAAKg5B,uBACLh5B,KAAKi5B,gBACLj5B,KAAKk5B,oBACLl5B,KAAKm5B,6BACLn5B,KAAKo5B,qBACLp5B,KAAKq5B,6BACT,GAAC,iCAED,SAAoB4C,GAEhB,GAAIj8B,KAAK8yB,WAAW1oB,OAAO6xB,UAAYA,EAAS,4BAFpBC,EAAS,iCAATA,EAAS,kBAGjCA,EAAU36B,SAAQ,SAAA46B,GAAG,OAAIA,GAAK,IAC9Bn8B,KAAKi4B,oBAAqB,CAC9B,CACJ,IA5hBJ,mFA4hBK,EAnhByB,GAATp4B,GAIVo6B,SAAW94B,OAAOi7B,OAAO,CAC5BlC,cAAemC,OAAO,iBACtBlC,gBAAiBkC,OAAO,qBCbzB,IAkBMC,GAAgB,SAAC3a,EAAU3e,GACpC,IAAMoc,EAAQuC,EAAS4a,WAAU,SAAAzY,GAAC,OAAIA,EAAE9gB,MAAQA,CAAG,IAC/Coc,GAAS,GACTuC,EAAS6a,OAAOpd,EAAO,EAE/B,w9CCtBO,IAAMqd,GAAiB,WAmB1B,WAAYviB,EAAcwiB,GAAqF,IAAxEC,EAAuB,UAAH,6CAAG,KAAI,yDAAyC,CAAC,EAAtCv0B,EAAK,EAALA,MAAOw0B,EAAU,EAAVA,WAAYC,EAAa,EAAbA,2GAAa,cAlBtGz0B,WAAK,OACL00B,eAAS,OACTC,WAAK,OACLC,gBAAU,OAEVC,UAAI,OACJC,SAAG,OAEHC,cAAQ,OACRC,eAAS,OAETC,oBAAc,OACdC,qBAAe,OACfC,uBAAiB,OACjBjX,WAAK,OAELqW,0BAAoB,GAGhB58B,EAAAA,EAAAA,gBAAeC,KAAM,CACjBoI,MAAOnI,EAAAA,WACP68B,UAAW78B,EAAAA,WACX88B,MAAO98B,EAAAA,WACP+8B,WAAY/8B,EAAAA,WACZg9B,KAAMh9B,EAAAA,WACNi9B,IAAKj9B,EAAAA,WACLk9B,SAAUl9B,EAAAA,WACVm9B,UAAWn9B,EAAAA,WACXo9B,eAAgBp9B,EAAAA,WAChBq9B,gBAAiBr9B,EAAAA,WACjBs9B,kBAAmBt9B,EAAAA,WACnBqmB,MAAOrmB,EAAAA,WACPu9B,eAAgBt9B,EAAAA,OAAOC,MACvBs9B,mBAAoBv9B,EAAAA,OAAOC,MAC3Bu9B,gBAAiBx9B,EAAAA,OAAOC,MACxBw9B,mBAAoBz9B,EAAAA,OAAOC,MAC3BgwB,cAAeyN,EAAAA,SACfC,cAAeD,EAAAA,WAGnB59B,KAAKoI,MAAQA,EACbpI,KAAK88B,UAAYF,GAAckB,EAAAA,oBAAoBC,MACnD/9B,KAAKmV,SAAWnV,KAAK09B,gBAGrB19B,KAAK28B,qBAC+B,mBAAzBA,EAAsCA,EAAqBqB,KAAKh+B,MAAQ,WAAO,EAE1FA,KAAKi9B,KAAO/iB,GAAgB,EACxBwiB,IACA18B,KAAKk9B,IAAMR,GAGf18B,KAAK+8B,MAAQ/8B,KAAK69B,cAElB,IAAMI,IAAgB/jB,EACtBla,KAAKm9B,UAAYc,GAAe,QAAQz4B,KAAK0U,GAC7Cla,KAAKo9B,WAAaP,GAAiBoB,EACnCj+B,KAAKq9B,gBAAkBY,CAC3B,WA6BC,SA7BA,iCAED,SAAehB,EAAMC,GAAmB,UAAH,gDAE7Bl9B,KAAKm9B,SAAW,QAAQ33B,KAAKy3B,IAEjCj9B,KAAKi9B,KAAOA,QAAQx+B,EACpBuB,KAAKk9B,IAAMA,QAAOz+B,CACtB,GAAC,gCAED,SAAmBy/B,EAAgBh5B,GAC/BlF,KAAK+8B,MAASmB,GAAkBC,EAAAA,gBAAgBj5B,IAAmBlF,KAAK69B,aAC5E,GAAC,6BAED,YAA+B,IAAbZ,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IACpBl9B,KAAKw9B,eAAeP,EAAMC,GAAK,GAC/Bl9B,KAAK28B,qBAAoB,MAAzB38B,KAAI,GD3EoB,SAACo+B,GAAW,2BAAKC,EAAa,iCAAbA,EAAa,yBAC1DA,EACKlyB,QAAO,SAAA5G,GAAO,OAAIA,OAAyC,IAC3D6B,KAAI,SAAA7B,GAAO,gBAAO64B,IAAgB,QAAQ54B,KAAKD,GAAW,IAAM,IAAE,OAAGA,EAAO,GAAG,CCwEnD+4B,CAAiBt+B,KAAKm9B,SAAUF,EAAMC,IACvE,GAAC,gCAED,SAAmBqB,GACfv+B,KAAKoI,MAAQm2B,EAAejJ,EAAAA,eAAekJ,UAAYlJ,EAAAA,eAAeG,IAC1E,GAAC,yBAED,WACI,YAA6B,IAAdz1B,KAAKi9B,YAA6C,IAAbj9B,KAAKk9B,IAC7D,GAAC,yBAED,WACI,OAAOuB,EAAAA,eAAez+B,KAAKmwB,cAC/B,uFAAC,EAzFyB,kECGjBuO,GAAoB,CAC7BC,SAAU,WACVC,YAAa,cACbC,UAAW,aAGFC,GAAwB,SAAH,GAAiE,IAA3Dnd,EAAQ,EAARA,SAAUzc,EAAa,EAAbA,cAAa,IAAEF,cAAAA,OAAa,IAAG,GAAC,EAAC,EAC/E,GADwF,EAAP+5B,SAThD,SAAC75B,EAAeF,GAAa,OAC9DkkB,EAAAA,EAAAA,sBAAqBhkB,IAAkBF,EAAcg6B,WAAW,CASjDC,CAA6B/5B,EAAeF,GAAgB,CACvE,IAAMk6B,EAAe/9B,OAAOU,OAAO68B,IAC7BhN,EAAgBvwB,OAAOC,KAAK4D,EAAcg6B,aAAan3B,MACzD,SAAA0M,GAAC,OAAIA,IAAMmqB,GAAkBG,WAAa75B,EAAcg6B,YAAYzqB,GAAGzS,KAAK,IAGhFo9B,EAAa39B,SAAQ,SAAAyB,GACjB,IAAMm8B,EAAkBn6B,EAAcg6B,YAAYh8B,GAElD,GAAKm8B,GAAoBA,EAAgBr9B,MAAzC,CAKA,IAAIyD,EAAUoc,EAASzT,MAAK,SAAA4V,GAAC,OAAIA,EAAE9gB,MAAQA,CAAG,IAE9C,GAAIuC,EAAS,CACT,GAAIA,EAAQ03B,QAAUkC,EAAgBr9B,MAClC,OAGJyD,EAAQ4P,SAAS,CACb8nB,KAAMkC,EAAgBr9B,OAE9B,KAAO,CACH,IAAMs9B,EAAc,CAChBp8B,IAAAA,EACAsjB,MAAO,GAAF,OAAK6Y,EAAgBpb,cAC1B3b,MAAOpF,IAAQ07B,GAAkBE,YAActJ,EAAAA,eAAeE,MAAQF,EAAAA,eAAe+J,OACrFjC,WAAW,EACXN,UACI95B,IAAQ07B,GAAkBC,SAAWb,EAAAA,oBAAoBwB,OAASxB,EAAAA,oBAAoBC,MAC1FV,eAAgB3L,GAAiB1uB,IAAQ07B,GAAkBC,SAC3DpB,mBAAmB,EACnBgC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAkBz8B,IAAQ07B,GAAkBC,UAAY,KAE5Dp5B,EAAU,IAAIk3B,GAAkB0C,EAAgBr9B,OAEhDX,OAAOuzB,OAAOnvB,EAAS65B,GACvBzd,EAASuC,KAAK3e,EAClB,CA9BA,MAFI+2B,GAAc3a,EAAU3e,EAiChC,GACJ,KAAO,CACkB7B,OAAOU,OAAO68B,IACtBn9B,SAAQ,SAAAm+B,GAAC,OAAIpD,GAAc3a,EAAU+d,EAAE,GACxD,CACJ,47BC7DA,0rQAgDA,IACMC,GAAoB,CAAC,EAENC,GAAU,aAnD/B,sRAmD+B,UAnD/B,MAwjDK,EAhLA,EA/EA,EA3BA,EA5XA,EAxQA,EA/CA,EAXA,EA7BA,EAhBA,EAjEA,EATA,EAtBA,EAha0B,QA4H3B,cAA4B,MAAd9M,EAAU,EAAVA,YA/KlB,4FA+K4B,SA2PlB,OA7NF,cAAM,CACFA,WAAAA,EACAyG,yBA/B6B,CAC7B,SACA,WACA,YACA,YACA,QACA,sBACA,gBACA,WACA,gBACA,cACA,cACA,cACA,kBACA,gBACA,mBACA,kBACA,iBACA,gBACA,WACA,aACA,aACA,aACA,aACA,SACA,YACA,cACA,4BAKAE,WAhKO,cAiKPvC,iBAAkBpH,QA5J1B+P,4BAA6B,EAAK,EAClCC,qBAAsB,EAAK,EAC3BzoB,kBAAmB,EAAK,EACxB0oB,SAAW,EAAC,EACZC,iBAAkB,EAAK,EAGvBl3B,YAAM,IACNsO,kBAAmB,EAAK,EACxB6oB,gBAAkB,GAAE,EACpB9wB,eAAiB,GAAE,EAEnBkN,gBAAkB,GAAE,EAGpBiW,qBAAuB,GAAE,EACzB1B,oBAAsB,GAAE,EACxB1rB,cAAgB,GAAE,EAClB+sB,oBAAsB,CAAC,EAAC,EACxBzrB,YAAc,CAAC,EAAC,EAGhBuU,OAAS,GAAE,EACXmlB,MAAQ,GAAE,EACVC,WAAa,GAAE,EACf11B,SAAW,GAAE,EACb21B,eAAiB,CAAC,EAAC,EAGnB39B,SAAW,EAAC,EACZgwB,iBAAmB,CAAC,EAAC,EACrBtG,cAAgB,GAAE,EAClBqH,oBAAsB,GAAE,EACxB7C,YAAc,GAAE,EAChB0P,aAAe,GAAE,EACjBrV,YAAc,GAAE,EAChB+H,YAAc,WAAU,EAGxB9C,UAAY,GAAE,EACdM,UAAY,GAAE,EACdJ,cAAgB,EAAC,EACjBxO,SAAW,GAAE,EACb2e,gBAAkB,GAAE,EACpB7f,aAAe,KAAI,EACnB8f,gBAAkB,GAAE,EAGpB7P,WAAa8P,OAAO,GAAE,EACtBC,iBAAmB,GAAE,EACrB3V,WAAa,KAAI,EACjBwG,SAAW,GAAE,EAEb2C,kBAAoB,GAAE,EAQtBE,mBAAqB,GAAE,EAGvB7e,WAAa,EAAC,EACdorB,+BAAgC,EAAK,EAGrCC,cAAgB,CAAC,EAAC,EAClBC,cAAgB,CAAC,EAAC,EAGlBpkB,sBAAgB,IAChBD,oCAAqC,EAAK,EAG1CskB,uBAAyB,GAAE,EAC3BC,YAAc,IAAI,EAClBC,eAAiB,EAAC,EAClBC,cAAgB,EAAC,EACjBC,oBAAsB,CAAC,EAAC,EACxBC,kBAAoB,EAAC,EAGrB5W,gBAAU,IACV6W,sBAAwB,GAAE,EAC1B1P,eAAS,IACTE,iBAAW,IACXD,eAAgB,EAAK,EACrBE,iBAAkB,EAAK,EACvBwP,kBAAmB,EAAK,EACxBC,gBAAU,IACVC,wBAAkB,IAClBC,cAAQ,IACRC,gBAAU,IACVC,2BAAqB,IACrBC,sBAAwB,MAAK,EAC7BC,wBAA0B,GAAE,EAG5BC,cAAgB,CAAC,EAAC,EAClBC,eAAiB,CAAC,EAAC,EAGnBC,mBAAqB,kBAAiB,EAGtCC,0BAA2B,EAAI,EAG/BC,iCAA2B,IAE3BC,kBAAoB,kBAAM,IAAI,IAC9BC,kBAAoBC,KAAS,EAAKC,gBAAiB,KAAI,EACvDC,kBAAoB,CAAC,EAAC,EACtBC,wBAAyB,EAAK,EAE9BC,sBAAgB,IAChBC,4BAA6B,EAAK,EAElCC,+BAAgC,EAAK,EAwSrCC,eAAiB,WACb,EAAK5P,WAAWxoB,eAAeq4B,UAAY,EAC/C,EAAC,EAmSDC,eAAiB,SAAAjC,GACb,GAAKA,EAAL,CAGA,IAAQp7B,EAAsDo7B,EAAtDp7B,QAASL,EAA6Cy7B,EAA7Cz7B,cAAegV,EAA8BymB,EAA9BzmB,aAAcwiB,EAAgBiE,EAAhBjE,YAE9C,IAAImG,EAAAA,EAAAA,oBAAmB39B,GAAgB,CACnC,IAAMkD,EAAQ,EAAK0qB,WAAWtoB,GAAG4L,gBAAkBkf,EAAAA,eAAekJ,UAAYlJ,EAAAA,eAAeG,KAG7F,EAAKhV,aAAe,IAAIgc,GACpB,EAAK6D,iBAAmB/6B,GAAW2U,EACnCwiB,EACA,EAAKC,qBACL,CACIv0B,MAAO,EAAKk4B,gBAAkBjL,GAAgBnwB,GAAiBkD,EAC/Dw0B,WAAY,EAAK0D,iBAAmBxC,EAAAA,oBAAoBgF,OACxDjG,cAAe,EAAK7f,WAAa,EAAKzW,YAIlD,MACI,EAAKka,aAAe,IAnBxB,CAqBJ,EAAC,EAEDsiB,WAAaZ,KAAS,EAAKtQ,gBAAiB,KAAI,EAqGhDmR,uBAAyB,WACrB,IAAMC,EAAoBnvB,SAASovB,uBAAuB,+BACpDC,EAAsBrvB,SAASovB,uBAAuB,gBAC5D,GAAG3hC,QAAQy8B,KAAKmF,GAAqB,SAAAxoB,GACjCA,EAAGyoB,UAAUpzB,IAAI,yBACrB,GAFA,GAGA,GAAGzO,QAAQy8B,KAAKiF,GAAmB,SAAAtoB,GAC/BA,EAAGyoB,UAAUpzB,IAAI,oCACrB,GAFA,EAGJ,EAAC,EAwiBDqzB,kBAAoB,KAAI,EAwBxBliB,YAAc,SAACmiB,EAAKpc,GA0BhB,GAAsB,IAAlBoc,EAAIllC,UAAiB,CACrB,IAAM4E,EAAMyR,KAAKC,UAAU4uB,GACrBtlC,EAAaE,EAAAA,GAAGqlC,sBAAsBD,GA3BnB,WAAa,2BAAT12B,EAAI,yBAAJA,EAAI,gBAEjC,GADAsa,EAAQ,aAAIta,GACR,EAAKkQ,eAAgB,CACrB,IAAI0mB,EAAoB,CAAC,EACzB,GAAI,SAAU52B,EAAK,GAAI,CACnB,MAAiCA,EAAK,GAAGqI,KAAjC0E,EAAK,EAALA,MAAO8pB,EAAK,EAALA,MAAO36B,EAAM,EAANA,OACtB,GAAI,EAAKA,SAAWA,EAAQ,OAC5B06B,EAAoB,CAChBhsB,aAAcisB,EACdhsB,kBAAmBkC,EAE3B,KAAO,MAAI,YAAa/M,EAAK,IASzB,OARA,MAA0BA,EAAK,GAAG0a,QAA1Boc,EAAM,EAANA,OAAQvzB,EAAK,EAALA,MACVrH,EAAS8D,EAAK,GAAG+2B,SAASC,cAChC,GAAI,EAAK96B,SAAWA,EAAQ,OAC5B06B,EAAoB,CAChBhsB,aAAcksB,EAAOA,EAAOriC,OAAS,GACrCoW,kBAAmBtH,EAAMA,EAAM9O,OAAS,GAIhD,CACA,EAAKyxB,WAAWxoB,eAAeu5B,8BAA8BL,EACjE,CACJ,IAII7D,GAAkB38B,GAAOhF,CAC7B,CACJ,EAAC,EAEDgjB,SAAW,SAAAsiB,GACP,IAAMtgC,EAAMyR,KAAKC,UAAU4uB,GACvB3D,GAAkB38B,KAClB28B,GAAkB38B,GAAKnE,qBAChB8gC,GAAkB38B,GAGjC,EAAC,EAEDie,eAAiB,SAAA6iB,GACb5lC,EAAAA,GAAG6lC,aAAaD,EACpB,EAAC,EAED5iB,cAAgB,SAAAoiB,GACZ,OAAIA,EAAIU,KACGC,KAAAA,cAAyBvjC,MAAK,SAAAgK,GACjC,OAAIA,EACO,CACHw5B,SAAU,OACVF,KAAMt5B,EAAYy5B,QAGnBjmC,EAAAA,GAAG8lC,MACd,IAEAV,EAAIn0B,eACGjR,EAAAA,GAAGkkB,cAAc,SAExBkhB,EAAIz1B,cACG3P,EAAAA,GAAGuP,aAAa61B,EAAIz1B,eAExB3P,EAAAA,GAAGqC,QAAQ6jC,KAAKd,EAC3B,EAAC,EAeDjiB,aAAe,SAAApU,GACX,EAAKg1B,kBAAoBh1B,CAC7B,GAh0CIlN,EAAAA,EAAAA,gBAAe,GAAD,GAAO,CACjB8gC,uBAAwB5gC,EAAAA,WACxBkP,eAAgBlP,EAAAA,WAChB8a,OAAQ9a,EAAAA,WACRgwB,UAAWhwB,EAAAA,WACXswB,UAAWtwB,EAAAA,WACXkwB,cAAelwB,EAAAA,WACfsgC,gBAAiBtgC,EAAAA,WACjB0hB,SAAU1hB,EAAAA,WACVkgC,WAAYlgC,EAAAA,WACZigC,MAAOjgC,EAAAA,WACPyhC,sBAAuBzhC,EAAAA,WACvBqhC,mBAAoBrhC,EAAAA,WACpB0hC,wBAAyB1hC,EAAAA,WACzBohC,WAAYphC,EAAAA,WACZqyB,qBAAsBryB,EAAAA,WACtB2wB,oBAAqB3wB,EAAAA,WACrBiF,cAAejF,EAAAA,WACfgyB,oBAAqBhyB,EAAAA,WACrBwK,SAAUxK,EAAAA,WACVwyB,iBAAkBxyB,EAAAA,WAClBksB,cAAelsB,EAAAA,WACfuzB,oBAAqBvzB,EAAAA,WACrBwC,SAAUxC,EAAAA,WACVuhC,WAAYvhC,EAAAA,WACZ0wB,YAAa1wB,EAAAA,WACbogC,aAAcpgC,EAAAA,WACd+qB,YAAa/qB,EAAAA,WACb8yB,YAAa9yB,EAAAA,WACboc,gBAAiBpc,EAAAA,WACjB6gC,YAAa7gC,EAAAA,WACbmhC,iBAAkBnhC,EAAAA,WAClB+/B,gBAAiB//B,EAAAA,WACjByxB,cAAezxB,EAAAA,WACf2xB,gBAAiB3xB,EAAAA,WACjBqgC,gBAAiBrgC,EAAAA,WACjBwhC,sBAAuBxhC,EAAAA,WACvB6c,eAAgB8gB,EAAAA,SAChBphB,iBAAkBvc,EAAAA,WAClB8/B,SAAU9/B,EAAAA,WACVmX,iBAAkBnX,EAAAA,WAClBygC,8BAA+BzgC,EAAAA,WAC/B6/B,oBAAqB7/B,EAAAA,WACrB4/B,2BAA4B5/B,EAAAA,WAC5BoX,iBAAkBpX,EAAAA,WAClB8hC,yBAA0B9hC,EAAAA,WAC1B+c,UAAW4gB,EAAAA,SACXtoB,WAAYrV,EAAAA,WACZ2hC,cAAe3hC,EAAAA,WACfwgB,aAAcxgB,EAAAA,WACdk0B,mBAAoBl0B,EAAAA,WACpBg0B,kBAAmBh0B,EAAAA,WACnB8gC,eAAgB9gC,EAAAA,WAChB+gC,cAAe/gC,EAAAA,WACfkhC,sBAAuBlhC,EAAAA,WACvBqqB,WAAYrqB,EAAAA,WACZggC,gBAAiBhgC,EAAAA,WACjB0gC,cAAe1gC,EAAAA,WAAWgN,IAC1B2zB,cAAe3gC,EAAAA,WAAWgN,IAC1Bo3B,kBAAmBnkC,EAAAA,OAAOC,MAC1BmxB,SAAUrxB,EAAAA,WACVqkC,qBAAsBpkC,EAAAA,OAAOC,MAC7B0hC,eAAgB5hC,EAAAA,WAChBsc,mCAAoCtc,EAAAA,WACpCwiC,8BAA+BxiC,EAAAA,WAC/BmgC,eAAgBngC,EAAAA,WAChBywB,WAAYzwB,EAAAA,WACZwgC,iBAAkBxgC,EAAAA,WAClB6qB,WAAY7qB,EAAAA,WACZwxB,UAAWxxB,EAAAA,WACXshC,SAAUthC,EAAAA,WACV6I,OAAQ7I,EAAAA,WACR0xB,YAAa1xB,EAAAA,WACbihC,kBAAmBjhC,EAAAA,WACnBghC,oBAAqBhhC,EAAAA,WACrBuG,YAAavG,EAAAA,WACbskC,wBAAyBrkC,EAAAA,OAAOC,MAChCqkC,gBAAiB5G,EAAAA,SACjBhd,mBAAoBgd,EAAAA,SACpB6G,8BAA+BvkC,EAAAA,OAAOC,MACtCqgB,iBAAkBtgB,EAAAA,OAAOC,MACzBukC,8BAA+BxkC,EAAAA,OAAOC,MACtCuiC,eAAgBxiC,EAAAA,OAAOC,MACvBwkC,wBAAyBzkC,EAAAA,OAAOC,MAChCykC,kBAAmB1kC,EAAAA,OAAOC,MAC1B0kC,mBAAoB3kC,EAAAA,OAAOC,MAC3B6hC,4BAA6B/hC,EAAAA,WAC7B6kC,eAAgB5kC,EAAAA,OAAOC,MACvB0gB,aAAc3gB,EAAAA,OAAOC,MACrB4kC,kBAAmB7kC,EAAAA,OAAOC,MAC1Bmc,mBAAoBpc,EAAAA,OAAOC,MAC3BihB,uBAAwBwc,EAAAA,SACxBoH,oBAAqB9kC,EAAAA,OAAOC,MAC5B8oB,cAAe2U,EAAAA,SACfqH,4BAA6BrH,EAAAA,SAC7B7gB,wBAAyB6gB,EAAAA,SACzBr3B,WAAYq3B,EAAAA,SACZsH,kBAAmBhlC,EAAAA,OAAOC,MAC1BglC,eAAgBjlC,EAAAA,OAAOC,MACvBugB,uBAAwBkd,EAAAA,SACxBwH,+BAAgCllC,EAAAA,OAAOC,MACvCklC,4BAA6BnlC,EAAAA,OAAOC,MACpCmlC,oBAAqBplC,EAAAA,OAAOC,MAC5BgV,SAAUjV,EAAAA,OAAOC,MACjBolC,iBAAkBrlC,EAAAA,OAAOC,MACzBw8B,qBAAsBz8B,EAAAA,OAAOC,MAC7BqlC,gBAAiBtlC,EAAAA,OAAOC,MACxB0K,QAAS3K,EAAAA,OAAOC,MAChBslC,mBAAoBvlC,EAAAA,OAAOC,MAC3B4iC,WAAY7iC,EAAAA,OAAOC,MACnBsc,UAAWipB,EAAAA,SACXhpB,kBAAmBxc,EAAAA,OAAOC,MAC1BwlC,yBAA0BzlC,EAAAA,OAAOC,MACjC0xB,gBAAiB3xB,EAAAA,OAAOC,MACxBylC,sBAAuB1lC,EAAAA,OAAOC,MAC9B0lC,QAAS3lC,EAAAA,OAAOC,MAChBiiC,gBAAiBliC,EAAAA,OAAOC,MACxB2lC,qBAAsB5lC,EAAAA,OAAOC,MAC7B4lC,mBAAoB7lC,EAAAA,OAAOC,MAC3B6lC,oBAAqB9lC,EAAAA,OAAOC,MAC5B8lC,iBAAkB/lC,EAAAA,OAAOC,MACzB+lC,cAAehmC,EAAAA,OAAOC,MACtBgmC,kBAAmBjmC,EAAAA,OAAOC,MAC1B2gB,eAAgB5gB,EAAAA,OAAOC,MACvBimC,4BAA6BlmC,EAAAA,OAAOC,MACpCwc,iBAAkBzc,EAAAA,OAAOC,MACzBkmC,iBAAkBnmC,EAAAA,OAAOC,MACzBmmC,yBAA0BpmC,EAAAA,OAAOC,MACjComC,gBAAiBrmC,EAAAA,OAAOC,MACxByc,mBAAoB1c,EAAAA,OAAOC,MAC3BqmC,kBAAmBtmC,EAAAA,OAAOC,MAC1BsmC,uBAAwBvmC,EAAAA,OAAOC,MAC/BsnB,wBAAyBvnB,EAAAA,OAAOC,MAChCumC,iBAAkBxmC,EAAAA,OAAOC,MACzBwmC,eAAgBzmC,EAAAA,OAAOC,MACvB0c,kBAAmB+gB,EAAAA,SACnBgJ,oBAAqB1mC,EAAAA,OAAOC,MAC5Bw9B,mBAAoBz9B,EAAAA,OAAOC,MAC3B0mC,yBAA0B3mC,EAAAA,OAAOC,MACjCw0B,YAAaz0B,EAAAA,OAAOC,MACpB2mC,aAAc5mC,EAAAA,OAAOC,MACrB2hC,mBAAoB7hC,EAAAA,cAIxB85B,EAAAA,EAAAA,WACI,iBAAM,CAAC,EAAKzH,qBAAsB,EAAKG,iBAAkB,EAAKtG,cAAe,EAAK4G,YAAY,IAC9F,WACI,EAAK0R,+BACT,KAEJ1K,EAAAA,EAAAA,WACI,kBAAM,EAAKgG,QAAQ,IACnB,WACI,EAAKuF,qBACT,KAEJvL,EAAAA,EAAAA,WACI,kBAAM,EAAKjxB,MAAM,IACjB,WACI,IAAMi+B,GAAOC,EAAAA,EAAAA,iCAAgC,EAAKl+B,OAAQ,EAAKiqB,aAC3DgU,IACA,EAAKpW,YAAcoW,GAEvB,EAAKzC,uBACL,EAAKwB,sBACT,KAEJ/L,EAAAA,EAAAA,WACI,kBAAM,EAAK5N,aAAa,IACxB,WACI,EAAKmG,qBAA8C,MAAvB,EAAKnG,cAAwB,OAAS,UACtE,KAEJ4N,EAAAA,EAAAA,WACI,iBAAM,CAAC,EAAKrI,cAAe,EAAKE,gBAAgB,IAChD,WACS,EAAKF,gBACN,EAAKuF,kBAAkBxF,UAAY,IAElC,EAAKG,kBACN,EAAKqF,kBAAkBtF,YAAc,GAE7C,KAEJoI,EAAAA,EAAAA,WACI,iBAAM,CAAC,EAAK70B,cAAc,IAC1B,WACI,EAAK4tB,WAAWvoB,UAAU08B,gBAAgB,EAAK/hC,eAC3C,EAAK4X,gBAAkB,EAAKmM,eAAiB,EAAKjM,UAElD7b,OAAOuzB,OAAO,EAAKwC,iBAAkB1F,cAI9B,EAAK0F,iBAAiBzF,iBACtB,EAAKyF,iBAAiBvF,aAEjC,EAAKmU,sBACT,KAEJ/L,EAAAA,EAAAA,WACI,kBAAM,EAAKjH,WAAWzoB,OAAOiW,gBAAgB,IAC7C,WACI,EAAK8X,mBAAmBtI,MACxB,EAAK2U,gCACA,EAAK1pB,QACN,EAAKwd,uBAEb,KAEJxJ,EAAAA,EAAAA,OACI,kBAAM,EAAK8R,uBAAuBx/B,MAAM,IACxC,kBAAM,EAAKijC,sBAAsB,IACnC,CACN,CAyqCC,OAplDL,EA2aK,EA3aL,EA2aK,wCAED,WAAkC,WAC9B,OAAOtkC,KAAKmP,eAAetH,MACvB,SAAAq/B,GAAW,OAAIA,EAAYp+B,SAAW,EAAKA,QAA2C,IAAjCo+B,EAAYC,gBAAsB,GAE/F,GAAC,kCAED,YACS9gB,EAAAA,EAAAA,eAAcrmB,KAAK8yB,WAAWxoB,eAAe0V,4BAC9ChgB,KAAK8yB,WAAWxoB,eAAe88B,8BAEvC,GAAC,kCAED,WAEQpnC,KAAK8c,iBACJ9c,KAAK6gC,uBAAuBl6B,SAAS3G,KAAK8gC,cAC3C9gC,KAAK6gC,uBAAuBx/B,SAE5BrB,KAAK8gC,YAAc9gC,KAAK6gC,uBAAuB,GAEvD,GAAC,qCAED,SAAwBwG,KACdA,KAAkBrnC,KAAKyiC,gCAEzBziC,KAAKyiC,8BAAgC4E,EAE7C,GAAC,4BAED,SAAeve,GACX9oB,KAAKqX,iBAAmByR,CAC5B,GAAC,qBAED,WACI9oB,KAAK+kC,oBACL/kC,KAAK2gC,cAAgB,CAAC,EACtB3gC,KAAK4gC,cAAgB,CAAC,EACtB5gC,KAAKqiC,kBAAoB,CAAC,CAC9B,GAAC,gDAMD,gHACkE,OAD1CiF,IAA4B,EAAH,+BAASC,IAAsB,EAAH,+BACzEvnC,KAAKuc,mCAAqCgrB,EAAoB,SAExDvnC,KAAKimC,mBAAkB,uBACvBjmC,KAAK8yB,WAAW3jB,eAAe82B,mBAAkB,WACnDqB,EAA2B,CAAF,iCAAQtnC,KAAKqmC,mBAAkB,yBAE5CnoC,EAAAA,GAAGqC,QAAQinC,aAAaxnC,KAAK8I,QAAO,QAA7C,GAAD8c,EAAI,EAAH,MACH,CAAC,gBAAiB,yBAAyBjf,SAAgB,QAAR,EAACif,EAAEhoB,aAAK,aAAP,EAAS6pC,MAAO,CAAF,kCACnCC,EAAAA,EAAAA,mBAAkB1nC,KAAKmP,gBAAe,QAA/C,OAAhBw4B,EAAmB,EAAH,eAChB3nC,KAAK4nC,sBAAsB,CAAE9+B,OAAQ6+B,IAAmB,SAGlEE,EAAAA,EAAAA,cAAY,WACR,EAAKtrB,oCAAqC,CAC9C,IAAG,iDACN,4FAED,wFACSvc,KAAKilC,4BAA6B,CAAF,eACH,OAA9BjlC,KAAKqX,kBAAmB,EAAM,UAETqwB,EAAAA,EAAAA,mBAAkB1nC,KAAKmP,gBAAe,OAA/C,OAANrG,EAAS,EAAH,cACN9I,KAAK4nC,sBAAsB,CAAE9+B,OAAAA,IAAS,gDAEnD,4FAED,uGAaK,OAZKg/B,EAAwE,gBAArD9nC,KAAK8yB,WAAW1oB,OAAO29B,0BAC1CC,IAAmCC,SACrCxnC,aAAa85B,QAAQ,2CAEnBvU,EAAehmB,KAAK8yB,WAAW1oB,OAAO4b,aACtCkiB,EAAkBloC,KAAK8yB,WAAW1oB,OAAO89B,gBACzCC,EAAYnoC,KAAK8yB,WAAWzoB,OAAO89B,UACnCtqC,EAAWmC,KAAK8yB,WAAWzoB,OAAOxM,SAGpC,CAAC,KAAM,MAAM8I,SAASuhC,KAAqBliB,IAC3CoiB,EAAAA,EAAAA,8BAA6BD,EAAWniB,GAC3C,SAEuC9nB,EAAAA,GAAGmqC,WAAWjmB,gBAAe,OAAxC,GAAwC,SAA7DjT,EAAc,EAAdA,gBAAqB,EAALvR,MAEb,CAAF,gBACoE,OAAzEuqC,EAAU,CAAElgC,SAAS9C,EAAAA,EAAAA,UAAS,0CAA2C,8BAIxEgK,GAAmBA,EAAe9N,OAAM,kCACnCnD,EAAAA,GAAG8wB,KAAK,gBAAe,QAOiD,GAFxEsZ,EAAsBtoC,KAAK8yB,WAAW1oB,OAAOk+B,sBAC7CC,EAAuBvoC,KAAK8yB,WAAW1oB,OAAOm+B,wBACOD,IAEzBtiB,GAAiBgiB,EAA8B,iBAC7EnqC,GAAS,EAAM,CACXyE,KAAM,mBACP,4BACI0jB,IAAgBgiB,EAA8B,kBACrDQ,EAAAA,EAAAA,2BAA0BL,EAAWI,EAAsBD,GAAqB,2BACxER,EAAkB,CAAF,gBAOvB,OANIE,GAKDI,EAAAA,EAAAA,8BAA6BD,EAAWniB,GAJxCnoB,GAAS,EAAM,CACXyE,KAAM,mBAIb,+BAEMwlC,EAAkB,CAAF,gBAWpB,OAVHW,EAAAA,EAAAA,oCAAmCN,EAAW,CAC1Ch2B,MAAMhN,EAAAA,EAAAA,UACF,kKAEJmhB,OAAOnhB,EAAAA,EAAAA,UAAS,6DAA8D,CAC1EujC,sBAAsBC,EAAAA,EAAAA,qBAAoB,UAAUrrC,OAExDsrC,MAAMzjC,EAAAA,EAAAA,UAAS,wCAAyC,CACpD0jC,mBAAmBF,EAAAA,EAAAA,qBAAoB,OAAOrrC,SAEnD,4CAIL0C,KAAK4nC,sBAAsB,CAAEz4B,eAAAA,IAAiB,iDACvD,4FAED,8FACQnP,KAAK8I,SAAU9I,KAAKilC,4BAA2B,gCACzC5I,GAA2Br8B,KAAK8I,QAAO,QAC7C++B,EAAAA,EAAAA,cAAY,WACR,IAAMiB,EAAsBlZ,GAAAA,EAAasF,wBACzC,EAAK0S,sBAAsB,SACpBkB,GACAlZ,GAAAA,EAAasC,gBAAgB4W,EAAoB7W,oBAAqB,EAAK/sB,iBAElF,EAAK0iC,sBAAsBhY,GAAAA,EAAawC,kBAAkB,GAC9D,IAAG,OAEPpyB,KAAK8yB,WAAWzoB,OAAO0+B,wBAAwB/oC,KAAKkF,eACpDlF,KAAK8yB,WAAWvoB,UAAU08B,gBAAgBjnC,KAAKkF,eAAe,gDACjE,6FAED,wGACqF,OAD7DoiC,IAA4B,EAAH,+BAC7CtnC,KAAKuiC,iBAAmB,CAAEtS,UAAWjwB,KAAKiwB,UAAWM,UAAWvwB,KAAKuwB,WAAY,UAC3ExB,EAAAA,EAAAA,OAAK,kBAAO,EAAK+D,WAAW1oB,OAAOgkB,0BAA0B,IAAC,uBAG9DlwB,EAAAA,GAAG8wB,KAAK,kBAAiB,wBACzB6Y,EAAAA,EAAAA,aAAW,cAAC,+FACR,EAAKD,sBACP,CAEIn9B,SAAU,EAAKqoB,WAAW1oB,OAAOK,UAAY,EAAKqoB,WAAW1oB,OAAO4+B,mBAExE,EACA,MACA,GACH,4CACH,wBACIhpC,KAAKklC,kBAAkBoC,GAA0B,yBACjDtnC,KAAK2c,mBAAkB,yBACvB3c,KAAK4nC,sBACP,CACIxwB,kBAAkBzH,EAAAA,EAAAA,gBAAe3P,KAAKmP,eAAgBnP,KAAK8I,UAE/D,EACA,MACA,GACH,iDACJ,4FAED,WAAuBjH,GAAM,6EAKtB,OAJHV,OAAOC,KAAKS,GAAQN,SAAQ,SAAAjE,GACxB,KAAMA,KAAQ,GACV,MAAM,IAAI4B,MAAM,qBAAD,OAAsB5B,GAE7C,IAAG,SAEG0C,KAAK4nC,sBAAsB,MAAK/lC,IAAU,GAAK,OACrD7B,KAAKu4B,wBAAyB,gDACjC,qFAED,WAAe35B,GAAC,4EACO,GADP,EACYA,EAAEkW,OAAlBxX,EAAI,EAAJA,KAAMwE,EAAK,EAALA,MACD,WAATxE,IAAqBwE,EAAK,gBAE1B9B,KAAK8gB,gBAAe,GAEpB9gB,KAAKumC,iBAAgB,GACrBvmC,KAAKqX,kBAAmB,EAExB,0BACgB,aAAT/Z,EAAmB,iBAErB0C,KAAK8yB,WAAW1oB,OAAO4b,cACxBhmB,KAAK8yB,WAAW1oB,OAAO6+B,eAAennC,GACzC,2BACe,gBAATxE,EAAsB,iBAC7B0C,KAAKgrB,YAAc,KAAK,2BACf1tB,KAAQ0C,KAAI,uBACf,IAAId,MAAM,qBAAD,OAAsB5B,IAAO,yBAG1C0C,KAAK4nC,sBAAsB,MAC1BtqC,EAAOwE,IACV,EACS,kBAATxE,EAA2B,CAAE4H,cAAelF,KAAKkF,eAAkB,CAAC,GACpE,GACH,QACDlF,KAAKu4B,wBACLv4B,KAAK8yB,WAAWzoB,OAAO0+B,wBAAwB/oC,KAAKkF,eAAe,iDACtE,6EAED,SAAkBgkC,GACdlpC,KAAKsgC,gBAAkB4I,CAC3B,GAAC,+BAED,SAAkBpgC,GACV9I,KAAKigC,kBAAoBn3B,IAAQ9I,KAAKigC,gBAAkBn3B,EAChE,GAAC,2BAED,SAAci3B,GACV//B,KAAK+/B,SAAWA,CACpB,GAAC,sCAED,SAAyBj+B,GACrB9B,KAAK+hC,yBAA2BjgC,CACpC,GAAC,kDAED,0FACoF,OAAhF9B,KAAKumC,iBAAgB52B,EAAAA,EAAAA,gBAAe3P,KAAKmP,eAAgBnP,KAAKigC,kBAAkB,SAE1E5D,GAA2Br8B,KAAKigC,iBAAgB,uBAChDjgC,KAAK8mC,aAAa9mC,KAAK8I,QAAO,OAEpC9I,KAAK8gB,gBAAe,IACpB+mB,EAAAA,EAAAA,cAAY,WACR,EAAK5H,gBAAkB,EAC3B,IAAG,gDACN,6EAED,SAAmB1B,GACXv+B,KAAKygB,cACLzgB,KAAKygB,aAAakd,mBAAmBY,EAE7C,GAAC,6BAED,SAAgBQ,EAAS75B,GACjBlF,KAAK8c,iBACL9c,KAAK8/B,qBAAuB9/B,KAAKygB,eAAiBzgB,KAAKipB,cACvDjpB,KAAKygB,aAAagd,mBAAmBsB,EAAS75B,GACtC65B,IAAW/+B,KAAKygB,cAAiBzgB,KAAKipB,eAC9CjpB,KAAKygB,aAAagd,oBAAmB,EAAOv4B,GAGhDlF,KAAKyhC,sBAAwB1C,EAAU75B,EAAgB,KACvD45B,GAAsB,CAClBnd,SAAU3hB,KAAK8yB,WAAWvoB,UAAUoX,SACpCod,QAAAA,EACA75B,cAAAA,EACAF,cAAehF,KAAK2gC,cAAcz7B,KAE1C,GAAC,oCAED,SAAuB65B,EAAStsB,GAC5B,IAAMzP,EAAM,wBACZ,GAAK+7B,EAAL,CAKA,IAAIoK,EAAwBnpC,KAAK8yB,WAAWvoB,UAAUoX,SAASzT,MAAK,SAAA4V,GAAC,OAAIA,EAAE9gB,MAAQA,CAAG,IAClFmmC,EACIA,EAAsBlM,QAAUxqB,EAASzN,cAAcumB,YACvD4d,EAAsBh0B,SAAS,CAC3B8nB,KAAMxqB,EAASzN,cAAcumB,eAIrC4d,EAAwB,IAAI1M,GAAkBhqB,EAASzN,cAAcumB,aAC/CvoB,IAAMA,EAC5BmmC,EAAsB/L,WAAY,EAClC+L,EAAsBC,sBAAuB,EAC7CD,EAAsB3J,iBAAkB,EACxC2J,EAAsBxL,mBAAmB39B,KAAK8yB,WAAWtoB,GAAG4L,iBAC5DpW,KAAK2hB,SAASuC,KAAKilB,GACnBnpC,KAAK8yB,WAAWvoB,UAAUoX,SAASuC,KAAKilB,GAjB5C,MAFI7M,EAAAA,EAAAA,eAAct8B,KAAK8yB,WAAWvoB,UAAUoX,SAAU3e,EAqB1D,GAAC,sCAED,SAAyB+7B,EAAStsB,GAC9B,IAAMzN,EAAgByN,EAASzN,cACvB2c,EAAa3hB,KAAb2hB,SACRmd,GAAsB,CAClBnd,SAAAA,EACA3c,cAAAA,EACAE,cAAeF,EAAcE,cAC7B65B,QAAAA,GAER,GAAC,qCAED,WACI/+B,KAAKyhC,sBAAwB,KAC7B,IAAQ9f,EAAa3hB,KAAb2hB,SACRmd,GAAsB,CAClBnd,SAAAA,EACAod,SAAS,GAEjB,GAAC,2BAED,WACI,OAAOsK,EAAAA,EAAAA,mBAAkBrpC,KAAKiwB,UAClC,GAAC,kCAED,WAEI,OAD4BqZ,EAAAA,GAAAA,GAAiBtpC,KAAKkF,eACrB,MAAOyP,EAAAA,EAAAA,MAAK3U,KAAKygB,aAClD,GAAC,8BAED,WACI,OAAOzgB,KAAK8yB,WAAWvoB,UAAUoX,WAAYhN,EAAAA,EAAAA,MAAK3U,KAAK8yB,WAAWvoB,UAAUoX,SAChF,GAAC,6BA8BD,SAAgBmQ,EAAalY,EAAOtX,GAAM,WACtC,GAAKtC,KAAK8/B,qBACNhO,EAAa,CACb9xB,KAAK8/B,qBAAsB,EAC3B9/B,KAAKsiC,wBAAyB,EAC9B,IAAMiH,EAA0C,MAAvBvpC,KAAKmsB,cAC9B0F,GAAgBC,EAAalY,GAAOlZ,MAChCR,EAAAA,EAAAA,SAAO,SAAAvB,GACH,IAAK,EAAKkhC,2BAGN,OAFA,EAAKiF,sBACL,EAAKxC,wBAAyB,GAIlC,IAKgD,IAL1ChtB,GAAc,EAAKA,WACzB,GAAI3W,EAASf,MAET,EAAKolC,yBAEuB,iBAAxBrkC,EAASf,MAAM6pC,OACf,EAAK3U,WAAWzoB,OAAOm/B,iBAAiB,IACpClnC,KAAM3D,EAASulC,UACZvlC,EAASf,SAIZ0Y,EAAAA,EAAAA,aAA+D,SAA3B,QAAtB,IAAKwc,WAAWzoB,cAAM,OAAgB,QAAhB,EAAtB,EAAwBo/B,sBAAc,WAAhB,EAAtB,EAAwCnnC,OACtDuO,YAAW,WACP,EAAK+zB,oBACL,EAAKxC,iBACT,GAAG,YAGR,GAAIzjC,EAASozB,IAAK,CACrB,GAAI,EAAK4O,cAAcr+B,IAAS,EAAKq+B,cAAcr+B,GAAMyE,KAAO+qB,EAC5D,MAAM,IAAI5yB,MAAM,+BAEpB,IAAMwqC,EAAgB,YACf,EAAKrH,kBAAkB//B,IACvB,EAAKq+B,cAAcr+B,IAAK,IAC3BqoB,UAAWhsB,EAASozB,IAAIpH,YAE5B,EAA8ChsB,EAASozB,IAA/C1W,EAAW,EAAXA,YAAasuB,EAAQ,EAARA,SAAU7e,EAAU,EAAVA,WAG/B,GAAIzP,EAAa,CACb,IAAMnV,EAAYvH,EAASozB,IAAI7rB,UAC/B,GAAiC0jC,EAAAA,EAAAA,0BAAyB1jC,GAAlD0X,EAAQ,EAARA,SAAUxR,EAAU,EAAVA,WACZsJ,GAAoBm0B,EAAAA,GAAAA,GAAoBjsB,EAASksB,eACjD5kC,EAAgB0Y,EAASksB,cAgC/B,OA/BA,EAAKhX,WAAWxoB,eAAey/B,YAAY,CACvC1uB,YAAAA,EACAyP,WAAAA,EACA6e,SAAAA,EACAv9B,WAAAA,EACA7G,QAASmQ,EAAoBJ,EAAa,KAC1CpQ,cAAAA,EACAqkC,iBAAAA,IAEJ,EAAKzW,WAAWvoB,UAAUy/B,cAAc,CACpC3uB,YAAAA,EACAsuB,SAAAA,EACAzkC,cAAAA,KAOA6W,EAAAA,EAAAA,cACA,EAAK+W,WAAWtoB,GAAGy/B,sBAEvB,EAAKtJ,cAAgB,CAAC,EACtB,EAAKoE,oBACL,EAAKnE,cAAgBjiC,EACrB,EAAK0jC,kBAAoB,CAAC,EAC1B,EAAKH,oBACL,EAAKyC,0BACL,EAAKiB,sBAAsB8D,GAC3B,EAAKtD,4BAA4BznC,EAASozB,UAC1C,EAAKuQ,wBAAyB,EAElC,CACJ,CACA,EAAKyC,oBACL,EAAKnE,cAAgBjiC,EACrB,EAAKmmC,iBACL,EAAKxC,wBAAyB,CAClC,IAER,CACJ,GAAC,4BAED,WACStiC,KAAK8yB,WAAW1oB,OAAO8/B,eACxBlqC,KAAK8/B,qBAAsB,EAEnC,GAAC,yBAkBD,SAAYjL,GAAW,WAwBnB,OAvBA1zB,OAAOC,MAAK+oC,EAAAA,EAAAA,aAAYtV,IAAc,CAAC,GAAGtzB,SAAQ,SAAAyB,GAClC,eAARA,GAAwB,CAAC,mBAAoB,oBAAqB,YAAY2B,QAAQ3B,IAAQ,IAC9FyR,KAAKC,UAAU,EAAK1R,MAAUyR,KAAKC,UAAUmgB,EAAU7xB,WAChD6xB,EAAU7xB,IAEL,WAARA,IACA,EAAK88B,qBAAsB,EAC3B,EAAKzoB,kBAAmB,GAGxBwd,EAAUnE,YAA8C,iBAAzBmE,EAAUnE,aACzCmE,EAAUnE,WAAauX,SAASpT,EAAUnE,aAG9C,EAAK1tB,GAAO6xB,EAAU7xB,GAIV,cAARA,GAAuB6xB,EAAU5E,YACjC,EAAKA,UAAY4E,EAAU5E,YAGvC,IACO4E,CACX,GAAC,oDAED,iIA8DK,GA5DDuV,EAAqB,EAAH,8BAClBC,EAAiB,EAAH,6BAAG,CAAC,EAClBC,IAAsB,EAAH,gCAHnBC,EAAiB,EAAH,6BAAG,CAAC,GAOCrlC,eAAkD,cAAjCqlC,EAAerlC,eAAmClF,KAAK+/B,WACvFwK,EAAerlC,cAAgB,mBAGnC,EASIlF,KAAK8yB,WAAWxoB,gBAAkB,CAAC,EAPnCkgC,EAAe,EAAfA,gBACAC,EAAgB,EAAhBA,iBACAvqB,EAAU,EAAVA,WACAP,EAAW,EAAXA,YACA+qB,EAAqB,EAArBA,sBACAhvB,EAAe,EAAfA,gBACAC,EAAiB,EAAjBA,kBAEiC,gBAAjC4uB,EAAerlC,eACfwlC,EAAsBxqB,EAAYP,GAClChE,EAAkB,GAClBD,EAAgB,cAEf6uB,EAAerlC,eAAiBqlC,EAAezhC,SAChD0hC,GACAC,IACCD,IAAoBtqB,GAAcuqB,IAAqB9qB,KAExDhE,EAAkB8uB,GAClB/uB,EAAgB8uB,GAChBE,EAAsB,GAAI,OAG1B,eAAellC,KAAKrE,OAAOC,KAAKmpC,KAEO,iBAA5BA,EAAe9nC,WACtB8nC,EAAe9nC,UAAY8nC,EAAe9nC,UAK9C6nC,IACAtqC,KAAK+kC,oBACL/kC,KAAKqiC,kBAAoB,CAAC,GAE1B+H,GAAsB,eAAe5kC,KAAKrE,OAAOC,KAAKmpC,MAChDI,GAAgBN,aAAc,EAAdA,EAAgB5/B,WAAYzK,KAAKyK,SACjDmgC,EAAuBL,EAAe9/B,WAAakgC,EAEnDE,GACFngB,EAAAA,EAAAA,kBAAiB6f,EAAe9/B,YAEhCigB,EAAAA,EAAAA,kBAAiB6f,EAAe9/B,aAAcigB,EAAAA,EAAAA,kBAAiBigB,GAE/DC,GAAwBC,IACxBN,EAAexvB,OAASwvB,EAAexvB,SAAU+vB,EAAAA,EAAAA,cAAaP,EAAe9/B,WAEjFzK,KAAKyK,SAAW8/B,EAAe9/B,WAK/BtJ,OAAOC,KAAKmpC,GAAgB5jC,SAAS,UAAW,CAAF,gBACV,OAApC3G,KAAKwmC,kBAAkBxmC,KAAK8I,QAAQ,UAC9BuzB,GAA2BkO,EAAezhC,QAAO,QACvD9I,KAAKumC,iBAAgB52B,EAAAA,EAAAA,gBAAe3P,KAAKmP,eAAgBo7B,EAAezhC,SACxEsU,EACIwS,GAAAA,EAAasF,wBAAwB9X,oCAAoC,QAIK,GAAtFpd,KAAK8yB,WAAWtoB,GAAGugC,8BAA8B3tB,IAC7CA,EAAqC,CAAF,kDAEwB,GAAzDyX,EAAY70B,KAAK20B,aAAYwV,EAAAA,EAAAA,aAAYI,KAE3CH,IAAsB,mCAAmC5kC,KAAKrE,OAAOC,KAAKyzB,IAAW,iBAkBrF,OAjBA70B,KAAK20B,YAAY,CAEbmL,qBAAqB,EACrBa,cAAe,CAAC,IAIhB4J,EAAerlC,eAAiBlF,KAAK8yB,WAAWtoB,GAAGwgC,uBAC/C1B,EAAAA,GAAAA,GAAiBiB,EAAerlC,iBAChClF,KAAKiwB,UAAY,GACjBjwB,KAAKuwB,UAAY,GACjBvwB,KAAK+yB,YAAc,WACnB/yB,KAAK8yB,WAAWtoB,GAAGwgC,sBAAuB,GAKlD,UACMpW,GAAmB50B,KAAM60B,GAAU,QAEzC70B,KAAK20B,YAAY,MACR30B,KAAKwiC,2BAAqD,CAAC,EAAzBxiC,KAAKuiC,mBAEhDviC,KAAKwiC,4BAA6B,EAC9B,+BAA+Bh9B,KAAKrE,OAAOC,KAAKyzB,KAChD70B,KAAKu4B,wBAETv4B,KAAKkiC,oBAAoB,iDAEhC,gFAED,WAA8B,MAC1B,QAA4B,QAApB,EAACliC,KAAKmP,sBAAc,QAAnB,EAAqBjB,MAAK,SAAAC,GAAI,MAAoB,oBAAhBA,EAAKyV,MAA4B,IAChF,GAAC,kDAED,WAA6C,aACzC,QAA4B,QAApB,EAAC5jB,KAAKmP,sBAAc,QAAnB,EAAqBjB,MAC1B,SAAAC,GAAI,MAAoB,oBAAhBA,EAAKyV,UAAiCjU,EAAAA,EAAAA,gBAAe,EAAKR,eAAgBhB,EAAKrF,OAAO,IAEtG,GAAC,6BAED,WACI,OAAOwgC,EAAAA,GAAAA,GAAiBtpC,KAAKkF,cACjC,GAAC,gCAED,SAAmB+lC,GACfjrC,KAAK0gC,8BAAgCuK,CACzC,GAAC,mCAED,SAAsBvB,GAClB,IAAM5rC,EAAO,CACTotC,MAAO,eACPC,OAAQ,MACRtmB,SAAU,CACN9J,OAAQ2uB,EAAc3uB,OACtBqwB,SAAU1B,EAAcnkC,QACxB8lC,SAAU3B,EAAc2B,SACxBnL,MAAOwJ,EAAcxJ,MACrBvV,UAAW+e,EAAc/e,UACzBzlB,cAAewkC,EAAcxkC,cAC7BuF,SAAUi/B,EAAcj/B,SACxBwgB,YAAaye,EAAcze,YAC3BF,WAAY2e,EAAc3e,WAC1BtoB,SAAUinC,EAAcjnC,SACxB0pB,cAAeud,EAAcvd,cAC7BvB,OAAQ8e,EAAc9e,OACtB9hB,OAAQ4gC,EAAc5gC,QAE1BwY,SAAU,CACNxa,MAAO9G,KAAK8yB,WAAWtoB,GAAG4L,gBAAkB,OAAS,QACrDk1B,iBAAkBtrC,KAAK8yB,WAAWtoB,GAAGW,uBAAyB,OAAS,SACvEkL,MAAO,CACHk1B,iBAAkBvrC,KAAK8yB,WAAWtoB,GAAG2V,wBAA0B,SAAW,OAC1EqrB,iBAAkBxrC,KAAK8yB,WAAWtoB,GAAGihC,4BAA8B,UAAY,SAC/EvrB,WAAYlgB,KAAK8yB,WAAWxoB,eAAe4V,WAC3CP,YAAa3f,KAAK8yB,WAAWxoB,eAAeqV,eAIxD3f,KAAK8yB,WAAW4Y,IAAIC,cAAc7tC,EACtC,GAAC,+BAED,WACIkC,KAAK4gC,cAAgB,CAAC,EACtB5gC,KAAKqiC,kBAAoB,CAAC,EAC1BriC,KAAK2gC,cAAgB,CAAC,CAC1B,GAAC,6BAED,WAAkB,WACRiL,GAAWC,EAAAA,GAAAA,IAAuB7rC,MACxC,GAAImB,OAAOU,OAAO7B,KAAKi3B,mBAAmBpvB,MAAK,SAAAjJ,GAAC,OAAIA,EAAEyC,MAAM,IAKxD,OAJArB,KAAK2gC,cAAgB,CAAC,EACtB3gC,KAAK4gC,cAAgB,CAAC,EACtB5gC,KAAK+kC,yBACD/kC,KAAK8c,gBAAgB9c,KAAK8lC,yBAI7Bzf,EAAAA,EAAAA,eAAculB,KACf5rC,KAAKqiC,kBAAoBuJ,EACzB5rC,KAAK4gC,cAAgB,CAAC,EACtBz/B,OAAOC,KAAKpB,KAAKqiC,mBAAmB9gC,SAAQ,SAAAe,GACxCpE,EAAAA,GAAG4tC,kBAAkB,EAAKzJ,kBAAkB//B,GAAO,EAAKmjC,mBAC5D,KAEJzlC,KAAK8yB,WAAWtoB,GAAGuhC,qBACvB,GAAC,+BAED,WACmB5qC,OAAOC,KAAKpB,KAAKqiC,mBAAmBhhC,OACtC,GAAGnD,EAAAA,GAAG8tC,UAAU,WACjC,GAAC,6BAED,SAAgBljB,GACZ9oB,KAAKoX,iBAAmB0R,CAC5B,GAAC,gCAED,SAAmBnqB,GAAU,UACjBuG,EAAkBvG,EAASglC,SAA3Bz+B,cACF+mC,GAAqBC,EAAAA,EAAAA,kBAAiBlsC,KAAK2gC,cAAez7B,IAAkB,CAAC,EAC7EinC,GAA0BD,EAAAA,EAAAA,kBAAiBD,EAAoB,uBAAyB,CAAC,EAGzFhhB,EAA+B,QAApB,EAAGtsB,EAASytC,gBAAQ,aAAjB,EAAmBnhB,YAYvC,GAXAjrB,KAAKqgC,aAAepV,GAAejrB,KAAKqgC,cAEnC1hC,EAASf,OAAWqtB,GAAejrB,KAAKqsC,uBACzCrsC,KAAKwhC,WAAavW,GAGtBjrB,KAAK2gC,cAAgB,SACd3gC,KAAK2gC,eAAa,SACpBz7B,GAAgBonC,EAAAA,GAAAA,IAAgBtsC,KAAMrB,EAAUwtC,KAGjDnsC,KAAKipB,eAAiBjpB,KAAK2gC,eAAiB3gC,KAAK2gC,cAAc4L,OAAQ,OACvE,EAAkDvsC,KAAK2gC,cAAc4L,OAA7DlL,EAAU,EAAVA,WAAYmL,EAAY,EAAZA,aAAcxN,EAAW,EAAXA,YAE9BqC,IACArhC,KAAKqhC,WAAaA,GAElBmL,IACAxsC,KAAKshC,mBAAqBkL,EAAaC,WAE3CzsC,KAAKuhC,SAAWvC,SAAqB,QAAV,EAAXA,EAAauC,gBAAQ,WAAV,EAAX,EAAuBmL,YAC3C,CACA,GAAI1sC,KAAK8c,gBAAoC,QAAtB,EAAI9c,KAAK2gC,qBAAa,OAAlB,EAAoBgM,KAAM,CACjD,MAUI3sC,KAAK2gC,cAAcgM,KATnBC,EAAqB,EAArBA,sBACA5L,EAAa,EAAbA,cACA6L,EAAe,EAAfA,gBACA3L,EAAiB,EAAjBA,kBACA4L,EAAe,EAAfA,gBACA/L,EAAc,EAAdA,eACA7mB,EAAY,EAAZA,aACAwiB,EAAW,EAAXA,YACAqQ,EAAS,EAATA,UAEJ/sC,KAAKihC,oBb7oC0B,SAAH,GAIlC,QAHF+L,6BAAAA,OAA4B,IAAG,GAAC,EAAC,MACjCC,wBAAAA,OAAuB,IAAG,KAAE,EAC5BH,EAAe,EAAfA,gBAIMI,EAAmBF,EAA6BH,iBAAmB,GACnEM,EAAiBH,EAA6BF,gBACpD,OAAKG,EAAwB5rC,QAAWyrC,EAUjC,CAAED,gBATLI,EAAwB5rC,OAAS,EACf,GAAI4rC,GAAyBG,UACxCH,EAAwB,IAAMC,EAAiB,IAAMJ,EAAkBK,EAC5D,CAACF,EAAwB,IAAE,UAAKC,EAAiBr0B,MAAM,EAAGq0B,EAAiB7rC,OAAS,KAC/FyrC,IAAoBK,EACTD,EAEA,CAACD,EAAwB,IAAE,UAAKC,EAAiBr0B,MAAM,KAEnDi0B,gBAAAA,GAVsCE,CAWpE,CaynCuCK,CAA4B,CACnDL,6BAA8BhtC,KAAKihC,oBACnCgM,wBAAyBJ,EACzBC,gBAAAA,IAEJ9sC,KAAKghC,cAAgBA,EACrBhhC,KAAK+gC,eAAiBA,EACtB/gC,KAAKkhC,kBAAoBA,EACzB,IAAQ2C,GAAkC7jC,KAAK8yB,WAAWxoB,gBAAkB,CAAC,GAArEu5B,8BACJA,GACAA,EAA8B,CAC1Bxf,0BAA2BnK,EAC3BozB,yBAA0B5Q,EAC1BkQ,sBAAAA,EACAn1B,kBAAmBs1B,EACnB3gC,WAAYpM,KAAK8I,QAG7B,CAgBA,KAdK9I,KAAKygB,cAAiC,QAArB,EAAIzgB,KAAKygB,oBAAY,OAAjB,EAAmBsc,QACzC/8B,KAAK4iC,eAAejkC,EAASglC,UAG7B3jC,KAAKyhC,wBAA0Bv8B,IAC/BlF,KAAKiiC,kBAAkBtjC,GACvBmgC,GAAsB,CAClBnd,SAAU3hB,KAAK8yB,WAAWvoB,UAAUoX,SACpC3c,cAAehF,KAAK2gC,cAAc3gC,KAAKyhC,uBACvCv8B,cAAAA,EACA65B,SAAS,KAIbpgC,EAASf,MAAO,OACV2vC,GAAWC,EAAAA,GAAAA,IAAsB7uC,GAOvC,GANI4uC,GACAvtC,KAAKm4B,2BAA2BoV,EAAU,CAAC5uC,EAASf,MAAMqK,UAK1DjI,KAAKipB,cAAe,CACpB,MAA6BtqB,EAASf,MAA9BqK,EAAO,EAAPA,QAASwlC,EAAO,EAAPA,QACXC,GAAoBzlC,GAAW,IAAIvB,MAAM,mBACxB,eAAnB+mC,aAAO,EAAPA,EAASE,QAAT,MAAkCD,GAAAA,EAAmB,KACrD1tC,KAAKqhC,WAAaqM,EAAiB,GAE3C,CAOA,GANI1tC,KAAK8c,gBAAgB9c,KAAK8lC,uBAMF,sBAAxBnnC,EAASf,MAAM6pC,KAMf,OALAznC,KAAK6lC,eAED7lC,KAAK6/B,4BACL7/B,KAAKkiC,qBAOb,IAAKliC,KAAKgd,WAAahd,KAAKuG,aAAqC,QAA3B,EAAK5H,EAASf,MAAM6vC,eAAO,OAAtB,EAAwBlN,gBAAiB,CAChF,MAAkD5hC,EAASf,MAAM6vC,QAAzDlN,EAAe,EAAfA,gBAAiBqN,EAAS,EAATA,UAAWC,EAAS,EAATA,UAGpC,GAFA7tC,KAAK0mC,iBAAiBxhC,EAAe2oC,EAAWD,GAChD5tC,KAAKmmC,kBAAkB5F,IAClBvgC,KAAKugC,gBAAgB55B,SAAS3G,KAAKiwB,WAAY,CAGhD,IAAM7Q,EAAQ1Q,KAAKC,MAAM3O,KAAKugC,gBAAgBl/B,OAAS,GACvDrB,KAAKiwB,UAAYjwB,KAAKuG,WAAavG,KAAKugC,gBAAgBnhB,GAASpf,KAAKugC,gBAAgB,GACtFvgC,KAAKmV,SAAS,CACVL,OAAQ,CACJxX,KAAM,YACNwE,MAAO9B,KAAKiwB,YAGxB,CACJ,CACJ,MAEI,GADAjwB,KAAKu4B,wBACDv4B,KAAKgd,WAAahd,KAAKuG,WAAY,CACnC,MAAkD5H,EAASytC,SAAnDwB,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAWtN,EAAe,EAAfA,gBAC9BvgC,KAAKmmC,kBAAkB5F,GACvBvgC,KAAK0mC,iBAAiBxhC,EAAe2oC,EAAWD,EACpD,CAGC5tC,KAAKsiC,wBACNtiC,KAAK8kC,gBAEb,GAAC,kCAED,SAAqB7U,EAAWM,GAC5BvwB,KAAK4nC,sBAAsB,CAAE3X,UAAAA,EAAWM,UAAAA,IAAa,EACzD,GAAC,iCAED,WACIvwB,KAAK4nC,sBAAsB,CAAE1iC,cAAe+iC,SAASjoC,KAAK+/B,UAAY,kBAAoB,cAAe,EAC7G,GAAC,0BAED,SAAa3zB,GACJA,GACLpM,KAAKmV,SAAS,CACVL,OAAQ,CACJxX,KAAM,SACNwE,MAAOsK,IAGnB,GAAC,2CAED,WACI,GAAyB,YAArBpM,KAAK+yB,aAKT,GAAK/yB,KAAKk3B,iBAAiBz0B,SAA3B,CAEA,IAAM2c,EAAQpf,KAAKk3B,iBAAiBz0B,SAASstB,MAAMwM,WAAU,SAAApuB,GAAI,MAAgB,WAAZA,EAAK,EAAe,IACnF2/B,EAAS9tC,KAAKyyB,iBAAiBzyB,KAAKsyB,wBAAyB,EAEnE,GAAIwb,EAAQ,CACR,IAAMC,EAAmB,CACrB/d,KAAKge,EAAAA,EAAAA,uBAAsBF,EAAO9d,IAAKhwB,KAAKmsB,eAC5CyG,KAAKob,EAAAA,EAAAA,uBAAsBF,EAAOlb,IAAK5yB,KAAKmsB,gBAG5C/M,GAAS,EACTpf,KAAKk3B,iBAAiBz0B,SAASstB,MAAM3Q,GAAO,GAAK2uB,EAEjD/tC,KAAKk3B,iBAAiBz0B,SAASstB,MAAM7L,KAAK,CAAC,SAAU6pB,IAEzD/tC,KAAKs4B,iBAAiB,WAAYt4B,KAAKyC,SAC3C,CAjB2C,OAJvCzC,KAAKi3B,kBAAkBx0B,SAAW,EAsB1C,GAAC,sDAED,8FACQzC,KAAK8yB,WAAWzoB,OAAO4jC,qBAAsB,CAAF,+BACrCjuC,KAAKklC,mBAAkB,GAAO,GAAM,OAC1CllC,KAAK8yB,WAAWzoB,OAAO4jC,sBAAuB,EAAM,sCAE9CjuC,KAAKklC,mBAAkB,GAAM,GAAM,OAGnB,OAA1BllC,KAAK+lC,qBAAqB,UACpB/lC,KAAK2c,mBAAkB,QAQ1B,OAPHkrB,EAAAA,EAAAA,aAAW,cAAC,+EACR,EAAKD,sBACD,CAAEn9B,SAAU,EAAKqoB,WAAW1oB,OAAOK,UAAY,EAAKqoB,WAAW1oB,OAAO4+B,mBACtE,EACA,CAAEv+B,SAAU,EAAKA,WACjB,GACF,4CACH,kBACIyjC,QAAQC,WAAS,iDAC3B,mFAED,WAGI,OAFAnuC,KAAK0iC,iBACL1iC,KAAKqX,kBAAmB,EACjB62B,QAAQC,SACnB,GAAC,6CAED,+EAG8B,GAF1BnuC,KAAK0iC,iBACL1iC,KAAK6lC,UACL7lC,KAAK+lC,sBACD/lC,KAAK8yB,WAAWzoB,OAAO4jC,qBAAsB,CAAF,+BACrCjuC,KAAKklC,mBAAkB,GAAM,OACnCllC,KAAK8yB,WAAWzoB,OAAO4jC,sBAAuB,EAAM,wCAE9CjuC,KAAKklC,oBAAmB,yBAE5BllC,KAAK2c,mBAAkB,QAC7B3c,KAAKqX,kBAAmB,EACxBrX,KAAKkiC,oBAAoB,iDAC5B,6EAED,WAEI,OADAliC,KAAKglC,oBAAoBhlC,KAAK8yB,WAAW1oB,OAAOK,UAAYzK,KAAK8yB,WAAW1oB,OAAO4+B,kBAC5EkF,QAAQC,SACnB,GAAC,yCAED,SAA4BrS,GACxB97B,KAAK2mC,eAAe7K,EACxB,GAAC,iCAED,SAAoB1lB,GAChBpW,KAAK29B,mBAAmBvnB,EAC5B,GAAC,gCAED,WACIpW,KAAK8yB,WAAWtoB,GAAG4jC,0BAAyB,EAChD,GAAC,qBAED,WAAU,WACFpuC,KAAK6/B,4BAA8B7/B,KAAKyiC,gCAG5CziC,KAAK8yB,WAAWub,cAAcC,qBAAoB,GAClDtuC,KAAKy4B,mBAAmBz4B,KAAK2lC,0BAC7B3lC,KAAKw4B,gBAAgBx4B,KAAKukC,yBAC1BvkC,KAAK04B,SAAS14B,KAAKmlC,gBACnBnlC,KAAK24B,aAAa34B,KAAK6kC,oBACvB7kC,KAAK44B,sBAAsB54B,KAAKqlC,6BAChCrlC,KAAK64B,cAAc74B,KAAK4mC,qBACxB5mC,KAAK8gB,gBAAe,IACpB+mB,EAAAA,EAAAA,aAAW,cAAC,+EAC+B,OAAvC,EAAKhI,4BAA6B,EAAK,SACjC,EAAKnjB,oBAAmB,OAC9B,EAAKoW,WAAWub,cAAcC,qBAAoB,GAAM,4CAG5DtuC,KAAKolC,iCACT,GAAC,4CAED,WACI,MACIplC,KAAK8yB,WAAWub,cADZE,EAAsB,EAAtBA,uBAAwBC,EAAoB,EAApBA,qBAAsBC,EAAqB,EAArBA,sBAAuBC,EAAyB,EAAzBA,0BAEvEC,EAA4Bl6B,KAAK4N,MAAM5hB,aAAa85B,QAAQ,0BAClE,EAA6Dv6B,KAAK8yB,WAAW1oB,OAArEwkC,EAAe,EAAfA,gBAAiBC,EAAiB,EAAjBA,kBAAmB7oB,EAAY,EAAZA,aAC5C0oB,EAA0B,CAAE1rC,IAAK,yBACC,OAA9B2rC,GAAsC3oB,IAAiB4oB,GAAmBC,KAC1E9f,EAAAA,EAAAA,OACI,kBAAM/I,GAAiD,IAAjCyoB,EAAsBptC,MAAY,IACxD,WACI,IAAMytC,EAC2E,IAA7E7G,SAASxnC,aAAa85B,QAAQ,4CAE7BqU,GAAmBC,KAAuBC,GAE3CP,EAAuBC,EAAqBO,qBAEpD,GAGZ,GAAC,4BAED,SAAejmB,GACX9oB,KAAKwc,iBAAmBsM,CAC5B,GAAC,kDAED,WAA0BkmB,GAAY,qEAC9BhvC,KAAKyK,WAAaukC,EAAY,iEAE5BhvC,KAAK4nC,sBAAsB,CAAEn9B,SAAUukC,IAAgB,EAAM,CAAEvkC,SAAUzK,KAAKyK,WAAY,GAAM,OACtGzK,KAAK6lC,UACL7lC,KAAKkiC,oBAAoB,gDAC5B,qEAED,WACQliC,KAAKyiC,gCAGTziC,KAAK+4B,0BACL/4B,KAAKg5B,uBACLh5B,KAAKi5B,gBACLj5B,KAAKk5B,oBACLl5B,KAAKm5B,6BACLn5B,KAAKo5B,qBACLp5B,KAAK6/B,4BAA6B,EAElC7/B,KAAK8yB,WAAWxoB,eAAemS,YAC/Bzc,KAAK6lC,UACL7lC,KAAK+lC,qBACD/lC,KAAK8yB,WAAWub,cAAcY,0BAC9BjvC,KAAK8yB,WAAWub,cAAca,2BAE9BlvC,KAAKqjC,oBACLrjC,KAAKqjC,kBAAkB8L,SAAU,GAErCnvC,KAAK8lC,uBACT,GAAC,wBAID,WACI,IAAIsJ,EAAS,KAIb,OAHIpvC,KAAKqjC,oBAAwD,IAAnCrjC,KAAKqjC,kBAAkB8L,UACjDC,EAASpvC,KAAKqjC,mBAEX+L,CACX,GAAC,gCAED,WACI,MAA8B,eAAvBpvC,KAAKkF,eAAkC,OAAOM,KAAKxF,KAAK8I,OACnE,GAAC,0BAED,SAAasmC,GAAQ,kBACVA,EAAOC,iBACdrvC,KAAKqjC,kBAAoB+L,EACzBpvC,KAAKqjC,kBAAkBiM,OAAS,WAC5B,EAAKjM,kBAAkB8L,SAAU,EACjC,EAAKruB,gBAAe,EACxB,CACJ,GAEA,8BAoEA,SAAiByuB,EAAOC,GACpB,IAAMC,EAAoB,WAEjB,wBADDF,GAEIC,GAAUC,KAAqBD,GAC3BxvC,KAAK6/B,4BAA8B2P,EAAOC,KAAuBzvC,KAAKoX,kBACtEpX,KAAK0c,mBAAkB,EAK3C,GAAC,kCAMD,WACI,OAAO1c,KAAKipB,iBAAmBjpB,KAAKyhC,qBACxC,GAAC,0BAED,WACI,MAA8B,gBAAvBzhC,KAAKkF,aAChB,GAAC,yBAED,WACI,MAA8B,eAAvBlF,KAAKkF,aAChB,GAAC,qBAED,WACI,OAAOkkB,EAAAA,EAAAA,kBAAiBppB,KAAKkF,cACjC,GAAC,sBAED,WACI,MAA8B,YAAvBlF,KAAKkF,aAChB,GAAC,yCAED,SAA4BvG,GACxB,IAAM+wC,GAAOC,EAAAA,GAAAA,IAA0B3vC,KAAKiyB,oBAAqB2d,EAAAA,iCAEjE,OAAQ5vC,KAAKgiC,4BAA8B,CACvCh/B,KAAK,EACL2nB,WAAW3S,EAAAA,EAAAA,aAAYhY,KAAK8yB,WAAW1oB,OAAOK,SAAU9L,EAASgsB,WAAW,EAAM,EAAG,GACrFzlB,cAAelF,KAAKkF,cACpBuF,UAAUoP,EAAAA,EAAAA,wBAAuB7Z,KAAK8yB,WAAW1oB,OAAOK,UACxDilC,KAAAA,EAER,GAAC,2CAED,WACI1vC,KAAKgiC,iCAA8BvjC,CACvC,GAAC,iDAED,WAAyByf,GAAiB,+EACf,QADe,EAClCle,KAAKmP,sBAAc,QAAnB,EAAqB9N,OAAM,0CACpBwuC,EAAAA,EAAAA,qBAAoB7vC,KAAKmP,eAAgB+O,IAAkB,uBAE9BhgB,EAAAA,GAAGmqC,WAAWjmB,gBAAe,OAAxC,GAAwC,SAA7DjT,EAAc,EAAdA,gBAAqB,EAALvR,MACb,CAAF,gBAC2F,OAAhGoC,KAAK8yB,WAAWzoB,OAAO89B,UAAU,CAAElgC,SAAS9C,EAAAA,EAAAA,UAAS,0CAA2C,uBACzF1G,GAAS,kCAEboxC,EAAAA,EAAAA,qBAAoB1gC,EAAgB+O,IAAkB,iDAChE,6EAED,SAAkBqiB,GAEd,GADAvgC,KAAKugC,gBAAkBA,QAAAA,EAAmB,GACtCvgC,KAAKgd,UAAW,CAChB,IAAM8yB,EAAuB,CAAEvqC,QAASvF,KAAKiwB,UAAWsQ,gBAAAA,GACT,UAA3CwP,EAAAA,EAAAA,oBAAmB/vC,KAAKkF,eACxBlF,KAAK4hC,cAAgBkO,EAErB9vC,KAAK6hC,eAAiBiO,CAE9B,CACJ,GAAC,8BAED,SAAiBxtC,EAAMurC,EAAWD,GAC1BC,GAAaD,IAAW5tC,KAAKogC,eAAe99B,GAAQ,CAAEurC,UAAAA,EAAWD,UAAAA,GACzE,IAplDJ,mFAolDK,EAjiD0B,CAAS/tC,u0BCpDO,IAE1BmwC,GAAY,IAC7B,WAAYld,EAAYmd,gGAAY,SAChCjwC,KAAKquB,QAAU4hB,EAAWhiB,QAAQI,QAClCruB,KAAK0T,MAAQ,IAAIksB,GAAW,CAAE9M,WAAAA,GAClC,u0BCNiC,ICOjCA,GDLiBod,GAAS,IAC1B,WAAYD,gGAAY,SACpBjwC,KAAKoK,OAAS6lC,EAAW7lC,OACzBpK,KAAKqK,OAAS4lC,EAAW5lC,OACzBrK,KAAKiuB,QAAU,IAAI+hB,GAAahwC,KAAMiwC,GACtCjwC,KAAKwK,GAAKylC,EAAWzlC,GACrBxK,KAAK0rC,IAAMuE,EAAWvE,IACtB1rC,KAAKmwC,UAAYF,EAAWE,UAC5BnwC,KAAKquC,cAAgB4B,EAAW5B,cAChCruC,KAAKowC,gBAAkBH,EAAWG,gBAClCpwC,KAAKsK,eAAiB2lC,EAAW3lC,eACjCtK,KAAKuK,UAAY0lC,EAAW1lC,UAC5BvK,KAAKqwC,oBAAsBJ,EAAWI,oBACtCrwC,KAAKmP,eAAiB8gC,EAAW9gC,cACrC,KCXJmhC,EAAAA,EAAAA,WAAU,CAAEC,eAAgB,aAc5B,SAVkB,SAACN,EAAYO,GAC3B,OAAI1d,KAEJmR,KAAAA,KAAgBgM,EAAW5lC,SAC3BomC,EAAAA,EAAAA,cAAaD,GACb1d,GAAa,IAAIod,GAAUD,GAG/B,ECEA,IAAMS,GAAc75B,IAAS,CACzBC,OAAQ,kBAAM,0EAA2F,EACzGC,QAAS,kBAAM,IAAI,IAqBvB,SAlBY,SAAH,GAAkC,IAA5BwQ,EAAW,EAAXA,YACLuL,EAAa6d,GAAUppB,EAAYuL,WAAYvL,EAAYrpB,IAKjE,OAJAgL,IAAAA,WAAgB,WACZ,OAAO,kBAAM4pB,EAAWtoB,GAAGod,kBAAiB,EAAM,CACtD,GAAG,CAACkL,IAGA,kBAAC,GAAe,CAAC/zB,MAAO+zB,GACpB,kBAAC,GAAM,MACP,kBAAC4d,GAAW,MACZ,kBAAC,KAA4B,MAC7B,kBAAC,GAAqB,CAAC3xC,MAAO+zB,IAC9B,kBAAC,GAAqB,MACtB,kBAAC,GAAuB,CAAC/zB,MAAO+zB,IAG5C,ECtCA,k4CCCO,IAAMtI,EAAgB,WAAH,MAAU,CAChComB,OAAOzrC,EAAAA,EAAAA,UAAS,SAChB0rC,SAAS1rC,EAAAA,EAAAA,UAAS,YAClB2rC,WAAW3rC,EAAAA,EAAAA,UAAS,cACpB4rC,QAAQ5rC,EAAAA,EAAAA,UAAS,UACjB6rC,OAAO7rC,EAAAA,EAAAA,UAAS,SAChB8rC,gBAAgB9rC,EAAAA,EAAAA,UAAS,mBACzB+rC,eAAe/rC,EAAAA,EAAAA,UAAS,kBACxBgsC,KAAKhsC,EAAAA,EAAAA,UAAS,OACdisC,MAAMjsC,EAAAA,EAAAA,UAAS,QACfksC,iBAAiBlsC,EAAAA,EAAAA,UAAS,qBAC1BmsC,iBAAiBnsC,EAAAA,EAAAA,UAAS,mBAC1BosC,sBAAsBpsC,EAAAA,EAAAA,UAAS,yBAC/BqsC,YAAYrsC,EAAAA,EAAAA,UAAS,eACrBssC,iBAAiBtsC,EAAAA,EAAAA,UAAS,mBAC1BusC,eAAevsC,EAAAA,EAAAA,UAAS,OACxBwsC,oBAAoBxsC,EAAAA,EAAAA,UAAS,sBAC7BysC,MAAMzsC,EAAAA,EAAAA,UAAS,QACf0sC,OAAO1sC,EAAAA,EAAAA,UAAS,UAChB05B,WAAW15B,EAAAA,EAAAA,UAAS,cACpB2sC,QAAQ3sC,EAAAA,EAAAA,UAAS,WACjB4sC,MAAM5sC,EAAAA,EAAAA,UAAS,SACf6sC,OAAO7sC,EAAAA,EAAAA,UAAS,SAChBqmB,mBAAmBrmB,EAAAA,EAAAA,UAAS,sBAC5B8sC,aAAa9sC,EAAAA,EAAAA,UAAS,gBACtB+sC,uBAAuB/sC,EAAAA,EAAAA,UAAS,0BAChCgtC,kBAAkBhtC,EAAAA,EAAAA,UAAS,qBAC3BitC,eAAejtC,EAAAA,EAAAA,UAAS,kBACxBktC,MAAMltC,EAAAA,EAAAA,UAAS,QACfmtC,QAAQntC,EAAAA,EAAAA,UAAS,eACjBotC,gBAAgBptC,EAAAA,EAAAA,UAAS,cACzBqtC,kBAAkBrtC,EAAAA,EAAAA,UAAS,iBAC3By5B,aAAaz5B,EAAAA,EAAAA,UAAS,gBACtBstC,gCAAgCttC,EAAAA,EAAAA,UAC5B,qFAEJutC,KAAKvtC,EAAAA,EAAAA,UAAS,OACjB,EAEYwtC,EAAoB,WAAH,MAAU,CACpCC,WAAWztC,EAAAA,EAAAA,UAAS,WACpB0tC,WAAW1tC,EAAAA,EAAAA,UAAS,WACpB2tC,WAAW3tC,EAAAA,EAAAA,UAAS,WACpB4tC,WAAW5tC,EAAAA,EAAAA,UAAS,WACpB6tC,WAAW7tC,EAAAA,EAAAA,UAAS,WACpB8tC,WAAW9tC,EAAAA,EAAAA,UAAS,WACpB+tC,WAAW/tC,EAAAA,EAAAA,UAAS,WACpBguC,WAAWhuC,EAAAA,EAAAA,UAAS,WACpBiuC,WAAWjuC,EAAAA,EAAAA,UAAS,WACpBkuC,WAAWluC,EAAAA,EAAAA,UAAS,WACpBmuC,WAAWnuC,EAAAA,EAAAA,UAAS,WACpBouC,WAAWpuC,EAAAA,EAAAA,UAAS,WACpBquC,WAAWruC,EAAAA,EAAAA,UAAS,WACpBsuC,WAAWtuC,EAAAA,EAAAA,UAAS,WACpBuuC,WAAWvuC,EAAAA,EAAAA,UAAS,WACpBwuC,WAAWxuC,EAAAA,EAAAA,UAAS,WACpByuC,WAAWzuC,EAAAA,EAAAA,UAAS,WACpB0uC,WAAW1uC,EAAAA,EAAAA,UAAS,WACpB2uC,WAAW3uC,EAAAA,EAAAA,UAAS,WACpB4uC,WAAW5uC,EAAAA,EAAAA,UAAS,WACpB6uC,WAAW7uC,EAAAA,EAAAA,UAAS,WACpB8uC,WAAW9uC,EAAAA,EAAAA,UAAS,WACpB+uC,WAAW/uC,EAAAA,EAAAA,UAAS,WACpBgvC,WAAWhvC,EAAAA,EAAAA,UAAS,WACpBivC,WAAWjvC,EAAAA,EAAAA,UAAS,WACpBkvC,WAAWlvC,EAAAA,EAAAA,UAAS,WACpBmvC,WAAWnvC,EAAAA,EAAAA,UAAS,WACpBovC,WAAWpvC,EAAAA,EAAAA,UAAS,WACpBqvC,WAAWrvC,EAAAA,EAAAA,UAAS,cACpBsvC,WAAWtvC,EAAAA,EAAAA,UAAS,YACpBuvC,WAAWvvC,EAAAA,EAAAA,UAAS,iBACpBwvC,WAAWxvC,EAAAA,EAAAA,UAAS,gBACpByvC,SAASzvC,EAAAA,EAAAA,UAAS,kBAClB0vC,UAAU1vC,EAAAA,EAAAA,UAAS,iBACnB2vC,SAAS3vC,EAAAA,EAAAA,UAAS,kBAClB4vC,UAAU5vC,EAAAA,EAAAA,UAAS,aACnB6vC,UAAU7vC,EAAAA,EAAAA,UAAS,UACnB8vC,WAAW9vC,EAAAA,EAAAA,UAAS,cACpB+vC,SAAS/vC,EAAAA,EAAAA,UAAS,gBAClBgwC,YAAYhwC,EAAAA,EAAAA,UAAS,iBACrBiwC,UAAUjwC,EAAAA,EAAAA,UAAS,aACnBkwC,SAASlwC,EAAAA,EAAAA,UAAS,eAClBmwC,SAASnwC,EAAAA,EAAAA,UAAS,UAClBowC,UAAUpwC,EAAAA,EAAAA,UAAS,YACnBqwC,UAAUrwC,EAAAA,EAAAA,UAAS,WACnBswC,MAAMtwC,EAAAA,EAAAA,UAAS,uBACfuwC,MAAMvwC,EAAAA,EAAAA,UAAS,uBACfwwC,MAAMxwC,EAAAA,EAAAA,UAAS,uBACfywC,MAAMzwC,EAAAA,EAAAA,UAAS,uBACf0wC,OAAO1wC,EAAAA,EAAAA,UAAS,wBAChB2wC,UAAU3wC,EAAAA,EAAAA,UAAS,kBACnB4wC,SAAS5wC,EAAAA,EAAAA,UAAS,kBAClB6wC,UAAU7wC,EAAAA,EAAAA,UAAS,mBACnB8wC,WAAW9wC,EAAAA,EAAAA,UAAS,mBACpB+wC,UAAU/wC,EAAAA,EAAAA,UAAS,mBACnBgxC,WAAWhxC,EAAAA,EAAAA,UAAS,oBACpBixC,QAAQjxC,EAAAA,EAAAA,UAAS,qBACjBkxC,QAAQlxC,EAAAA,EAAAA,UAAS,qBACjBmxC,QAAQnxC,EAAAA,EAAAA,UAAS,cACjBoxC,QAAQpxC,EAAAA,EAAAA,UAAS,cACjBqxC,QAAQrxC,EAAAA,EAAAA,UAAS,cACjBsxC,QAAQtxC,EAAAA,EAAAA,UAAS,cACjBuxC,QAAQvxC,EAAAA,EAAAA,UAAS,eACjBwxC,QAAQxxC,EAAAA,EAAAA,UAAS,cACjB,UAAUA,EAAAA,EAAAA,UAAS,4BACnB,WAAWA,EAAAA,EAAAA,UAAS,6BACpB,WAAWA,EAAAA,EAAAA,UAAS,6BACpB,WAAWA,EAAAA,EAAAA,UAAS,6BACpB,WAAWA,EAAAA,EAAAA,UAAS,6BACpB,WAAWA,EAAAA,EAAAA,UAAS,6BACpByxC,MAAMzxC,EAAAA,EAAAA,UAAS,iBACf0xC,MAAM1xC,EAAAA,EAAAA,UAAS,iBACf2xC,MAAM3xC,EAAAA,EAAAA,UAAS,iBACf4xC,MAAM5xC,EAAAA,EAAAA,UAAS,iBACf6xC,OAAO7xC,EAAAA,EAAAA,UAAS,kBAChB8xC,OAAO9xC,EAAAA,EAAAA,UAAS,kBAChB+xC,OAAO/xC,EAAAA,EAAAA,UAAS,kBAChBgyC,WAAWhyC,EAAAA,EAAAA,UAAS,WACpBiyC,WAAWjyC,EAAAA,EAAAA,UAAS,WACpBkyC,WAAWlyC,EAAAA,EAAAA,UAAS,WACpBmyC,WAAWnyC,EAAAA,EAAAA,UAAS,WACpBoyC,WAAWpyC,EAAAA,EAAAA,UAAS,WACpBqyC,WAAWryC,EAAAA,EAAAA,UAAS,WACpBsyC,WAAWtyC,EAAAA,EAAAA,UAAS,WACpBuyC,WAAWvyC,EAAAA,EAAAA,UAAS,WACpBwyC,WAAWxyC,EAAAA,EAAAA,UAAS,WACpByyC,WAAWzyC,EAAAA,EAAAA,UAAS,WACpB0yC,WAAW1yC,EAAAA,EAAAA,UAAS,WACpB2yC,WAAW3yC,EAAAA,EAAAA,UAAS,WACpB4yC,WAAW5yC,EAAAA,EAAAA,UAAS,WACpB6yC,WAAW7yC,EAAAA,EAAAA,UAAS,WACpB8yC,WAAW9yC,EAAAA,EAAAA,UAAS,WACpB+yC,WAAW/yC,EAAAA,EAAAA,UAAS,WACpBgzC,WAAWhzC,EAAAA,EAAAA,UAAS,WACvB,EA4JYizC,EAAoB,SAAA/xC,GAAW,cA1GP,SAAAA,GAAW,MAAK,CACjDsmC,KAAM,CACF0L,YAAa,kBAAC,EAAA5mC,SAAQ,CAACC,kBAAkB,QACzCpU,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,iBAClCe,SAAU,OAEd6lC,KAAM,CACFh7C,KAAM+I,EAAc,kBAAC,EAAAoL,SAAQ,CAACC,kBAAkB,WAAc,kBAAC,EAAAD,SAAQ,CAACC,kBAAkB,SAC1Fe,SAAU,OAEd8lC,IAAK,CACDj7C,KAAM+I,EAAc,kBAAC,EAAAoL,SAAQ,CAACC,kBAAkB,UAAa,kBAAC,EAAAD,SAAQ,CAACC,kBAAkB,SACzFe,SAAU,UAEd+lC,MAAO,CACHl7C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,SAClCe,SAAU,OAEdgmC,KAAM,CACFn7C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,SAClCe,SAAU,UAEd7M,WAAY,CACRtI,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,YAClCe,SAAU,OAEd/M,UAAW,CACPpI,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,YAClCe,SAAU,UAEd9M,UAAW,CACPrI,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,SAClCe,SAAU,OAEd5M,SAAU,CACNvI,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,QAClCe,SAAU,UAEd3M,UAAW,CACPxI,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,SAClCe,SAAU,OAEd1M,WAAY,CACRzI,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,UAClCe,SAAU,UAEdimC,SAAU,CACNp7C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,UAClCe,SAAU,OAEdkmC,QAAS,CACLr7C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,aAClCe,SAAU,UAEd85B,OAAQ,CACJjvC,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,OAClCe,SAAU,OAEdmmC,SAAU,CACNt7C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,SAClCe,SAAU,UAEdomC,WAAY,CACRR,YAAa,kBAAC,EAAA5mC,SAAQ,CAACC,kBAAkB,SACzCpU,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,WAClCe,SAAU,OAEdqmC,YAAa,CACTT,YAAa,kBAAC,EAAA5mC,SAAQ,CAACC,kBAAkB,UACzCpU,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,WAClCe,SAAU,UAEdsmC,gBAAiB,CACbz7C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,SAClCe,SAAU,OAEdumC,eAAgB,CACZ17C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,QAClCe,SAAU,UAEdwmC,QAAS,CACL37C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,aAClCe,SAAU,OAEdymC,OAAQ,CACJ57C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,eAClCe,SAAU,UAEd0mC,WAAY,CACR77C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,iBAClCe,SAAU,OAEd2mC,YAAa,CACT97C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,iBAClCe,SAAU,UAEd4mC,MAAO,CACH/7C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,kBAClCe,SAAU,OAEd6mC,SAAU,CACNh8C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,iBAClCe,SAAU,UAEjB,CAGM8mC,CAAsBlzC,IA3JiB,CAC1CmzC,UAAW,CACPl8C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,eAClCe,SAAU,OAEdgnC,SAAU,CACNn8C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,cAClCe,SAAU,UAEdinC,SAAU,CACNp8C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,cAClCe,SAAU,OAEdknC,QAAS,CACLr8C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,aAClCe,SAAU,UAEdmnC,OAAQ,CACJt8C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,aAClCe,SAAU,OAEdonC,OAAQ,CACJv8C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,eAClCe,SAAU,UAEdqnC,YAAa,CACTx8C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,iBAClCe,SAAU,OAEdsnC,WAAY,CACRz8C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,kBAClCe,SAAU,OAEdunC,UAAW,CACP18C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,gBAClCe,SAAU,OAEdwnC,WAAY,CACR38C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,cAClCe,SAAU,OAEdynC,UAAW,CACP58C,KAAM,kBAAC,EAAAmU,SAAQ,CAACC,kBAAkB,gBAClCe,SAAU,WAiHc,EAGnB4X,EAAyB,SAAC/nB,GAAwD,IAA7B63C,EAAmB,UAAH,8CACxEC,EAAkBhC,EAD+B,UAAH,+CACG91C,GACvD,OAAQ63C,GAAoBC,EAAgB/B,aAAgB+B,EAAgB98C,MAAQ,EACxF,EAEa+8C,EAA0B,SAAC/3C,GAAI,IAAE+D,EAAc,UAAH,8CAAQ,OAC7D+xC,EAAkB/xC,GAAa/D,GAAQ81C,EAAkB/xC,GAAa/D,EAAKwnC,eAAer3B,SAAW,KAAK,0aCvSxG6nC,EAAsB,SAAH,GAA0F,IAApFC,EAAiB,EAAjBA,kBAAmBz4C,EAAK,EAALA,MACxC04C,EAD4E,EAA7BC,+BACkBF,GAA+B,IAAVz4C,EAC5F,OACI,yBACI,cAAY,gCACZa,UAAWqE,IAAW,sCAAuC,CACzD,kDAAmDwzC,KAGtD14C,EACAy4C,GACG,yBAAK53C,UAAU,qCACV,CAAC,EAAG,EAAG,GAAGyE,KAAI,SAAAszC,GACX,OAAO,0BAAM13C,IAAG,2BAAsB03C,GAAO/3C,UAAS,cAAS+3C,IACnE,KAKpB,EAEA,QAAexxC,IAAAA,KAAWoxC,GCpB1B,IAAMK,EAAuB,SAAH,OAAMC,EAAiB,EAAjBA,kBAAmBC,EAAI,EAAJA,KAAI,OACnD,kBAAC,EAAA1yC,KAAI,CAACE,KAAMuyC,EAAmBj4C,UAAU,yCACpCk4C,EAAKzzC,KAAI,SAACuB,EAAK7D,GAAC,OACb,yBACI9B,IAAK8B,EAAEkM,WAAarI,EAAI,GACxB,cAAY,4BACZhG,UAAU,2BAETgG,EAAIvB,KAAI,SAAC0zC,EAASn0B,GAAG,OAClB,kBAAC,EAAmB,CAChB3jB,IAAK2jB,EAAI3V,WAAa8pC,EACtBh5C,MAAOg5C,EACPP,kBAAyB,IAANz1C,GAAmB,IAAR6hB,GAChC,IAEJ,IAEP,EAGXg0B,EAAqB13C,UAAY,CAC7B23C,kBAAmB13C,IAAAA,OACnB23C,KAAM33C,IAAAA,OAGV,QAAegG,IAAAA,KAAWyxC,kiCC5B1B,IAAMI,EAA+B,SAAH,GAA+E,IAAzEC,EAAc,EAAdA,eAAgB19B,EAAa,EAAbA,cAAe29B,EAAc,EAAdA,eAAgB30B,EAAK,EAALA,MAAO40B,EAAY,EAAZA,aACnC,IAApBhyC,IAAAA,UAAe,GAAK,GAAhD1L,EAAU,KAAEC,EAAY,KACzByN,GAAYoL,EAAAA,EAAAA,YAEZ6kC,EAAiBjyC,IAAAA,aACnB,SAAAkyC,GACI,OAAOC,EAAAA,EAAAA,YAAW,sCAAD,OACyBnwC,EAAY,SAAW,WAAS,OAClEoS,EAAgB,QAAU,GAAE,YAC5B89B,GAEZ,GACA,CAAClwC,EAAWoS,IAEVg+B,EAAUpyC,IAAAA,SAAc,kBAAMiyC,EAAe,MAAM,GAAE,CAACA,IACtDI,EAAWryC,IAAAA,SAAc,kBAAMiyC,EAAe,OAAO,GAAE,CAACA,IAE9D,OACI,kBAAC,aAAc,KACX,kBAAC,EAAA7yC,KAAI,CAACC,KAAK,gBAAgByE,QAASkuC,EAAc7yC,KAAM,GAAI1F,UAAWq4C,IACvE,kBAAC,EAAAvtB,MAAK,CACFhB,QAASwuB,KAAoBK,KAAaC,EAC1CC,0BAA0B,EAC1Bl1B,MAAOA,EACPoH,YAAawtB,EACbz3C,MAAOyH,EAAY,QAAU,QAC7BvI,UAAU,mCAEV,kBAAC,EAAA8qB,MAAM7B,KAAI,CAACjpB,UAAU,iCAClB,yBAAKA,UAAU,wCACVnF,GAAc,kBAAC,EAAAi+C,QAAO,CAACC,eAAe,IACvC,2BACIC,UAAQ,EACR,cAAY,qCACZC,MAAI,EACJC,aAAc,kBAAMp+C,GAAa,EAAM,EACvCq+C,aAAW,EACXC,QAAQ,OACRt4C,MAAOyH,EAAY,IAAM,KAGzB,4BAAQ8wC,IAAKV,EAASh5C,KAAK,cAC3B,4BAAQ05C,IAAKT,EAAUj5C,KAAK,gBAC3B6C,EAAAA,EAAAA,UAAS,6DAGlB,kBAAC,EAAAgD,KAAI,CACDoJ,GAAG,IACHlJ,KAAM6C,EAAY,KAAO,IACzB9C,MAAM,YACNzF,UAAU,wCAETwC,EAAAA,EAAAA,UACG,gIAO5B,EAEA41C,EAA6B93C,UAAY,CACrC+3C,eAAgB93C,IAAAA,OAChBoa,cAAepa,IAAAA,KACf+3C,eAAgB/3C,IAAAA,KAChBojB,MAAOpjB,IAAAA,OACPg4C,aAAch4C,IAAAA,+mCC7DX,IAAM+4C,EACU,GADVA,EAES,GAFTA,EAGS,GAHTA,EAIQ,EAGftlC,GAAoBvX,EAAAA,EAAAA,KAAS,YAA8B,UAA3B88C,cAAAA,OAAa,IAAG,GAAI,EAC9C1xC,GAAOhL,EAAAA,EAAAA,MAAPgL,GAC6C,GAAhBL,EAAAA,EAAAA,KAA7B82B,oBAAAA,OAAmB,IAAG,GAAC,EAAC,EACP3jB,EAAkB9S,EAAnC4L,gBAEmD,IAApBlN,IAAAA,UAAe,GAAK,GAApDizC,EAAY,KAAEC,EAAc,KAC4B,IAArBlzC,IAAAA,UAAe,GAAM,GAAxD+xC,EAAc,KAAEoB,EAAe,KAChCC,GAAen3C,EAAAA,EAAAA,UAAS,SACxBy+B,GAAgB3C,aAAmB,EAAnBA,EAAqB4L,kBAAmB,GACxD+N,GAAoB7+B,EAAAA,EAAAA,eAAgBogC,EAAe,MAAQ,OAE3DtB,EAAOjX,EAAc5f,QAAO,SAACu4B,EAAKC,EAAKp9B,GACzC,IAAMq9B,EAAmBN,EAAeF,EAA8BA,EAChES,EAAkBP,EAAeF,EAA6BA,EAC9DU,GAAW5gC,EAAAA,EAAAA,aAAc0gC,EAAmBC,EAIlD,OAHIt9B,EAAQu9B,GAAa,GACrBJ,EAAIr4B,KAAK0f,EAAc/qB,MAAMuG,EAAOA,EAAQu9B,IAEzCJ,CACX,GAAG,IAEH,OAAK3Y,EAAcviC,OAGf,yBAAKsB,UAAU,sBACX,yBAAKA,UAAWqE,IAAW,6CACvB,yBAAKrE,UAAU,6BACX,kBAACo4C,EAA4B,CACzBz9B,cAAeA,EACf09B,eAAe,OACfC,eAAgBA,EAChB30B,MAAOg2B,EACPpB,aAAc,kBAAMmB,GAAiBpB,EAAe,IAExD,kBAAC,EAAA9yC,KAAI,CAAC4E,OAAO,OAAO1E,MAAMiO,EAAAA,EAAAA,YAAa,OAAS,MAAO3T,UAAU,kCAC5D25C,IAGT,kBAAC,EAAAn0C,KAAI,CAACE,KAAMuyC,EAAmBj4C,UAAU,+BACnCw5C,EAGS,QAFiF,EAExFtB,EAAK,UAAE,aAAP,EAASzzC,KAAI,SAACuT,EAAI7V,GAAC,OAAK,kBAAC,EAAmB,CAAC9B,IAAK8B,EAAGhD,MAAO6Y,EAAI4/B,kBAAyB,IAANz1C,GAAW,IAF9F,yBAAKnC,UAAU,wCAAuCwC,EAAAA,EAAAA,UAAS,sBAM1E+2C,IAAkBC,GACf,kBAAC,aAAc,KACX,kBAAC,EAAAj4C,eAAc,KACX,kBAAC,EAAoB,CAAC02C,kBAAmBA,EAAmBC,KAAMA,KAEtE,kBAAC,EAAA72C,cAAa,KACV,kBAAC,EAAA44C,aAAY,CACTC,QAAS,kBAAMT,GAAgBD,EAAa,EAC5CW,kBAAkB,aAClBx2B,MAAOg2B,EACPS,SAAUZ,EACVa,kBAAkB,sBAElB,kBAAC,EAAoB,CAACpC,kBAAmBA,EAAmBC,KAAMA,OAKjFqB,GACG,kBAAC,EAAA5zC,KAAI,CACDC,KAAM4zC,EAAe,YAAc,cACnCnvC,QAAS,kBAAMovC,GAAgBD,EAAa,EAC5Cx5C,UAAU,4BA/CQ,IAoDtC,IAEAgU,EAAkB1T,UAAY,CAC1Bi5C,cAAeh5C,IAAAA,MAGnB,MCjGA,EDiGA,8ZE/FM+5C,EAAQ,SAAH,GAAuE,IAAjEC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAAQC,EAAU,EAAVA,WAAYx7C,EAAK,EAALA,MAC5Dy7C,EAAqBD,IAAeh5C,MAAMg5C,GAAcE,WAAWF,GAAY74C,QAAQ,GAAK,KAClG,OACI,kBAAC,aAAc,KACX,0BACI9B,UAAWqE,IAAW,sBAAuB,CACzC,8BAA+Bk2C,EAC/B,gCAAiCE,EACjC,2BAA4BC,GAAUH,EACtC,4BAA6BC,GAAWD,KAG5C,uBACIv6C,UAAWqE,IAAW,8BAA+B,CACjD,yCAA0Cu2C,KAG7Cz7C,KAEFy7C,GAAsB,uBAAG56C,UAAU,oCAAoC46C,EAAkB,MAI5G,EAEAN,EAAMh6C,UAAY,CACdi6C,UAAWh6C,IAAAA,KACXi6C,QAASj6C,IAAAA,KACTk6C,YAAal6C,IAAAA,KACb4S,cAAe5S,IAAAA,KACfm6C,OAAQn6C,IAAAA,KACRo6C,WAAYp6C,IAAAA,OACZpB,MAAOoB,IAAAA,QAGX,UClCA,IAAMu6C,EAAY,SAAH,OAAMjmC,EAAY,EAAZA,aAAckmC,EAAmB,EAAnBA,oBAAqBP,EAAO,EAAPA,QAASE,EAAM,EAANA,OAAM,OACnE,kBAAC,aAAc,KACX,kBAAC,EAAAl1C,KAAI,CAACE,KAAK,KAAKG,MAAM,SAASuE,OAAO,OAAOpK,UAAU,4BAClD6U,EAAaqB,MAAM,GAAI,IAE5B,0BACIlW,UAAWqE,IAAW,0BAA2B,CAC7C,wCAAyC02C,EACzC,+BAAgCL,EAChC,gCAAiCF,KAGpC3lC,EAAaqB,OAAO,IAEZ,EAGrB4kC,EAAUx6C,UAAY,CAClBuU,aAActU,IAAAA,OACdi6C,QAASj6C,IAAAA,KACTw6C,oBAAqBx6C,IAAAA,KACrBm6C,OAAQn6C,IAAAA,MAGZ,UCzBA,IAAMy6C,EAAgB,SAAH,GAAoD,IAA9CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQT,EAAW,EAAXA,YAAaE,EAAU,EAAVA,WAE9Cn7C,GAAWm7C,EAAa,IAAM,EAElCn7C,IADAA,EAAUuM,KAAKshB,IAAIthB,KAAKkkB,IAAIzwB,GAAU,GAAI,IACpB,GAAK,EAAK,IAAO,IACvC,IAAM27C,EAAI,QACNp5C,GAAK,GAAK44C,EAAa,KAAO,EAAI,IAGtC,OAFA54C,EAAIgK,KAAKkkB,IAAIlkB,KAAKshB,IAAItrB,EAAG,KAAO,KAG5B,yBACI/B,UAAWqE,IAAW,wBAAyB,CAC3C,kCAAmCo2C,KAGvC,yBAAKz6C,UAAU,uBAAuBc,MAAM,MAAMD,OAAO,MAAMS,QAAQ,eACnE,4BAAQtB,UAAU,eAAeo7C,GAAG,KAAKC,GAAG,KAAKp4B,EAAE,KAAKq4B,KAAK,OAAOC,OAAO,UAAUC,YAAY,OAChGb,GACG,4BACI36C,UAAWqE,IAAW,kBAAmB,CACrC,0BAA2B42C,EAC3B,0BAA2BC,IAE/BE,GAAG,KACHC,GAAG,KACHp4B,EAAE,KACFq4B,KAAK,OACLG,cAAeR,GAAUC,EAAS,EAAI17C,EACtCg8C,YAAY,KACZE,gBAAiB,CAACP,EAAIp5C,EAAGo5C,GAAK,EAAIp5C,IAElC45C,iBAAkBR,IAAMp5C,EAAI,GAAK,MAMzD,EAEAi5C,EAAc16C,UAAY,CACtB26C,OAAQ16C,IAAAA,KACR26C,OAAQ36C,IAAAA,KACRk6C,YAAal6C,IAAAA,KACbo6C,WAAYp6C,IAAAA,QAGhB,UCvCA,IAAMq7C,EAAe,SAAH,GAeZ,IAdFh5C,EAAO,EAAPA,QACAmQ,EAAiB,EAAjBA,kBACA8oC,EAAc,EAAdA,eACArB,EAAO,EAAPA,QACAS,EAAM,EAANA,OACAC,EAAM,EAANA,OACAR,EAAM,EAANA,OACAoB,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACArpC,EAAc,EAAdA,eACAyT,EAAM,EAANA,OACA61B,EAAK,EAALA,MACA78C,EAAK,EAALA,MACA88C,EAAe,EAAfA,gBAEQC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,KACT5B,EAAYp7C,IAAU+8C,EACtBzB,EAAct7C,IAAUyD,EACxBm4C,EAAsBmB,IAAUt5C,EAChC+3C,EAAaqB,EAAiB,IAARA,EAAe,IAAO,KAElDz1C,IAAAA,WAAgB,WACR01C,GACAA,EAAgB,CAAEE,KAAAA,EAAM3B,QAAAA,EAASO,oBAAAA,EAAqBR,UAAAA,EAAWG,OAAAA,GAEzE,GAAG,CAACqB,EAAcI,EAAMv5C,EAASzD,EAAOq7C,EAASO,EAAqBR,EAAWG,EAAQuB,IAEzF,IAAMG,GAAsBzoC,EAAAA,EAAAA,aAAkC,mBAAbmoC,IAA4B31B,EACvEk2B,GAAoB1oC,EAAAA,EAAAA,aAAcxU,IAAUuT,IAAmByT,EACrE,OACI,yBACInmB,UAAWqE,IAAW,gBAAiB,CACnC,wBAAyBk2C,EACzB,qBAAsBG,GAAUH,EAChC,sBAAuBC,GAAWD,EAClC,+BAAgC6B,EAChC,6BAA8BC,IAElChyC,QAAS,WACA+xC,GACLN,EAAS38C,EACb,GAEA,kBAAC,EAAa,CAAC+7C,OAAQA,EAAQD,OAAQA,EAAQR,YAAaA,EAAaE,WAAYA,IACrF,kBAAC,EAAAp5C,eAAc,KACX,kBAAC,IAAM,CACHtB,cAAe8S,GAAqBwnC,GAAa4B,GAAQh2B,GAAU01B,GACnE77C,UAAU,qBACVE,QAAQ,sBAER,kBAAC,EAAS,CACN2U,aAAcsnC,EACd3B,QAASA,EACTO,oBAAqBA,EACrB96C,cAAes6C,IAAa4B,GAC5BzB,OAAQA,MAIpB,kBAAC,EAAK,CACFH,UAAWA,EACXC,QAASA,EACTC,YAAaA,EACbC,OAAQA,EACRC,WAAYA,EACZx7C,MAAOA,IAIvB,EAEAy8C,EAAat7C,UAAY,CACrBsC,QAASrC,IAAAA,OACTs7C,eAAgBt7C,IAAAA,KAChBwS,kBAAmBxS,IAAAA,KACnBi6C,QAASj6C,IAAAA,KACT06C,OAAQ16C,IAAAA,KACR26C,OAAQ36C,IAAAA,KACRm6C,OAAQn6C,IAAAA,KACRw7C,aAAcx7C,IAAAA,OACd07C,gBAAiB17C,IAAAA,KACjBu7C,SAAUv7C,IAAAA,KACVmS,eAAgBnS,IAAAA,OAChBy7C,MAAOz7C,IAAAA,OACP4lB,OAAQ5lB,IAAAA,OACRpB,MAAOoB,IAAAA,QAGX,SAAe9D,EAAAA,EAAAA,UAASm/C,GC/FxB,IAAMU,EAAmB,SAAH,OAAM9B,EAAO,EAAPA,QAASrnC,EAAa,EAAbA,cAAeunC,EAAM,EAANA,OAAQ5qC,EAAQ,EAARA,SAAQ,OAChE,kBAAC,aAAc,OACRA,GACC,0BACI9P,UAAU,kBACVyR,MAAO,CAAE8qC,UAAW,oBAAF,OAAsBzsC,EAAS0sC,KAAI,gBAAQ1sC,EAAS2R,IAAG,cAEzE,kBAAC,EAAA9b,KAAI,CACDC,KAAK,WACL5F,UAAWqE,IAAW,eAAgB,CAClC,oBAAqBq2C,IAAWvnC,EAChC,qBAAsBqnC,IAAYrnC,IAEtC1N,MAAOi1C,EAAS,QAAU,MAC1B+B,aAAgB/B,GAAUF,OAAmC1+C,EAAxB,yBAIpC,EAGrBwgD,EAAiBh8C,UAAY,CACzBk6C,QAASj6C,IAAAA,KACT4S,cAAe5S,IAAAA,KACfm6C,OAAQn6C,IAAAA,KACRuP,SAAUvP,IAAAA,QAGd,04CCzBA,IAAMm8C,EAAgBn4C,MAAMC,KAAKD,MAAM,IAAI9F,QAErCk+C,EAAsB,SAAH,GAgBnB,IAfF/5C,EAAO,EAAPA,QACAL,EAAa,EAAbA,cACA8P,EAAM,EAANA,OACAQ,EAAW,EAAXA,YACA+pC,EAAS,EAATA,UACA7pC,EAAiB,EAAjBA,kBACA8oC,EAAc,EAAdA,eACA7oC,EAAQ,EAARA,SACAG,EAAa,EAAbA,cACAZ,EAAa,EAAbA,cACA0pC,EAAe,EAAfA,gBACAvpC,EAAc,EAAdA,eACAyT,EAAM,EAANA,OACA7T,EAAI,EAAJA,KACAG,EAAU,EAAVA,WAEOoqC,EAWL,EAXqBt2C,IAAAA,SAAe,CAClC,EAAG,CAAEi2C,KAAM,EAAG/6B,IAAK,GACnB,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,KACrC,GAXiB,GAaZq7B,EAWL,EAX4Bv2C,IAAAA,SAAe,CACzC,EAAG,CAAEi2C,KAAM,EAAG/6B,KAAM,IACpB,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,KAAM,IACpC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,KAAM,IACpC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,KAAM,IACpC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,KAAM,IACpC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,GACnC,EAAG,CAAE+6B,KAAM,EAAgB,EAAZI,EAAen7B,IAAK,KACrC,GAXwB,GAapBs7B,EAAe,SAAAC,GACZC,KACDD,IAAgBtqC,GAA2C,mBAAlBH,GACzCA,EAAc,CAAEJ,OAAQ,CAAExX,KAAM,aAAcwE,MAAO69C,IAE7D,EAeME,EAAY,WAAH,OAAUvpC,EAAAA,EAAAA,YAAampC,EAAsBD,CAAY,EAElEI,EAAwB,WAAH,SAAUtpC,EAAAA,EAAAA,aAA4B,aAAflB,CAAiC,EAK7E0qC,EAHe3+C,OAAOC,KAAKoU,GAC5BlB,OACAlN,KAAI,SAAA2lC,GAAS,OAAIv3B,EAAYu3B,EAAU,IACHl0B,OAAO,GAAG,IAAM,CAAC,EAGpDwkC,EAAS1nC,GAAuB,QAAXmT,GAAoBpT,EAIzCynC,EAAUxnC,GAAuB,SAAXmT,GAAqBpT,EAE3Csa,EAAMhb,EAAStG,KAAKshB,IAAG,MAARthB,KAAI,EAAQsG,IAAU,KACrC4d,EAAM5d,EAAStG,KAAKkkB,IAAG,MAARlkB,KAAI,EAAQsG,IAAU,KAIrC+qC,EAAuB9qC,GAAQA,EAAK+qC,SAAW,KAC/CC,EAAwBhrC,GAAQA,EAAKirC,IAAMjrC,EAAKirC,IAAIz7C,QAAQs7C,GAAwB,KACpFI,EAAoBF,GAAyBA,EAAsB/nC,MAAM,IAAIkoC,MAAQ,KACrF3tC,EAAWwC,EAAO4qC,IAAYM,GAAqBN,IAAYC,EAAoBjB,OACnFH,EAAiBrB,GAAUF,EAE3B2C,EADA,CAAEjB,MAAOsB,EAAmBrB,KAAMmB,GAExC,OACI,yBACIt9C,UAAWqE,IAAW,SAAU,CAC5B,gBAAiB8O,KAGpBupC,EAAcj4C,KAAI,SAAAuf,GAAG,OAClB,kBAAC,EAAY,CACTphB,SAjDGnB,EAiDiBuiB,EAhD1B05B,EAAc,CAChBz6C,WAAY,SAAA06C,GAAG,OAAIA,IAAQ/6C,CAAO,EAClCG,UAAW,SAAA46C,GAAG,OAAIA,IAAQ/6C,IAAYjB,MAAMiB,EAAQ,EACpDO,UAAW,SAAAw6C,GAAG,OAAIA,EAAM/6C,CAAO,EAC/BQ,WAAY,SAAAu6C,GAAG,OAAIA,EAAM/6C,CAAO,EAChCM,SAAU,SAAAy6C,GAAG,OAAIA,EAAM,CAAC,EACxB36C,UAAW,SAAA26C,GAAG,QAAMA,EAAM,EAAE,GAE3Bp7C,GAAkBm7C,EAAYn7C,IAC5Bm7C,EAAYn7C,GAAed,GAAOA,EADiB,MAyC9Co6C,eAAgBA,EAChB9oC,kBAAmBA,EACnBynC,QAASA,EACTrnC,cAAeA,EACfunC,OAAQA,EACRr6C,IAAK2jB,EACLi3B,OAAQ5oC,EAASA,EAAO2R,KAASiM,EAAM,KACvCirB,OAAQ7oC,EAASA,EAAO2R,KAASqJ,EAAM,KACvC2uB,MAAO3pC,EAASA,EAAO2R,GAAO,KAC9BmC,OAAQA,EACR41B,aAAc5oC,EAAgB4oC,EAAeoB,EAC7Ch+C,MAAO6kB,EACPi4B,gBAAiBA,EACjBH,SAAUmB,IAA0BF,EAAe,KACnDrqC,iBAAgBuqC,KAA0BvqC,IAhEvC,IAAAjR,EACTi8C,CAgEI,IAEN,kBAAC,EAAgB,CAAClD,QAASA,EAASrnC,cAAeA,EAAeunC,OAAQA,EAAQ5qC,SAAUA,IAGxG,EAEA6sC,EAAoBr8C,UAAY,CAC5BsC,QAASrC,IAAAA,OACTgC,cAAehC,IAAAA,OACf8R,OAAQ9R,IAAAA,MACRsS,YAAatS,IAAAA,OACbq8C,UAAWr8C,IAAAA,OACXs7C,eAAgBt7C,IAAAA,KAChBwS,kBAAmBxS,IAAAA,KACnByS,SAAUzS,IAAAA,KACV4S,cAAe5S,IAAAA,KACf4lB,OAAQ5lB,IAAAA,OACRkS,WAAYlS,IAAAA,OACZgS,cAAehS,IAAAA,KACf07C,gBAAiB17C,IAAAA,KACjBmS,eAAgBnS,IAAAA,OAChB+R,KAAM/R,IAAAA,QAGV,SAAe9D,EAAAA,EAAAA,UAASkgD,8yDC1IxB,IAAMiB,EAAgB,SAAH,GAab,IAZFv7C,EAAa,EAAbA,cACA6Q,EAAY,EAAZA,aACAL,EAAW,EAAXA,YACAC,EAAc,EAAdA,eACAC,EAAiB,EAAjBA,kBACAC,EAAQ,EAARA,SACAG,EAAa,EAAbA,cACAZ,EAAa,EAAbA,cACAG,EAAc,EAAdA,eACAD,EAAU,EAAVA,WACAorC,EAAc,EAAdA,eACGliD,EAAK,OAEFmiD,EAAez7C,EAAc+lB,WAC/B9V,EAAO3W,EAAM2W,KAEXyrC,GAAgB5qC,KAAkBb,EAClC0rC,IAAsB7qC,IAAgB8qC,EAAAA,EAAAA,mBAAkB57C,EAAeiQ,GACvE6T,GAAU63B,GAAuBD,EAAgBjrC,EAAiB,KAIxE,GAAIgrC,IAAiBE,EAAqB,CACtC1rC,EAAO,KACP,IAAM4rC,EAAc77C,EAAc67C,YAClC,GAAIA,GAAeA,EAAYx/C,OAAQ,CACnC,IAAMmd,GAAI7J,EAAAA,EAAAA,MAAKksC,EAAYhoC,OAAO,GAAG,IACrC5D,EAAO,CACHirC,IAAK1hC,EAAEvJ,KACP6rC,IAAKtiC,EAAEvJ,KACP0E,MAAO6E,EAAE7E,MACTqmC,SAAUxhC,EAAEuiC,mBAAmB7oC,MAAM,KAAK,GAAG7W,OAC7CmnB,aAAcq4B,EAAYx/C,OAElC,CACJ,CAQA,OANA6H,IAAAA,WAAgB,WACRs3C,GACAA,EAAe,CAAE13B,OAAAA,EAAQN,aAAcvT,EAAOA,EAAKuT,aAAe,MAE1E,GAAG,CAACvT,EAAMa,EAAeL,EAAgB+qC,EAAgB13B,IAGrD,kBAAC,EAEG,CACAy2B,WAAWjpC,EAAAA,EAAAA,YAAa,GAAK,GAC7BkoC,iBAAkBx5C,EAAcg8C,WAChCz7C,SAAUo7C,GAAuBD,GAAiB17C,EAAcO,QAAU,KAC1EL,eAAgBy7C,GAAuBD,EAAgB17C,EAAcE,cAAgB,KACrF8P,OAAQa,EACRL,aAAcmrC,GAAuBD,EAAgBlrC,EAAc,CAAC,EACpEE,kBAAmBA,EACnBC,SAAUA,EACVG,cAAeA,EACfgT,OAAQA,EACR7T,KAAMA,EACNG,WAAYA,EACZF,cAAeA,EACfG,eAAgBA,EAChBupC,gBAAiBtgD,EAAMsgD,iBAGnC,EAEMhpC,EAAS1M,IAAAA,MAAW,SAAA5K,GACtB,IAyBU2iD,EAzBkC,IAAhB/3C,IAAAA,WAAgB,GAArC4f,EAAM,KAAEo4B,EAAS,KAC+B,IAAhBh4C,IAAAA,WAAgB,GAAhDsf,EAAY,KAAE24B,EAAc,KACK,IAAhBj4C,IAAAA,WAAgB,GAAjC41C,EAAI,KAAEsC,EAAO,KACgD,IAAhBl4C,IAAAA,WAAgB,GAA7Dw0C,EAAmB,KAAE2D,EAAoB,KACC,IAAhBn4C,IAAAA,WAAgB,GAA1Cg0C,EAAS,KAAEoE,EAAW,KACc,IAAhBp4C,IAAAA,WAAgB,GAApCm0C,EAAM,KAAEkE,EAAQ,KACsB,IAAhBr4C,IAAAA,WAAgB,GAAtCi0C,EAAO,KAAEqE,EAAS,KACnBpyC,GAAYC,EAAAA,EAAAA,gBAEVrK,EAA8E1G,EAA9E0G,cAAe6Q,EAA+DvX,EAA/DuX,aAAcH,EAAiDpX,EAAjDoX,kBAAmBI,EAA8BxX,EAA9BwX,cAAe1J,EAAe9N,EAAf8N,WAuBvE,OACI,kBAAC,aAAc,KACX,kBAAC,EAAAlI,eAAc,KACX,kBAAC,IAAO,CACJtB,YAAaiT,GAAgBH,IAAsBtG,IACnDzM,UAAU,oBACVE,QAAQ,SACRP,KAAK,UAEJwT,GACG,yBAAKnT,UAAU,6BACX,kBAAC,EAAA8+C,QAAO,CACJ1nC,UAAU,MACV2nC,gBAAgB,yBAChBn5C,KAAK,OACLxB,GAAG,8BACH46C,OAAQ,EACR15C,SAxBlBg5C,EAAkBnrC,EAAgB1J,EAAapH,EAAcoH,YAE5DjH,EAAAA,EAAAA,UAAS,iEAAkE,CAC9E87C,iBAAiBtO,EAAAA,EAAAA,MAAoBsO,EAAgBnX,qBAyB7C,kBAACyW,EAAkBjiD,KAG3B,kBAAC,EAAA0F,cAAa,KACV,yBAAKrB,UAAU,qBACX,kBAAC,IAAM,CACHC,cAAe8S,GAAqBoT,GAAUg2B,GAAU95C,EAAcg8C,YACtEr+C,UAAWqE,IAAW,qBAAsB,CACxC,iCAAkC8O,IAEtCjT,QAAQ,sBAEPiT,GACG,kBAAC,EAAA3N,KAAI,CAACE,KAAK,KAAKG,MAAM,SAAS7F,UAAU,4BACrC,kBAAC,EAAA8O,SAAQ,CAACC,kBAAkB,2BAA2B7P,OAAQ,CAAE2mB,aAAAA,MAGzE,kBAAC,EAAS,CACNhR,aAAcsnC,EACd3B,QAASA,EACTO,oBAAqBA,EACrB96C,cAAes6C,IAAa4B,GAC5BzB,OAAQA,KAGhB,kBAACkD,EAAa,KAAKjiD,EAAK,CAAEkiD,eAnEnB,SAAA7hC,GACnBuiC,EAAUviC,EAAOmK,QACjBq4B,EAAexiC,EAAO6J,aAC1B,EAgE0Eo2B,gBA9DlD,SAAAjgC,GACpByiC,EAAQziC,EAAOmgC,MACf0C,EAAU7iC,EAAOw+B,SACjBkE,EAAqB1iC,EAAO++B,qBAC5B4D,EAAY3iC,EAAOu+B,WACnBqE,EAAS5iC,EAAO0+B,OACpB,OA6DJ,IAEAznC,EAAOgsC,YAAc,SAErBhsC,EAAO3S,UAAY,CACf+B,cAAe9B,IAAAA,OACf2S,aAAc3S,IAAAA,MACdsS,YAAatS,IAAAA,OACbuS,eAAgBvS,IAAAA,OAChBwS,kBAAmBxS,IAAAA,KACnByS,SAAUzS,IAAAA,KACV4S,cAAe5S,IAAAA,KACfkS,WAAYlS,IAAAA,OACZgS,cAAehS,IAAAA,KACfmS,eAAgBnS,IAAAA,OAChBkJ,WAAYlJ,IAAAA,QAGhB,MCnLA,EDmLA,4LEjKA,MClBA,EDIgB,WAAH,OACT,kBAAC,EAAA2+C,UAAS,CACNC,QAAQ38C,EAAAA,EAAAA,UAAS,8BACjBu1B,SAAU,EACNv1B,EAAAA,EAAAA,UAAS,iFACTA,EAAAA,EAAAA,UAAS,4CAA6C,CAAE48C,WAAY,OAExEC,cAAe,CAAC95C,EAAAA,OAAOwL,OACvBuuC,gBAAiB,EAAC98C,EAAAA,EAAAA,UAAS,oBAC3B+8C,eAAe,kBACfC,WAAW9G,EAAAA,EAAAA,YAAW,kCACxB,qnBEZN,IAAM+G,EAAc,SAAH,GAA0E,IAApE9mC,EAAa,EAAbA,cAAeE,EAAoB,EAApBA,qBAAsB6mC,EAAwB,EAAxBA,yBAChD9mC,EAAsCD,EAAtCC,iBAAqB+mC,EAAY,EAAKhnC,EAAa,GAsBrDinC,EAAuBr5C,IAAAA,aAAkB,WAC3C,OAAO,kBAACqS,GAAqB5G,EAAAA,EAAAA,MAAK6G,GACtC,GAAG,CAACA,IAEJ,OAAO,kBAAC,KAAU,CAAC/B,UArBL,SAAAxM,GACV,GAAIA,EAAK,CAEL,IAAKq1C,EAAapgD,EAAG,CACjB,IAAMy/C,EAAgD,IAAtCU,EAA2B,IAAM,GAEjDp1C,EAAIlK,IAAIqR,MAAM5Q,OAAS,eAAH,OAAkBm+C,EAAM,OAC5C10C,EAAIlK,IAAIqR,MAAM1B,OAAS,IAC3B,CACAzF,EAAIyM,YAAY,CACZC,OAAQ2oC,EAAa1+C,EACrBgW,OAAQ0oC,EAAapgD,GAE7B,CACJ,GAOsCqgD,IAC1C,EAEAH,EAAYn/C,UAAY,CACpBo/C,yBAA0Bn/C,IAAAA,KAC1BoY,cAAepY,IAAAA,OACfsY,qBAAsBtY,IAAAA,QAG1B,iMCpCMs/C,EAAY,SAAAC,GAEd,IAAKjiD,OAAOkiD,UACR,OAAO,KAGX,IACMC,GADS,IAAIniD,OAAOkiD,WACPE,gBAAgBH,EAAQ,iBAAiBpjD,SAAS,GACrE,EAAwBsjD,EAAIE,WAAtBp/C,EAAK,EAALA,MAAOD,EAAM,EAANA,OACbC,EAAsB,EAAdA,EAAM3B,MACd0B,EAAwB,EAAfA,EAAO1B,MAEhB,IAAMghD,EAAQ,GAwBd,MAvBA,GAAGvhD,QAAQw0B,KAAK4sB,EAAItjD,UAAU,SAAAqF,GAC1B,MAA4BA,EAAEm+C,WAAtBtkC,EAAC,EAADA,EAAG0/B,EAAI,EAAJA,KAAMC,EAAM,EAANA,OACjB4E,EAAM5+B,KAAK,CACP6+B,OAAQxkC,EAAEzc,MACL4E,MAAM,8BACNyF,QAAO,SAAAvN,GAAC,OAAIA,CAAC,IACbwI,KAAI,SAAAxI,GAAC,OAA8B,IAAzB,SAAS+F,QAAQ/F,GAAgB,EAAJA,EAAQA,CAAC,IACrDq/C,KAAMA,GAAQA,EAAKn8C,MACnBo8C,OAAQA,GAAUA,EAAOp8C,OAEjC,IAaO,CACH2B,MAAAA,EACAD,OAAAA,EACAs/C,MAAAA,EACAE,WAhBJ,SAAoB56C,GAA2B,IAApB66C,EAAW,UAAH,6CAAG,QAClC,MAAO,CACHx/C,MAAAA,EACAD,OAAAA,EACAs/C,MAAOA,EAAM17C,KAAI,gBAAG27C,EAAM,EAANA,OAAQ9E,EAAI,EAAJA,KAAY,MAAQ,CAC5C8E,OAAAA,EACA7E,OAFoC,EAANA,OAG9BD,KAAe,UAATA,EAAmB71C,EAAQ66C,EACpC,IAET,EAQJ,EAEaC,EAAQV,EAAU,kZAMlBW,EAAMX,EAAU,q2GC9C7B,IAAMY,EAAaC,UAAUC,UAAUC,OAAO,WAAa,EAErDC,EAAiB,SAAAC,GAQnB,OAPe,SAAH,OAAMC,EAAW,EAAXA,YAAaC,EAAW,EAAXA,YAAgBC,EAAI,cAC/C,kBAAC,KAAS,CACNF,YAAaA,EACbC,YAAaA,EACbF,cAAe,SAAA72C,GAAI,OAAI62C,EAAc,EAAD,KAAM72C,GAASg3C,GAAO,GAC5D,CAGV,EAEMC,EAAa,CACfC,oBAAqB,YACrBC,WAAY,YACZC,mBAAoB,YACpBC,GAAI,UACJC,GAAI,UACJC,YAAa,UACbC,KAAM,UACNh0C,KAAM,UACNi0C,KAAM,UACNvrC,IAAK,WAGHwrC,EAAc,CAChBR,oBAAqB,YACrBC,WAAY,YACZC,mBAAoB,YACpBC,GAAI,UACJC,GAAI,UACJC,YAAa,UACbC,KAAM,UACNh0C,KAAM,UACNi0C,KAAM,UACNvrC,IAAK,WAGT,SAASyrC,EAAS,GAA+C,IAA7Cz7B,EAAM,EAANA,OAAQpR,EAAM,EAANA,OAAQ4F,EAAa,EAAbA,cAAe/W,EAAU,EAAVA,WACzCi+C,EAASlnC,EAAgBumC,EAAaS,EACxCl8C,EAAQo8C,EAAO17B,GAAU,QAC7B,OAAIviB,EACe,SAAXuiB,EAA0B07B,EAAOp0C,KAC9Bo0C,EAAO9sC,EAAS,EAAI,MAAQ,SAExB,SAAXoR,GAAqBpR,IACrBtP,EAAQo8C,EAAO9sC,EAAS,EAAI,MAAQ,SAEjCtP,EACX,CAEA,IAAMq8C,EAAa,SAAAC,GACf,OAAOA,EAAOh2C,KAAKkkB,IAAIlkB,KAAKshB,IAAIthB,KAAKi2C,KAAKD,EAAO,IAAK,KAAM,IAAO,CACvE,EAEME,EAAU,GACVC,EAAe,SAAC19C,EAAMgG,GACxB,GAAuB,IAAnBy3C,EAAQvjD,OACR,IAAK,IAAIyD,EAAI,IAAKA,GAAK,IAAKA,EACxB8/C,EAAQ9/C,IAAMA,EAAI,GAAK,IAAM,IAAMA,EAAEkM,SAAS,IAGtD,IAAM7O,EAAUuM,KAAKC,MAAqD,IAA/CD,KAAKshB,IAAIthB,KAAKkkB,IAAIzlB,EAAKhG,EAAO,GAAI,GAAK,EAAG,IACrE,OAAOy9C,EAAQziD,EACnB,EAGM2iD,EAAY,SAACC,EAAK,GAA8B,IAA5BL,EAAI,EAAJA,KAAMtgC,EAAG,EAAHA,IAAK+6B,EAAI,EAAJA,KAAM52C,EAAI,EAAJA,KACvCw8C,EAAIC,OACJ,IAAMC,EAAQR,EAAWC,GAEzBK,EAAIG,UAAU/F,EAAQ52C,EAAK9E,MAAQwhD,EAAS,EAAG7gC,EAAO7b,EAAK/E,OAASyhD,EAAS,GAE7EF,EAAIE,MAAMA,EAAOA,GAEjB18C,EAAKu6C,MAAMvhD,SAAQ,YAA8B,IAQzC4jD,EAAQC,EARMrC,EAAM,EAANA,OAAQ9E,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAC5BD,IACA8G,EAAIM,UAAYpH,GAEhBC,IACA6G,EAAIO,YAAcpH,GAEtB6G,EAAIQ,YAEJ,IAAK,IAAI5+B,EAAM,EAAGA,EAAMo8B,EAAO1hD,OAAQslB,IAAO,CAC1C,IAAI/iB,OAAC,EAAE1B,OAAC,EAAEsjD,OAAG,EAAEC,OAAG,EAAEC,OAAG,EAAEC,OAAG,EAAE//B,OAAC,EAC/B,GAAoB,MAAhBm9B,EAAOp8B,GACP/iB,EAAIm/C,IAASp8B,GACbzkB,EAAI6gD,IAASp8B,GACbo+B,EAAIa,OAAOhiD,EAAG1B,QACX,GAAoB,MAAhB6gD,EAAOp8B,GACd/iB,EAAIm/C,IAASp8B,GACbzkB,EAAI6gD,IAASp8B,GACbo+B,EAAIc,OAAOjiD,EAAG1B,QACX,GAAoB,MAAhB6gD,EAAOp8B,GACdzkB,EAAI6gD,IAASp8B,GACbo+B,EAAIc,OAAOV,EAAQjjD,QAChB,GAAoB,MAAhB6gD,EAAOp8B,GACd/iB,EAAIm/C,IAASp8B,GACbo+B,EAAIc,OAAOjiD,EAAGwhD,QACX,GAAoB,MAAhBrC,EAAOp8B,GACd6+B,EAAMzC,IAASp8B,GACf++B,EAAM3C,IAASp8B,GACf/iB,EAAIm/C,IAASp8B,GACbzkB,EAAI6gD,IAASp8B,GACbo+B,EAAIe,iBAAiBN,EAAKE,EAAK9hD,EAAG1B,QAC/B,GAAoB,MAAhB6gD,EAAOp8B,GACd6+B,EAAMzC,IAASp8B,GACf++B,EAAM3C,IAASp8B,GACf8+B,EAAM1C,IAASp8B,GACfg/B,EAAM5C,IAASp8B,GACf/iB,EAAIm/C,IAASp8B,GACbzkB,EAAI6gD,IAASp8B,GACbo+B,EAAIgB,cAAcP,EAAKE,EAAKD,EAAKE,EAAK/hD,EAAG1B,QACtC,GAAoB,MAAhB6gD,EAAOp8B,GAAc,CAC5B/iB,EAAIm/C,IAASp8B,GACbzkB,EAAI6gD,IAASp8B,GACbf,EAAIm9B,IAASp8B,GACb,IAAMq/B,EAAUjD,IAASp8B,GACnBs/B,EAAQlD,IAASp8B,GACvBo+B,EAAImB,IAAItiD,EAAG1B,EAAG0jB,EAAGogC,EAASC,EAC9B,CACAd,EAASvhD,EACTwhD,EAASljD,CACb,CACA6iD,EAAIoB,YACAlI,GACA8G,EAAI9G,OAEJC,GACA6G,EAAI7G,QAEZ,IACA6G,EAAIE,MAAM,EAAG,GACbF,EAAIqB,SACR,EAEMC,EAAuB,SAAH,GAWpB,IAVFtB,EAAG,EAAHA,IACAuB,EAAM,EAANA,OACAC,EAAU,EAAVA,WACAniC,EAAG,EAAHA,IACAoiC,EAAM,EAANA,OACAC,EAAY,EAAZA,aACAC,EAAU,EAAVA,WACAC,EAAsB,EAAtBA,uBACAC,EAAa,EAAbA,cACA3B,EAAK,EAALA,MAEAF,EAAIC,OACJ,IAAM6B,EAAW9B,EAAI+B,OAAOC,YAAchC,EAAI+B,OAAOE,cAAcC,IAAIC,OAAO7wC,MAAM8wC,qBAC9EC,EAAUrC,EAAI+B,OAAOO,aAAetC,EAAI+B,OAAOE,cAAcC,IAAIK,YACjEC,EAAiBnjC,EAAMgjC,IAAYhjC,GAAO,IAAMuiC,GAChDa,EAAoBhB,EAASY,EAG7BK,EAAgBF,EAAiBnjC,EADhBA,EAAM,GAAKuiC,EAAyB,EAAIS,EAEzDM,EAAmBF,EAAoBhB,EAASY,EAChDO,EAAwBpB,EAAaM,EACrCe,EAAapB,EAAS93C,KAAK6K,IAAIitC,EAASpiC,GAAO,EACrD,GAAKujC,EAAL,CAsBA,GArBA5C,EAAI8C,UAAY,EAChB9C,EAAIO,YAAcmB,EAClB1B,EAAI+C,YAAY,IAChB/C,EAAIgD,KAAOzB,aAAM,EAANA,EAAQyB,KACnBhD,EAAI7xC,UAAY,SAEZq0C,GAAkBZ,KAClB5B,EAAIM,UAAYoB,EAEZH,SAAAA,EAAQliC,KACR2gC,EAAIiD,SAAS1B,aAAM,EAANA,EAAQliC,IAAKyiC,EAAW,EAAGY,EAAgB,IAG5D1C,EAAIQ,YACJR,EAAIa,OAAOiB,EAAUY,GACrB1C,EAAIc,OAAOU,EAAa,IAAKkB,GAC7B1C,EAAIc,OAAOU,EAAYkB,EAAgB,KACvC1C,EAAIc,OAAOU,EAAa,IAAKkB,GAC7B1C,EAAI9G,OACJ8G,EAAI7G,UAEJ0J,EAAaR,GAAWR,EAAe,CACvC,MAAwFA,GAAiB,CAAC,EAAlGqB,EAA6B,EAA7BA,8BAA+BC,EAAM,EAANA,OAAsBC,EAAsB,EAApC1B,aAC/C1B,EAAIM,UAAY8C,EAChBpD,EAAIqD,yBAA2B,mBAC3BD,IAA2BF,IAE3BlD,EAAIO,YAAc6C,EAClBpD,EAAIQ,YACJR,EAAImB,IAAIK,EAAa,EAAItB,EAAO2C,EAAYM,EAAQ,EAAa,EAAVx5C,KAAK25C,IAC5DtD,EAAI9G,OACJ8G,EAAI7G,UAGR6G,EAAIO,YAAcmB,EAClB1B,EAAIQ,YACJR,EAAI+C,YAAY,CAAC,EAAG,IACpB/C,EAAIa,OAAOW,GAAc2B,GAAU,GAAIN,GACvC7C,EAAIc,OAAOgB,EAAUe,GACrB7C,EAAI7G,SACJ6G,EAAIqD,yBAA2B,aACnC,EACIZ,GAAqBb,KACrB5B,EAAIM,UAAYoB,EAEZH,SAAAA,EAAQE,QAAUkB,EAAmB,GAAKN,GAC1CrC,EAAIiD,SAAS1B,aAAM,EAANA,EAAQE,OAAQK,EAAW,EAAGa,EAAmB,IAGlE3C,EAAIQ,YACJR,EAAI+C,YAAY,IAChB/C,EAAIa,OAAOiB,EAAUa,GACrB3C,EAAIc,OAAOU,EAAa,IAAKmB,GAC7B3C,EAAIc,OAAOU,EAAYmB,EAAmB,KAC1C3C,EAAIc,OAAOU,EAAa,IAAKmB,GAC7B3C,EAAI9G,OACJ8G,EAAI7G,UAGR6G,EAAIM,UAAYqB,EAChB3B,EAAIuD,SAAS/B,EAAYkB,EAAeZ,EAAWN,EAAY73C,KAAK6K,IAAImuC,EAAmBD,IAC3F1C,EAAIqB,SA9D8B,CA+DtC,EAEMmC,EAAe,SAAH,GAAiD,IAA3CxD,EAAG,EAAHA,IAAK5yC,EAAI,EAAJA,KAAI,IAAE8C,KAAQyvC,EAAI,EAAJA,KAAMvF,EAAI,EAAJA,KAAM/6B,EAAG,EAAHA,IAC7C6gC,EAAQR,EAAWC,GACnBr8C,EAAOqG,KAAKC,MAAc,EAARs2C,EAAY,GACpCF,EAAIgD,KAAO,GAAH,OAAM1/C,EAAI,aAClB8J,EAAK+F,MAAM,MAAM3W,SAAQ,SAACinD,EAAM7hC,GAC5B,IAAMm3B,EAAIpvC,KAAK+5C,KAAK1D,EAAI2D,YAAYF,GAAM/kD,OAC1CshD,EAAIiD,SAASQ,EAAMrJ,EAAO,EAAIrB,EAAG15B,EAAMuC,EAAMte,EAAO,EACxD,GACJ,EAEMsgD,EAAgB,SAAH,GAA8D,IAAxD5D,EAAG,EAAHA,IAAK38C,EAAK,EAALA,MAAOkV,EAAa,EAAbA,cAAenL,EAAI,EAAJA,KAAMgtC,EAAI,EAAJA,KAAM/6B,EAAG,EAAHA,IAAK6gC,EAAK,EAALA,MACjEF,EAAIC,OACJD,EAAI7xC,UAAY,SAChB,IAAM7K,EAAOqG,KAAKC,MAAc,GAARs2C,GACxBF,EAAIgD,KAAO,QAAH,OAAW1/C,EAAI,4BACnBD,IAAO28C,EAAIM,UAAYj9C,GACtBg7C,IACD2B,EAAI6D,YAActrC,EAAgB,mBAAqB,sBACvDynC,EAAI8D,WAAa,IAGrB,IAAK,IAAI/jD,EAAI,EAAGA,GAAKs+C,EAAa,EAAI,KAAMt+C,EACxCigD,EAAIiD,SAAS71C,EAAMgtC,EAAM/6B,GAE7B2gC,EAAIqB,SACR,EAEM0C,EAAetF,GACjB,YAsBM,IArBGuF,EAAO,EAAZhE,IACeiE,EAAmB,EAAlCC,cAAa,MACblG,QAAS7pC,EAAK,KAAKgwC,EAAK,iBACxBxlB,OAAM,GAAGn+B,EAAO,KAAEgrB,EAAS,KAC3B44B,EAAgB,EAAhBA,iBACA7rC,EAAa,EAAbA,cACA8rC,EAAsB,EAAtBA,uBACAzpC,EAAW,EAAXA,YAAW,IACX3a,cACIqkD,EAAwB,EAAxBA,yBACAnkD,EAAa,EAAbA,cACA+U,EAAc,EAAdA,eACA6O,EAAM,EAANA,OACApR,EAAM,EAANA,OACAyD,EAAyB,EAAzBA,0BACAmuC,EAAqC,EAArCA,sCACAngD,EAAO,EAAPA,QACAogD,EAAU,EAAVA,WAEAp+B,EAAU,EAAVA,WAIE45B,EAAMgE,EAENS,GAA0BrgC,EAAAA,EAAAA,uBAAsBjkB,GAChDukD,EAAkBD,GAClBE,EAAAA,EAAAA,mBAAkB,CAAExkD,cAAAA,EAAewS,OAAAA,EAAQuC,eAAAA,EAAgB6O,OAAAA,IAC3DA,EACA6gC,EAAyBH,GAA+C,SAApBC,EACpDrhD,EAAQm8C,EAAS,CACnBjnC,cAAAA,EACAwL,OAAQ2gC,EACR/xC,OAAQvO,GAAWwgD,EAAyBjyC,EAAS,OAGnDkyC,EAAkBT,GAAoBjwC,EAAM6jC,UAAY5zC,EACxD87C,EAAQR,EAAWvrC,EAAMwrC,MACzBuE,EAAgBD,EAAsBxoD,OAAOqpD,iBAEnD,CAACtkD,EAASgrB,GAAWpkB,OAAO29C,SAASvoD,SAAQ,SAAAuiB,GACzCA,EAAIpV,KAAKshB,IAAIthB,KAAKkkB,IAAI9O,EAAG,GAAImlC,EAAgB,GACjD,IAEA,IAAMc,EAAQb,EAAM,GACdx/C,EAAOw/C,EAAMA,EAAM7nD,OAAS,GAC5BulD,EAAgBsC,EAAMA,EAAM7nD,OAAS,IAAMqI,EAC3CvH,EAAUgH,EAAU07C,EAAa3rC,EAAMimC,KAAMz1C,EAAKy1C,MAAQ,GAEhE,GAAIjmC,GAASowC,EAETjD,EAAqB,CACjBG,OAAQj2B,EACRw0B,IAAAA,EACA2B,WAAYnC,EAAS,CACjBz7B,OAAQ3N,EAA4B,qBAAuB,aAC3DmC,cAAAA,IAEJgpC,OAAQ+C,EACRzC,cAAe,CACXH,aAAclC,EAAS,CAAEz7B,OAAQ,KAAMxL,cAAAA,IAAmBnb,EAC1D+lD,OAAQ,IAAMjD,GAElBsB,WAAYrtC,EAAMimC,KAClBsH,aAAclC,EAAS,CAAEz7B,OAAQ3N,EAA4B,OAAS,OAAQmC,cAAAA,IAC9E8G,IAAK7e,EACL0/C,MAAAA,QAjBR,CAqBA,GACI1/C,GACAgrB,KACGq2B,GAAiBl9C,IAAS8/C,GAA2BJ,IAClDlkD,GAAiBgU,GACzB,CAEE,IAAM8wC,EACFR,GAA+C,SAApBC,EAA6B//C,aAAI,EAAJA,EAAMy1C,KAAOyH,aAAa,EAAbA,EAAezH,KACxFkH,EAAqB,CACjBG,OAAQj2B,EACRw0B,IAAAA,EACA2B,WAAYnC,EAAS,CACjBz7B,OACI3N,GAAiD,SAApBsuC,EACvB,qBACA,sBACVnsC,cAAAA,IAGJqpC,uBAAwByC,EACxB9C,QAAS8C,GAA0BC,EACnCzC,cAAe,CACXqB,8BAA+BmB,EAC/B3C,aAAcr+C,EAAQjG,EACtB+lD,OAAQ,IAAMjD,GAElBA,MAAAA,EACAsB,WAAY6C,EAAyBY,EAA8B9wC,EAAMimC,KACzEsH,aAAclC,EAAS,CACnBz7B,OAAQ3N,GAAiD,SAApBsuC,EAA6B,OAAS,MAC3EnsC,cAAAA,IAEJ8G,IAAK7e,GAEb,CACA,IAAI6jD,EAsBJ,GApBArE,EAAIO,YAAcl9C,EAClB28C,EAAIM,UAAYj9C,EAEZwhD,IACArB,EAAa,CACTxD,IAAAA,EACA5yC,KAAM,cACN8C,KAAM,CAAEyvC,KAAMxrC,EAAMwrC,KAAMvF,KAAMjmC,EAAMimC,KAAO,EAAI8F,EAAO7gC,IAAK6kC,EAAgB,MAEjFlE,EAAIQ,YACJR,EAAI+C,YAAY,CAAC,EAAG,IACpB/C,EAAIa,OAAO1sC,EAAMimC,KAAO,EAAI8F,EAAO,GAC/BiE,EAAM7nD,QAAUkE,IAAYikD,IAC5BzE,EAAIc,OAAO3sC,EAAMimC,KAAO,EAAI8F,EAAO1/C,EAAU,GAAK0/C,GAClDF,EAAIa,OAAO1sC,EAAMimC,KAAO,EAAI8F,EAAO1/C,EAAU,EAAI0/C,IAErDF,EAAIc,OAAO3sC,EAAMimC,KAAO,EAAI8F,EAAO+D,GACnCjE,EAAI7G,UAGHgL,EAAM7nD,QAAWkE,EAAtB,CAMA,IAAK2T,EAAM6jC,SAAWgN,EAAMhN,SAAWrzC,EAAKqzC,YAAcyM,GAA2BG,GAAyB,CAC1G,IAAMvlC,EAAMolC,EAA0BO,EAAM3lC,IAAM7e,EAClDw/C,EAAIO,YAAcl9C,EAAQjG,EAC1B4iD,EAAIQ,YACJR,EAAI+C,YAAY,CAAC,EAAG,IACpB/C,EAAIa,OAAO1sC,EAAMimC,KAAM/6B,GACvB2gC,EAAIc,OAAOkE,EAAM5K,KAAM/6B,GACvB2gC,EAAI7G,SAEJ6G,EAAIQ,YACJR,EAAI+C,YAAY,IAChB/C,EAAIa,OAAOmE,EAAM5K,KAAM/6B,GACvB2gC,EAAIc,OAAOn8C,EAAKy1C,KAAM/6B,GACtB2gC,EAAI7G,SACJ6G,EAAIO,YAAcl9C,CACtB,EAGI+gD,GAAoC,IAAhBxpC,GAAsBxW,GAAYqgD,IACtDN,EACK/8C,QAAO,SAAA8I,GAAI,OAAIA,EAAK8nC,OAAO,IAC3Bx7C,SAAQ,SAAA0T,GACL,IAAMg1C,EAAMh1C,IAASvL,EAAOtB,EAAQm8C,EAAS,CAAEz7B,OAAQ,KAAMxL,cAAAA,IAC7DynC,EAAIM,UAAY4E,EAAM9nD,EACtB4iD,EAAIQ,YACJR,EAAImB,IAAIjxC,EAAKkqC,KAAO,EAAI8F,EAAOhwC,EAAKmP,IAAK,IAAM6gC,EAAO,EAAa,EAAVv2C,KAAK25C,IAC9DtD,EAAI9G,MACR,IACJ8G,EAAIM,UAAYj9C,GAGA,IAAhBuX,IACA,CAACoqC,EAAOR,GAAcI,EAAyBjgD,EAAO,MAAMnI,SAAQ,SAAA0T,GAC5DA,GAAQA,EAAK8nC,UACbgI,EAAIO,YAAcl9C,EAAQjG,EAC1B4iD,EAAI+C,YAAY,CAAC,EAAG,IACpB/C,EAAIQ,YACJR,EAAIa,OAAO3wC,EAAKkqC,KAAO,EAAI8F,EAAOhwC,EAAKmP,KACnCnP,IAAS80C,GAASP,EAElBzE,EAAIc,OAAO3sC,EAAMimC,KAAO,EAAI8F,EAAO8E,EAAM3lC,KAClCnP,IAASvL,GAAQ8/C,GAExBzE,EAAIa,OAAOl8C,EAAKy1C,KAAM4K,EAAM3lC,KAC5B2gC,EAAIc,OAAOn8C,EAAKy1C,KAAMz1C,EAAK0a,MACxB2gC,EAAIc,OAAO5wC,EAAKkqC,KAAO,EAAI8F,EAAO1/C,GACzCw/C,EAAI7G,SAEJ6G,EAAIM,UAAYj9C,EAAQjG,EACxB4iD,EAAIQ,YACJR,EAAImB,IAAIjxC,EAAKkqC,KAAO,EAAI8F,EAAOhwC,EAAKmP,IAAK,EAAI6gC,EAAO,EAAa,EAAVv2C,KAAK25C,IAC5DtD,EAAI9G,OAEAhpC,IAAS80C,IACThF,EAAIQ,YACJR,EAAIM,UAAYd,EAAS,CAAEz7B,OAAQ,KAAMxL,cAAAA,IAAmBnb,EAC5D4iD,EAAImB,IAAIjxC,EAAKkqC,KAAO,EAAI8F,EAAOhwC,EAAKmP,IAAK,EAAI6gC,EAAO,EAAa,EAAVv2C,KAAK25C,IAC5DtD,EAAI9G,QAGhB,IACA8G,EAAIO,YAAcl9C,EAClB28C,EAAIM,UAAYj9C,IAGhB8Q,EAAM6jC,SAAY5zC,GAAYqgD,GAC9Bb,EAAc,CACV5D,IAAAA,EACAE,MAAAA,EACA3nC,cAAAA,EACAnL,KAAM,GAAF,OAAK+2C,EAAM7nD,OAAS,EAAC,YAAI8pB,GAC7Bg0B,KAAMjmC,EAAMimC,KACZ/6B,IAAK7e,EAAU,GAAK0/C,IAKxB/rC,EAAM6jC,SACN+H,EAAUC,EAAK,CACX3gC,IAAKolC,EAA0BO,EAAM3lC,IAAM,EAAI6gC,EAAQ1/C,EAAU,EAAI0/C,EACrE9F,KAAMjmC,EAAMimC,KAAO,EAAI8F,EACvBP,KAAMxrC,EAAMwrC,KACZn8C,KAAM2hD,EAAYlH,WACd56C,GAASe,EAAUhH,EAAU,IAC7BoiD,EAAS,CAAEz7B,OAAQ,KAAMxL,cAAAA,KAAoBnU,EAAUhH,EAAU,OAKzEuH,EAAKqzC,UAAY5zC,GAAWwgD,IAC5B7E,EAAUC,EAAK,CACX3gC,IAAKolC,EAA0BO,EAAM3lC,IAAM,EAAI6gC,EAAQ1/C,EAAU,EAAI0/C,EACrE9F,KAAMz1C,EAAKy1C,KAAO,EAAI8F,EACtBP,KAAMh7C,EAAKg7C,KACXn8C,KAAM2hD,EAAUlH,WAAW56C,EAAOm8C,EAAS,CAAEz7B,OAAQ,KAAMxL,cAAAA,OAGnEynC,EAAIqB,SApGJ,MAFIrB,EAAIqB,SA5DR,CAmKJ,IAGE+D,EAAmB,CACrBC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KAsRT,SACIhC,aAAAA,EACAiC,gBArRoBvH,GACpB,YAiBM,IAhBGuF,EAAO,EAAZhE,IACeiE,EAAmB,EAAlCC,cAAa,MACblG,OAAM,GAAG7pC,EAAK,KAAE8xC,EAAM,KAAEjB,EAAK,KAAErgD,EAAI,KACnCy/C,EAAgB,EAAhBA,iBAAgB,MAChBzlB,OAAM,GAAGn+B,EAAO,KAAE0lD,EAAc,KAAEC,EAAa,KAC/C5tC,EAAa,EAAbA,cACAqC,EAAW,EAAXA,YACAlV,EAAQ,EAARA,SAAQ,IACRzF,cACIE,EAAa,EAAbA,cAGAiE,EAAO,EAAPA,QACA2f,EAAM,EAANA,OACApR,EAAM,EAANA,OAIEqtC,EAAMgE,EAGQ,IAAhBppC,IACIoqC,IACAA,EAAM3lC,IAAM6mC,GAEZvhD,IACAA,EAAK0a,IAAM8mC,IAInB,IAAM9iD,EAAQm8C,EAAS,CAAEz7B,OAAAA,EAAQpR,OAAAA,EAAQ4F,cAAAA,EAAe/W,YAAYnB,EAAAA,EAAAA,mBAAkBF,KAEtF6/C,EAAIC,OACJD,EAAIO,YAAcl9C,EAClB28C,EAAIM,UAAYj9C,EAEhB,IAAMwhD,EAAkBT,GAAoBjwC,EAAM6jC,UAAY5zC,EACxDgiD,EAAchC,IAAqBhgD,GAAWuO,GAAUwB,EAAM6jC,SAAWx3C,EACzE0/C,EAAQR,EAAWvrC,EAAMwrC,MACzBviD,EAAUgH,EAAU07C,EAAa3rC,EAAMimC,KAAM6L,EAAO7L,MAAQ,GAE5D8J,EAAgBD,EAAsBxoD,OAAOqpD,iBA8EnD,GA7EItkD,IACAA,EAAUmJ,KAAKshB,IAAIthB,KAAKkkB,IAAIrtB,EAAS,GAAI0jD,EAAgB,KAGzDW,IACArB,EAAa,CACTxD,IAAAA,EACA5yC,KAAM,cACN8C,KAAM,CACFyvC,KAAMxrC,EAAMwrC,KACZvF,KAAMjmC,EAAMimC,KAAO,EAAI8F,EACvB7gC,IAAK6kC,EAAgB,MAG7BlE,EAAIQ,YACJR,EAAI+C,YAAY,CAAC,EAAG,IACpB/C,EAAIa,OAAO1sC,EAAMimC,KAAO,EAAI8F,EAAO,GAC/B1/C,IACAw/C,EAAIc,OAAO3sC,EAAMimC,KAAO,EAAI8F,EAAO1/C,GAAW4lD,EAAc,GAAK,IAAMlG,GACvEF,EAAIa,OAAO1sC,EAAMimC,KAAO,EAAI8F,EAAO1/C,EAAU,EAAI0/C,IAErDF,EAAIc,OAAO3sC,EAAMimC,KAAO,EAAI8F,EAAO+D,GACnCjE,EAAI7G,UAGJ34C,GAAWwkD,IAAU7wC,EAAM6jC,SAAWiO,EAAOjO,SAAWruC,KAAKqK,KAAKG,EAAMimC,QAAUzwC,KAAKqK,KAAKiyC,EAAO7L,SACnG4F,EAAIO,YAAcl9C,EAAQjG,EAC1B4iD,EAAIQ,YACJR,EAAI+C,YAAY,CAAC,EAAG,IACpB/C,EAAIa,OAAO1sC,EAAMimC,KAAM55C,GACvBw/C,EAAIc,OAAOkE,EAAM5K,KAAM55C,GACvBw/C,EAAI7G,SAEJ6G,EAAIQ,YACJR,EAAI+C,YAAY,IAChB/C,EAAIa,OAAOmE,EAAM5K,KAAM55C,GACvBw/C,EAAIc,OAAOmF,EAAO7L,KAAM55C,GACxBw/C,EAAI7G,SACJ6G,EAAIO,YAAcl9C,GAItB,CAAC2hD,EAAOrgD,GAAMnI,SAAQ,SAAA0T,GACdA,GAAQA,EAAK8nC,UACbgI,EAAIO,YAAcl9C,EAAQjG,EAC1B4iD,EAAI+C,YAAY,CAAC,EAAG,IACpB/C,EAAIQ,YACJR,EAAIa,OAAO3wC,EAAKkqC,KAAO,EAAI8F,EAAOhwC,EAAKmP,KACvC2gC,EAAIc,OAAO5wC,EAAKkqC,KAAO,EAAI8F,EAAO1/C,GAClCw/C,EAAI7G,SAEJ6G,EAAIM,UAAYj9C,EAAQjG,EACxB4iD,EAAIQ,YACJR,EAAImB,IAAIjxC,EAAKkqC,KAAO,EAAI8F,EAAOhwC,EAAKmP,IAAK,EAAI6gC,EAAO,EAAa,EAAVv2C,KAAK25C,IAC5DtD,EAAI9G,OAEAhpC,IAAS80C,IACThF,EAAIQ,YACJR,EAAIM,UAAYd,EAAS,CAAEz7B,OAAQ,KAAMxL,cAAAA,IAAmBnb,EAC5D4iD,EAAImB,IAAIjxC,EAAKkqC,KAAO,EAAI8F,EAAOhwC,EAAKmP,IAAK,EAAI6gC,EAAO,EAAa,EAAVv2C,KAAK25C,IAC5DtD,EAAI9G,QAER8G,EAAIM,UAAYj9C,EAChB28C,EAAIO,YAAcl9C,EAE1B,IAGI8Q,GAASA,EAAM6jC,SAAWx3C,GAC1Bu/C,EAAUC,EAAK,CACX3gC,IAAK7e,EAAU,EAAI0/C,EACnB9F,KAAMjmC,EAAMimC,KAAO,EAAI8F,EACvBP,KAAMxrC,EAAMwrC,KACZn8C,KAAM2hD,EAAYlH,WAAW56C,EAAQjG,KAIzCgpD,EAAa,CACb,IAAMriD,EAASqhD,EAAiB1/C,IAAa,GACvCpG,GAAiBigB,EAAAA,EAAAA,kBAAiB7Z,GAElC0H,EAAO,GAAH,OADGuF,EAAS,EAAI,IAAMA,EAAS,EAAI,IAAM,KAC/B,OAAG5O,GAAM,OAAG4F,KAAK6K,IAAI7B,GAAQjT,QAAQJ,IACzDskD,EAAc,CACV5D,IAAAA,EACA38C,MAAOm8C,EAAS,CAAEz7B,OAAQ,OAAQpR,OAAAA,IAClCutC,MAAAA,EACA9yC,KAAAA,EACAmL,cAAAA,EACA6hC,KAAMjmC,EAAMimC,KACZ/6B,IAAK7e,EAAU,GAAK0/C,GAE5B,CAEI+F,EAAOjO,SACP+H,EAAUC,EAAK,CACX3gC,IAAK7e,EAAU,EAAI0/C,EACnB9F,KAAM6L,EAAO7L,KAAO,EAAI8F,EACxBP,KAAMsG,EAAOtG,KACbn8C,KAAM2hD,EAAUlH,WAAW56C,EAAOm8C,EAAS,CAAEz7B,OAAQ,KAAMxL,cAAAA,OAGnEynC,EAAIqB,SACR,IAoIAgF,cAjIkB5H,GAClB,YAgBM,IAfGuF,EAAO,EAAZhE,IAAG,MACHhC,QAAS7pC,EAAK,KAAKgwC,EAAK,iBACxBxlB,OAAM,GAAGunB,EAAc,KAAEC,EAAa,KACtC/B,EAAgB,EAAhBA,iBACA7rC,EAAa,EAAbA,cACAqC,EAAW,EAAXA,YAAW,IACX3a,cAEI8jB,EAAM,EAANA,OACApR,EAAM,EAANA,OACAvO,EAAO,EAAPA,QAEA03C,EAAW,EAAXA,YACA11B,EAAU,EAAVA,WAIE45B,EAAMgE,EAEN3gD,EAAQm8C,EAAS,CACnBjnC,cAAAA,EACAwL,OAAAA,EACApR,OAAQvO,EAAUuO,EAAS,OAG/BqtC,EAAIC,OACJD,EAAIO,YAAcl9C,EAClB28C,EAAIM,UAAYj9C,EAEhB,IAAMwhD,EAAkBT,GAAoBjwC,EAAM6jC,UAAY5zC,EACxD87C,EAAQR,EAAWvrC,EAAMwrC,MAiB/B,GAfoB,IAAhB/kC,GAAqBzG,GAAS+xC,IAC9B/xC,EAAMkL,IAAM6mC,GAEZrB,IACA7E,EAAIQ,YACJR,EAAI+C,YAAY,CAAC,EAAG,IACpB/C,EAAIa,OAAO1sC,EAAMimC,KAAO,EAAI8F,EAAO,GAC/BiE,EAAM7nD,SACN0jD,EAAIc,OAAO3sC,EAAMimC,KAAO,EAAI8F,EAAO/rC,EAAMkL,IAAM,GAAK6gC,GACpDF,EAAIa,OAAO1sC,EAAMimC,KAAO,EAAI8F,EAAO/rC,EAAMkL,IAAM,EAAI6gC,IAEvDF,EAAIc,OAAO3sC,EAAMimC,KAAO,EAAI8F,EAAOF,EAAI+B,OAAOtjD,QAC9CuhD,EAAI7G,UAGHgL,EAAM7nD,OAAX,CAIA,IAAM2pD,EAAS9B,EAAMA,EAAM7nD,OAAS,GAC9Bc,EAAUgH,EAAU07C,EAAa3rC,EAAMimC,KAAM6L,EAAO7L,MAAQ,GAC9C,IAAhBx/B,GAAqBqrC,GAAUE,IAC/BF,EAAO5mC,IAAM8mC,GAIbhyC,EAAM6jC,SAAW7jC,EAAMkL,MAAQjb,GAC/Bw/C,EAAc,CACV5D,IAAAA,EACAE,MAAAA,EACA3nC,cAAAA,EACAnL,KAAM,GAAF,OAAK+2C,EAAM7nD,OAAM,YAAI8pB,GACzBg0B,KAAMjmC,EAAMimC,KAAO,EAAI8F,EACvB7gC,IAAKlL,EAAMkL,IAAM,GAAK6gC,KAI1B/rC,EAAM6jC,SAA4B,IAAhBp9B,GAAsBxW,GACxC27C,EAAUC,EAAK,CACX3gC,IAAKlL,EAAMkL,IAAM,EAAI6gC,EACrB9F,KAAMjmC,EAAMimC,KAAO,EAAI8F,EACvBP,KAAMxrC,EAAMwrC,KACZn8C,KAAM2hD,EAAYlH,WAAW56C,EAAQjG,EAASoiD,EAAS,CAAEz7B,OAAQ,KAAMxL,cAAAA,IAAmBnb,KAIlG+mD,EAAM3nD,SAAQ,SAAC0T,EAAM0R,GACjB,GAAI1R,IAAS+1C,GAGR/1C,EAAK8nC,UAGU,IAAhBp9B,GAAqB1K,IAAS+1C,KAGd,IAAhBrrC,GAAqB1K,IAAS+1C,GAAW7hD,GAA7C,CAGA,IAAM8gD,EAAMh1C,IAAS+1C,EAASzG,EAAS,CAAEz7B,OAAQ,KAAMxL,cAAAA,IAAmBlV,EAC1E28C,EAAIQ,YACJR,EAAIM,UAAY4E,EAChBlF,EAAImB,IAAIjxC,EAAKkqC,KAAMlqC,EAAKmP,IAAK,EAAI6gC,EAAO,EAAa,EAAVv2C,KAAK25C,IAChDtD,EAAI9G,OAEJ8G,EAAIQ,YACJR,EAAIM,UAAYl8C,EAAUf,EAAQm8C,EAAS,CAAEz7B,OAAQ,KAAMxL,cAAAA,IAC3DynC,EAAImB,IAAIjxC,EAAKkqC,KAAMlqC,EAAKmP,IAAK,EAAI6gC,EAAO,EAAa,EAAVv2C,KAAK25C,IAChDtD,EAAI9G,OAEJ,IACM3oC,EADYurC,EAAYl6B,GACDo6B,mBAAmBloC,OAAO,GACvDksC,EAAIM,UAAYl8C,EAAU,QAAU8gD,EACpClF,EAAI7xC,UAAY,SAChB6xC,EAAI8D,WAAa,EACjB9D,EAAIgD,KAAO,QAAH,OAAW,GAAK9C,EAAK,4BAC7BF,EAAIiD,SAAS1yC,EAAYL,EAAKkqC,KAAMlqC,EAAKmP,IAlBzC,CAmBJ,IAEI4mC,EAAOjO,SAAW5zC,IAClB47C,EAAIM,UAAYj9C,EAChB08C,EAAUC,EAAK,CACX3gC,IAAK4mC,EAAO5mC,IAAM,GAAK6gC,EACvB9F,KAAM6L,EAAO7L,KAAO,EAAI8F,EACxBP,KAAMsG,EAAOtG,KACbn8C,KAAM2hD,EAAUlH,WAAW56C,EAAOm8C,EAAS,CAAEz7B,OAAQ,KAAMxL,cAAAA,QAGnEynC,EAAIqB,SAtEJ,MAFIrB,EAAIqB,SAyEZ,wLC9wBEiF,EAAgB,SAAH,OAAM30C,EAAM,EAANA,OAAM,OAAO,yBAAK/T,UAAU,kBAAkB+T,EAAa,EAEpF20C,EAAcpoD,UAAY,CACtByT,OAAQxT,IAAAA,MAGZ,2ZCkDA,SA/C6B9D,EAAAA,EAAAA,KAAS,WAAM,UAClCksD,EAASx3C,SAASy3C,eAAe,cAE/B73C,GADYlU,EAAAA,EAAAA,MAAZyuB,QACAva,MACAsuB,EAA+DtuB,EAA/DsuB,4BAA6B0C,EAAkChxB,EAAlCgxB,8BAYrC,GAVAx7B,IAAAA,WAAgB,WACZ,IAAMI,EAAUuH,YAAW,WACvB6zB,GACJ,GAAG,KAEH,OAAO,WACH5zB,aAAaxH,EACjB,CACJ,GAAG,CAACo7B,EAA+B1C,KAE9BspB,IAAWtpB,EAA6B,OAAO,kBAAC,aAAc,MAEnE,IAAQrX,EAA6CqX,EAA7CrX,UAAWlgB,EAAkCu3B,EAAlCv3B,SAAUvF,EAAwB88B,EAAxB98B,cAAewqC,EAAS1N,EAAT0N,KACtC8b,EAAoB,CAAE1pD,MAAOoD,GAE7BumD,EAA+D,QAAhD,GAAGC,EAAAA,EAAAA,IAAqBhc,EAAM8b,UAAkB,OAAgB,QAAhB,EAA7C,EAA+CG,sBAAc,OAEpF,QAFoF,EAA7D,EAA+Dz9C,MACnF,SAACC,GAAmB,OAAKA,EAAKrM,QAAUoD,CAAa,WACxD,WAFoE,EAA7C,EAErBiN,KAEH,OAAOy5C,IAAAA,aACH,kBAAC,EAAA5nD,cAAa,KACV,kBAAC,EAAA6nD,MAAK,CACFlpD,UAAU,wBACV8pB,UAAWuV,EAA4Bh/B,IACvCsG,QAAS,EACThH,KAAK,gBAEL,kBAAC,EAAA6F,KAAI,CAACoJ,GAAG,IAAIlJ,KAAK,MAAM1F,UAAU,0BAC9B,kBAAC,EAAA8O,SAAQ,CACLC,kBAAkB,2IAClBC,WAAY,CAAC,4BAAQ3O,IAAK,KAC1BnB,OAAQ,CAAE4pD,gBAAAA,EAAiB9gC,UAAAA,EAAWlgB,SAAAA,GACtCqhD,gBAAc,OAK9BR,EAER,IC/CA,IAAMS,GAAkB3sD,EAAAA,EAAAA,KAAS,WAC7B,IAAQkL,GAAmB9K,EAAAA,EAAAA,MAAnB8K,eACAqV,EAA+BrV,EAA/BqV,YAAaD,EAAkBpV,EAAlBoV,cAEfssC,EAAuBtsC,EAAcA,EAAcre,OAAS,GAClE,IACK2qD,IACAA,EAAqBhnD,cAAc67C,cACpC13B,EAAAA,EAAAA,uBAAsB6iC,EAAqBhnD,cAAcE,eAEzD,OAAO,KAGX,IADiB+mD,EAAAA,EAAAA,SAAQD,EAAqBhnD,gBACd,IAAhB2a,EAAmB,OAAO,KAE1C,MAAmDqsC,EAAqBhnD,cAAhEE,EAAa,EAAbA,cAAe27C,EAAW,EAAXA,YAAa11B,EAAU,EAAVA,WAC9B3C,GAAe0jC,EAAAA,EAAAA,iBAAgBhnD,GAAiB27C,EAAYx/C,OAASqN,KAAKkkB,IAAIiuB,EAAYx/C,OAAS,EAAG,GAC5G,OACI,kBAAC,EAAA8G,KAAI,CAAC4E,OAAO,OAAOpK,UAAU,sBACzBwC,EAAAA,EAAAA,UAAS,QAAO,IAAGqjB,EAAY,IAAG2C,EAG/C,IAEMghC,EAAa,SAAH,GAUV,IATFC,EAAO,EAAPA,QACAlhD,EAAS,EAATA,UAAS,IACTmhD,iBAAAA,OAAgB,IAAG,GAAI,EACvBx3C,EAAc,EAAdA,eACA0B,EAAY,EAAZA,aACAzP,EAAK,EAALA,MACAqP,EAAW,EAAXA,YACA/F,EAAI,EAAJA,KACA8F,EAAuB,EAAvBA,wBAEMo2C,EACF,kBAAC,KAAU,CACPn2C,YAAaA,EACb/F,KAAMA,EACNm8C,QAASF,EACTl3C,SAAUN,EACVmH,qBAAqB,oBACrBwwC,aAActhD,EACd0Q,aAAc1Q,EAAY,iBAAczM,IAI1C6sD,EAASM,IAAAA,aACX,yBAAKjpD,UAAS,sBAAiBmE,IAC3B,yBACInE,UAAU,qBACVyR,MAAO,CACH3Q,MAAO,eAAF,OAAiB8S,EAAeA,EAAe,EAAI,EAAC,SAG5DrL,GAAa,kBAAC,EAAoB,MAClCohD,GACCp2C,GAA2B,kBAAC61C,EAAe,QAGrDj4C,SAASy3C,eAAe,iBAG5B,OACI,kBAAC,aAAc,KACVa,EACD,kBAAC,EAAApoD,cAAa,KAAEsnD,GAChB,kBAAC,EAAApnD,eAAc,KAAEooD,GAG7B,EAEAH,EAAWlpD,UAAY,CACnBmpD,QAASlpD,IAAAA,KACTgT,wBAAyBhT,IAAAA,KACzBgI,UAAWhI,IAAAA,KACXmpD,iBAAkBnpD,IAAAA,KAClB2R,eAAgB3R,IAAAA,KAChBkN,KAAMlN,IAAAA,KACNiT,YAAajT,IAAAA,OACb4D,MAAO5D,IAAAA,OACPqT,aAAcrT,IAAAA,QAGlB,wNC3FMupD,GAAShoC,EAAAA,EAAAA,eAAa,kBACxB,4DAAyF,IAG7FgoC,EAAO/rD,MAAK,aACRgsD,EADmC,EAAxBA,2BACcrR,EAAAA,EAAAA,YAAW,oBACxC,IAIA,IAAMsR,EAAO,SAAAC,GAAc,OAAI,kBAC3BH,EAAO/rD,MAAK,SAAAmsD,GACR,MAAO,CAAEC,QAASD,EAAOD,GAC7B,GAAE,GAEOttC,EAAapW,IAAAA,KAAWyjD,EAAK,eAC7BI,EAAa7jD,IAAAA,KAAWyjD,EAAK,eAG7BK,GADuBL,EAAK,aAChBzjD,IAAAA,KAAWyjD,EAAK,eAC5BM,EAAY/jD,IAAAA,KAAWyjD,EAAK,cAC5BO,EAAQhkD,IAAAA,KAAWyjD,EAAK,UACxBQ,EAAcjkD,IAAAA,KAAWyjD,EAAK,gBAC9BS,EAAQlkD,IAAAA,KAAWyjD,EAAK,UACxBU,EAAgBnkD,IAAAA,KAAWyjD,EAAK,kBAEhCW,EAAapkD,IAAAA,KAAWyjD,EAAK,eAC7BY,EAAYrkD,IAAAA,KAAWyjD,EAAK,y+DCvBlC,IAAMa,EAAa,SAAH,GAAoE,QAA9DC,UAAAA,OAAS,IAAG,eAAY,EAAEpuD,EAAQ,EAARA,SAAUsD,EAAS,EAATA,UAAcrE,EAAK,OAChF,OAAKwV,SAASy3C,eAAekC,GACtB7B,IAAAA,aACH,kBAAC,EAAAC,MAAK,GAAClpD,UAAWqE,IAAW,iBAAkBrE,IAAgBrE,GAC1De,GAELyU,SAASy3C,eAAekC,IALoB,IAOpD,EAKMC,EAA0B,SAAH,GAAuC,IAAjC5kC,EAAM,EAANA,OAAQ2kC,EAAS,EAATA,UAAWxlD,EAAO,EAAPA,QACA,IAArBiB,IAAAA,UAAe,GAAM,GAA3CujB,EAAO,KAAEkhC,EAAS,KAEzB,OAAK75C,SAASy3C,eAAekC,IAAexlD,GAEvCwkB,GAAsB,WAAX3D,EAEL2D,GAAsB,WAAX3D,GAClBjY,YAAW,WACP88C,GAAU,EACd,GAAG,MAJHA,GAAU,GAOP/B,IAAAA,aACH,kBAAC,EAAA5nD,cAAa,KACV,kBAAC,EAAA6nD,MAAK,CACFlpD,UAAWqE,IAAW,CAClB,oBAAgC,YAAX8hB,IAEzB2D,QAASA,EACTnjB,QAAS,EACThH,KAAK,SAEJ2F,IAGT6L,SAASy3C,eAAekC,KAvBgC,IAyBhE,EAEAC,EAAwBzqD,UAAY,CAChCwqD,UAAWvqD,IAAAA,OACX4lB,OAAQ5lB,IAAAA,OACR+E,QAAS/E,IAAAA,QAGN,IAAM0qD,GAA+BxuD,EAAAA,EAAAA,KAAS,WACjD,IACcme,GACV/d,EAAAA,EAAAA,MADA6K,OAAUkT,eAEd,OACI,kBAACmwC,EAAuB,CACpBD,UAAU,aACVxlD,QAASsV,EAAeswC,QACxB/kC,OAAQvL,EAAc,OAGlC,g2BCpDO,IAAMuwC,GAAsB,QAC9B3oD,EAAAA,EAAAA,UAAS,eAAiB,cAAY,KACtCA,EAAAA,EAAAA,UAAS,gBAAkB,eAAa,KACxCA,EAAAA,EAAAA,UAAS,cAAgB,aAAW,KACpCA,EAAAA,EAAAA,UAAS,cAAgB,eAAa,KACtCA,EAAAA,EAAAA,UAAS,UAAY,YAAU,KAC/BA,EAAAA,EAAAA,UAAS,eAAiB,gBAAc,KACxCA,EAAAA,EAAAA,UAAS,gBAAkB,oBAAkB,GAGrC4oD,EAA+B,WAAH,MACpC,CACGC,IAAK,WACLC,aAAc,mBACdC,QAAS,eACTC,YAAa,kBACbC,OAAQ,cACX,EAaQze,EAA4B,SAAC1d,EAAyCo8B,GAC/E,OAAOltD,OAAOC,KAAK6wB,GACd7qB,KAAI,SAAApE,GACD,IAAM2oD,EAAiB15B,EAAoBjvB,GAAKsrD,WAC1CC,EAAgBt8B,EAAoBjvB,GAAK1F,KACzCkxD,EAA2B7C,EAAex/C,QAAO,SAAA7J,GAAI,OACvDA,EAAKR,QAEJusD,EAAiB1nD,SAASrE,EAAKR,OAC1BQ,OACA7D,CAAS,IAGnB,GAAI+vD,EAAyBntD,OACzB,MAAO,CACH2B,IAAAA,EACAysB,MAAO8+B,EACP5C,eAAgB6C,EAChBjmD,KAAMulD,EAAuBS,GAC7B5pC,UACI4pC,KAAkBppD,EAAAA,EAAAA,UAAS,gBACvB,0BAAMxC,UAAU,iCAAgCwC,EAAAA,EAAAA,UAAS,SACzD,KAIpB,IACCgH,OAAO29C,QAChB,EAoDa4B,EAAuB,SAAChc,EAAwBvhC,GAAW,OACpEuhC,aAAI,EAAJA,EAAMxhC,MAAK,SAAAugD,GAAS,aAAIA,SAAyB,QAAhB,EAATA,EAAW9C,sBAAc,WAAhB,EAAT,EAA2B9jD,MAAK,SAAA/C,GAAC,OAAIA,EAAEhD,QAAUqM,EAAKrM,KAAK,GAAC,MAAM,CAAC,CAAuB,EAEzG4sD,EAAyB,SAAChf,EAAevhC,GAAW,aAAqC,QAArC,EAAKu9C,EAAqBhc,EAAMvhC,UAAK,aAAhC,EAAkCnL,GAAG,EAE9F2rD,EAAmB,SAACjf,EAAevhC,GAAW,aAAqC,QAArC,EAAKu9C,EAAqBhc,EAAMvhC,UAAK,aAAhC,EAAkCw9C,cAAc,6FClIhH,IAAMiD,EAAqB,CAAC,WAAY,aAAc,cAChDC,EAAgB,CAAC,YAAa,aAAc,YAAa,aAAc,YAAa,YAE7EvlB,EAAmB,SAACl0B,GAAkB,OAAKw5C,EAAmB/mD,MAAK,SAAAsG,GAAI,OAAIA,IAASiH,CAAU,GAAC,EAC/Fy0B,EAAsB,SAAC3kC,GAAqB,OAAK2pD,EAAchnD,MAAK,SAAAsG,GAAI,OAAIA,IAASjJ,CAAa,GAAC,gRCHhH,s0SAsBO,IAGCymD,EAFA6C,EACAM,EAEEC,EACAlhD,EACFuP,EAiEE4xC,EAKAC,EA0EAC,EAqBA37B,EAaAG,EAmBAK,EAmBAd,EAKAk8B,EA0BAvgD,EACAC,EAEAugD,EAsBAC,EA8EA98B,EAuGA+8B,EAEAC,EAIA/8B,EAYAg9B,EAWAC,EAKAC,EAMAC,EAUAC,EAoBAC,EAjhBGjgC,GACL4+B,EAA2B,CAAC,EAC5BM,EAAuB,CAAC,EAEtBC,EAAiB,CAAC,EAClBlhD,EAAgB,CAAC,EACnBuP,GAAsC,EAiEpC4xC,EAAwB,SAACnqC,GAA+B,IAArBre,EAAc,UAAH,6CAAG,CAAC,EAEpD,OADAA,EAAYqe,EAAS3f,eAAiB2f,EAASirC,iBACxCtpD,CACX,EAEMyoD,EAAuB,SAACc,EAAgBjuD,GAAK,OACZ,IAAnCiuD,EAAeprD,QAAQ7C,GAAgBA,EAAQiuD,EAAe,EAAE,EAyE9Db,EAAgB,SAAAc,GAAU,QACxBh5B,EAAQ,GAaZ,OAXIA,EADsB,QAA1B,EAAI20B,EAAeqE,UAAO,OAAQ,QAAR,EAAtB,EAAwBvwC,cAAM,OAA9B,EAAgCwwC,gBACxB,EAAItE,EAAeqE,GAAQr+C,YAE3B,CAAC,WAAY,UAAQ,SAAKg6C,EAAeqE,GAAQr+C,aAAYxF,QACjE,SAAAwY,GAAS,QAEa,aAAdA,GACAgnC,EAAeqE,GAAQvwC,QACvBksC,EAAeqE,GAAQvwC,OAAOywC,cACjC,IAITvE,GAAkB,CACdtvC,gBAAiB2a,EAG7B,EAEMzD,EAAuB,SAACruB,EAAe0rB,GACzC,MAAO,CACH4C,qBACI0Y,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CACvCtpD,EACA,SACA,YACA,gBACA0rB,KACE,GAElB,EAEM8C,EAAkB,SAACvH,EAAejnB,EAAe0rB,GACnD,IAAMu/B,GACFjkB,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CACvCtpD,EACA,SACA,YACA,gBACA0rB,KACE,GACJw/B,EAAY,GAKlB,OAJAD,EAAe5uD,SAAQ,SAAA8uD,GACnBD,EAAUlsC,KAAKmsC,EAAIvuD,MACvB,IAEO,CACHqqB,cAAe8iC,EAAqBmB,EAAWjkC,GAEvD,EAEM4H,EAAoB,SAAC7uB,EAAe0rB,EAAqB0B,GAC3D,IAAIG,GACAyZ,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CACvCtpD,EACA,SACA,YACA,UACA0rB,KACE,CAAC,EAMX,OAJI0B,IACAG,EAAmBA,EAAiBH,IAAyB,CAAC,GAG3D,CAAEG,iBAAAA,EACb,EAIMQ,EAAe,SAAAvC,GAAU,MAAK,CAEhCE,oBAAqBF,IAAe8P,OAAO,GAAK,OAAS,UAC5D,EAEK2uB,EAAgB,SAACjqD,EAAeorD,GAAuB,MACnD7wC,GAASysB,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CAACtpD,EAAe,WACpEu7B,EAAmB,GAczB,OAZIhhB,SAAAA,EAAQ8wC,UAER9vB,EAAiBvc,KAAK,CAAE/R,MAAMhN,EAAAA,EAAAA,UAAS,OAAQrD,MAAO0+B,OAAO,KAE7D/gB,SAAAA,EAAQ+wC,wBACR/vB,EAAiBvc,KAAI,MAArBuc,EAAgB,EAAShhB,EAAO+wC,yBAO7B,CAAE9/B,WAJU+P,EAAiBvyB,MAAK,SAAAC,GAAI,OAAIA,EAAKrM,QAAUwuD,CAAkB,IAC5EA,EACmB,QADD,EAClB7vB,EAAiB,UAAE,aAAnB,EAAqB3+B,MAEN2+B,iBAAAA,EACzB,EASM7xB,EAAQ,EAAI1H,MAAM,IAAI9F,QAAQgG,KAAI,SAAAyc,GAAC,MAAI,WAAIA,GAAIhL,OAAO,EAAE,IACxDhK,EAAU,EAAI3H,MAAM,IAAI9F,QAAQgG,KAAI,SAAAyc,GAAC,MAAI,WAAQ,EAAJA,GAAQhL,OAAO,EAAE,IAE9Du2C,EAAe,SAAC99B,EAAUm/B,EAAgBz/B,GAmB5C,OAlBIM,KAAaD,EAAAA,EAAAA,GAAmBC,EAAUm/B,KAE1CA,EAAel/B,OACX1iB,EAAQX,MAAK,SAAArJ,GAAC,OAAIwsB,EAAAA,EAAAA,GAAmBC,EAAUm/B,EAAel/B,OAAO1sB,GAAG,KAAK4rD,EAAexgD,OAAO,QAGlGohB,EAAAA,EAAAA,GAAmBC,EAAUm/B,KAC9BA,EAAel/B,OAAO,GACtBk/B,EAAe//C,KACX9B,EAAMV,MAAK,SAAAkjB,GAAC,OAAIC,EAAAA,EAAAA,GAAmBC,EAAUm/B,EAAe//C,KAAK0gB,GAAIJ,GAAc,EAAK,KACpFy/B,EAAexgD,OAAO,OAE9BwgD,EAAel/B,OACX1iB,EAAQX,MAAK,SAAArJ,GAAC,OAAIwsB,EAAAA,EAAAA,GAAmBC,EAAUm/B,EAAel/B,OAAO1sB,GAAG,KACpE4rD,EAAexgD,OAAO,SAI/BwgD,EAAexgD,OAAO,QACjC,EAEMo/C,EAAc,SAACtoB,EAAM/C,GACvB,IAAmE,KAA5CnT,EAAAA,EAAAA,aAAYmT,GAAQA,EAAK9rB,MAAM,KAAO,CAAC,EAAG,GAAE,GAA5DxH,EAAI,KAAE6gB,EAAM,KACnB,OAAON,EAAAA,EAAAA,UAAS8V,GAAQ9C,IAAAA,OACnBvzB,KAAKA,GACL6gB,OAAOA,EAChB,EAgLM+9B,EAA0B,SAAAoB,GAAU,OAAIA,EAAWn/B,OAA4C,EAArC7iB,KAAK+5C,KAAKiI,EAAWn/B,SAAW,GAAO,EAEjGg+B,EAAgB,SAAArqD,GAAa,MAAK,CACpCsB,aAAa0lC,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CAACtpD,EAAe,SAAU,gBACrF,EAcKsqD,EAAW,SAACtqD,EAAeg7B,GAC7B,IAAMywB,GAAYzkB,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CAACtpD,EAAe,WAAa,GACpF0rD,GAAkBC,EAAAA,EAAAA,qBAGxB,MAAO,CACH1wB,WAHewwB,EAAU3sC,QAAO,SAAC8sC,EAAKC,GAAG,kBAASD,GAAG,CAAE,CAAE3+C,KAAMy+C,EAAgBG,GAAMjvD,MAAOivD,IAAK,GAAG,IAIpG7wB,MAAO+uB,EAAqB0B,EAAWzwB,GAE/C,EAEMuvB,EAAsB,SAAAvqD,GAAa,MAAK,CAC1C27B,wBACIqL,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CAACtpD,EAAe,SAAU,uBAAyB,GACrG,EAEKwqD,EAAoB,SAACxqD,GAAa,IAAE8rD,EAAyB,UAAH,6CAAG,GAAE,MAAM,CACvEzwB,gBAAiBywB,EAAuB3vD,OAClC2vD,GACA9kB,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CAACtpD,EAAe,SAAU,qBAAuB,GACrG,EAEKyqD,EAAqB,SAACzqD,EAAeolB,GACvC,IAAM2mC,GACF/kB,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CAACtpD,EAAe,SAAU,sBAAwB,GAEjG,MAAO,CACHi8B,sBAAuB8vB,EAAe7pD,KAAI,SAAAvC,GAAC,MAAK,CAAEsN,KAAM,IAAF,OAAMtN,GAAK/C,MAAO+C,EAAG,IAC3EylB,WAAY2kC,EAAqBgC,EAAgB3mC,GAEzD,EAEMslC,EAAkB,SAAC1qD,EAAew8B,EAAuB54B,GAC3D,IAAMooD,GACFhlB,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CAACtpD,EAAe,SAAU,wBAA0B,GAE7FisD,EAAQ,IAAIC,OAAO,yBAA0B,KAO7CC,GAA2BC,EAAAA,EAAAA,wBAAuBxoD,GAExD,OAAO,EAAP,CACI44B,sBAAuButB,EAAqBiC,EAAwBxvB,GACpEC,wBAAyBuvB,EAAuB9pD,KAAI,SAAAmX,GAAC,MAAK,CAAEpM,KAAM,GAAF,QAVpDo/C,EAUiEhzC,EATpC,IAAhBgzC,EAAI7qD,MAAMyqD,GAAM,GAAlC1uD,EAAQ,KAAE+uD,EAAI,KACfC,GAAWC,EAAAA,EAAAA,cACV,GAAP,OAAUjvD,EAAQ,YAAIgvD,EAASD,GAAMG,eAO8C7vD,MAAOyc,GAV9E,IAAAgzC,EAC6B,EAAlC9uD,EAAU+uD,EACXC,CAQuF,KACzFJ,EAA2B,CAAC,EAAI,CAAEjwB,kBAAkB,GAEhE,EAEMyuB,EAAgB,SAAA3qD,GAAiB,MAC7B0sD,EAAuD,QAArC,EAAG,eAAeC,KAAK3sD,UAAc,aAAlC,EAAqC,GAEhE,OAAI0sD,IAAuBpD,EAAyBoD,GACzC,CACH7xB,SAAU,EACVC,iBAAiB,GAGlB,CAAC,CACZ,EAEO,CACHnQ,yBAthB6B,SAAA/mB,GAAM,OACnC5K,EAAAA,GAAGqC,QAAQinC,aAAa1+B,GAAQpI,MAAK,SAAAklB,GACjC,IAAMksC,GAAgB5lB,EAAAA,EAAAA,kBAAiBtmB,EAAG,CAAC,kBAG3C,GAFAxI,EACI00C,IAAkBlsC,EAAEmsC,cAAcC,UAAU9jD,MAAK,SAAA2W,GAAQ,MAA4B,YAAxBA,EAASotC,UAAwB,IAC7FH,IAAiB10C,EAAtB,CACA,IAAM0rB,GAAsBopB,EAAAA,EAAAA,+BAC5BvG,GAAiBllD,EAAAA,EAAAA,wBAAuBqC,GACxC0lD,EAA2B,CAAC,EAC5BM,GAAuB3kB,EAAAA,EAAAA,aAAYrB,GACnCljB,EAAEmsC,cAAcC,UAAUzwD,SAAQ,SAAAsjB,GAC9B,IAAMviB,EAAOnB,OAAOC,KAAKuqD,GAAgBz9C,MACrC,SAAAlL,GAAG,OACsE,IAArE2oD,EAAe3oD,GAAKwD,YAAY7B,QAAQkgB,EAAS3f,sBACH,IAAtCymD,EAAe3oD,GAAKmtB,gBACvBw7B,EAAe3oD,GAAKmtB,gBAAkBtL,EAASlD,SAAS,IAGrE,GAAKrf,EAAL,CAEA,IAAKksD,EAAyBlsD,GAAO,CAEjC,IAAM6vD,EACFrD,EACI3tD,OAAOC,KAAK0tD,GAAsB5gD,MAC9B,SAAAlL,GAAG,OAA4D,IAAxD8rD,EAAqB9rD,GAAKsrD,WAAW3pD,QAAQrC,EAAY,KAEtEgsD,WAEN,IAAK6D,EAAU,OAEfA,EAASA,EAASxtD,QAAQrC,IAAS,CAAER,MAAOQ,EAAM6P,KAAMw5C,EAAerpD,GAAMgkB,OAG7EkoC,EAAyBlsD,IAAQ6nC,EAAAA,EAAAA,aAAYwhB,EAAerpD,GAChE,CACA,IAAMmd,EAAS+uC,EAAyBlsD,GAAMmd,QAAU,CAAC,EAGzDA,EAAO8wC,SAAW9wC,EAAO8wC,UAAoC,SAAxB1rC,EAASotC,WAC9CxyC,EAAO2yC,WAAa3yC,EAAOywC,gBAAiBmC,EAAAA,EAAAA,qBAAoBxtC,EAAUpF,EAAO2yC,WACjF3yC,EAAOjZ,YAAcwoD,EAAsBnqC,EAAUpF,EAAOjZ,aAC5DiZ,EAAOkC,UAAW2wC,EAAAA,EAAAA,qBAAoBztC,EAAUpF,EAAOkC,UACvDlC,EAAO8gB,gBAAkB1b,EAAS0b,gBAClC9gB,EAAO+wC,wBAAyB+B,EAAAA,EAAAA,4BAA2B1tC,EAAUpF,EAAO+wC,wBAC5E/wC,EAAO+yC,kBAAoB3tC,EAAS2tC,kBACpC/yC,EAAOgzC,iBAAmB5tC,EAAS4tC,iBACnChzC,EAAOizC,mBAAqB7tC,EAAS6tC,mBAErClE,EAAyBlsD,GAAMmd,OAASA,CA/BvB,CAgCrB,IAGAte,OAAOC,KAAK0tD,GAAsBvtD,SAAQ,SAAAyB,GAAO,QAC7C8rD,EAAqB9rD,GAAKsrD,WAAiD,QAAvC,EAAGQ,EAAqB9rD,GAAKsrD,kBAAU,aAApC,EAAsCniD,QACzE,SAAAgC,GAAI,MAAoB,WAAhB,EAAOA,EAAiB,IAEiB,KAAb,QAApC,EAAA2gD,EAAqB9rD,GAAKsrD,kBAAU,aAApC,EAAsCjtD,gBAC/BytD,EAAqB9rD,EAEpC,GAvDiE,CAwDrE,GAAE,EA0dFwvB,YA9EEA,EAAc,SAACttB,EAAe6tB,EAAa4/B,GAC7C,IAAMhxC,GAAWuqB,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CAACtpD,EAAe,SAAU,cAAgB,CAAC,EACjG0tD,EAAiBjxC,EAASoR,IAAgB,CAAC,EAC3C9C,EAAY2iC,EAAertD,SAAWqtD,EAAe14C,cAAgB,GACrEqW,EAAYqiC,EAAel2B,aAAe,GAChD,MAAO,CACHvM,cAAexO,EAASkxC,OAAS,EACjC5iC,UAAW0iC,GAAwB1iC,EAAUjf,WAC7Cuf,UAAWA,EAAUvf,WAE7B,EAqEIkhB,gBArZoB,SAACwd,EAAMxqC,GAC3B,IAAM4tD,EAAW3xD,OAAOC,KAAKsuC,GAAQ,CAAC,GACjC1rB,QAAO,SAACzP,EAAGmrB,GAAC,kBAASnrB,GAAC,EAAKm7B,EAAKhQ,GAAG4uB,WAAWlnD,KAAI,SAAA2rD,GAAE,OAAIA,EAAGjxD,KAAK,KAAC,GAAG,IACpEqK,QAAO,SAAA7J,GAAI,OAAuD,IAAnDstC,EAAAA,gCAAgCjrC,QAAQrC,EAAY,IACnEgS,MAAK,SAACuP,EAAGC,GAAC,MAAY,eAAND,GAA4B,eAANC,GAAsB,EAAI,CAAC,IAEtE,MAAO,CACH5e,cAAe+pD,EAAqB6D,EAAU5tD,GAEtD,EA6YIktB,kBAldsB,SAAArzB,GACtB,IACIuzB,EAWAvzB,EAXAuzB,qBACAptB,EAUAnG,EAVAmG,cACAg7B,EASAnhC,EATAmhC,MACA/T,EAQAptB,EARAotB,cACA4G,EAOAh0B,EAPAg0B,YACAzI,EAMAvrB,EANAurB,WACAoG,EAKA3xB,EALA2xB,WACAgR,EAIA3iC,EAJA2iC,sBACA54B,EAGA/J,EAHA+J,OACA+4B,EAEA9iC,EAFA8iC,eACAD,EACA7iC,EADA6iC,cAGJ,IAAK18B,EAAe,MAAO,CAAC,EAE5B,IAAI4qC,EAAuB,CAAC,EACc,WAAtCC,EAAAA,EAAAA,oBAAmB7qC,GACnB4qC,EAAuBjO,EACsB,UAAtCkO,EAAAA,EAAAA,oBAAmB7qC,KAC1B4qC,EAAuBlO,GAG3B,IAAMvlB,EAAkB6yC,EAAchqD,GAChC8tD,EAAYxD,EAAStqD,EAAeg7B,GACpC+yB,EAAkB1D,EAAcrqD,GAChCguD,EAAkB/D,EAAcjqD,EAAewrB,GAC/CyiC,EAAiBlgC,EAAaigC,EAAgBxiC,YAC9C0O,EAAc5M,EAAYttB,EAAeotB,EAAsBwd,EAAqBvqC,SACpFkuB,EAAoBC,EAAgBvH,EAAejnB,EAAeiuD,EAAeviC,qBAEjF0C,EAA0BC,EAAqBruB,EAAeiuD,EAAeviC,qBAC7EwiC,EAA6Br/B,EAAkB7uB,EAAeiuD,EAAeviC,qBAC7EyiC,EAA6B5D,EAAoBvqD,GACjDouD,EAAsB5D,EAAkBxqD,EAAe4qC,EAAqBvP,iBAC5EgzB,EAA4B5D,EAAmBzqD,EAAeolB,GAC9DkpC,EAAmB5D,EAAgB1qD,EAAew8B,EAAuB54B,GACzE6qB,EAAkBpB,EAAce,EAAyBP,GACzD0gC,EAAY5D,EAAc3qD,GAEhC,OAAO,EAAP,+BACOmX,GACA22C,GACAC,GACAC,GACAC,GACA/zB,GACA3L,GACAH,GACA8/B,GACAz/B,GACA0/B,GACAC,GACAC,GACAC,GACAC,EAEX,EAyZI1/B,kBAAAA,EACAL,gBAAAA,EACAH,qBAAAA,EACAmgC,qBAzUyB,WAAH,OAASlF,CAAwB,EA0UvD36B,cAhLkB,SAACL,EAAqB7C,EAAaoC,EAAarC,GAClE,IAAIijC,EAAqB,KAEzB,GAAoB,YAAhB5gC,EAA2B,CAC3B,IAAM6gC,GAAe3iC,EAAAA,EAAAA,UAASP,GACxBmjC,GAAgB5iC,EAAAA,EAAAA,UAASN,GAY3BgjC,GAVCG,EAAAA,EAAAA,yBAAwBtgC,IAQrBqgC,EAAcE,SAASH,EAAc,QACpCljC,GAAcmjC,EAAcG,QAAQJ,EAAaziC,QAAQnhB,IAAI,EAAG,QAClC4jD,EAAeC,GAAe5jD,OAAO,eATrD4jD,EAAcI,eAAeL,EAAc,OAC3BA,EAAaziC,QAAQnhB,IAAI,EAAG,OAAS6jD,GAAe5jD,OACnF,aASZ,CAEA,MAAO,CAAE0gB,YAAagjC,EAC1B,EA2JIt/B,cAtJkB,SAClB1D,EACA3F,EACA+H,EACAoB,EACA7C,EACAZ,EACA5F,GAEA,IAAIopC,EAAW,KAEf,GAAoB,YAAhBnhC,EAA2B,CAC3B,IAAIohC,EAAoB,WAQxB,GANIhgC,GAAsBA,EAAmB9yB,QAAoC,OAA1B8yB,EAAmB,KAEtEggC,EAAoBhgC,EAAmBtb,OAAO,GAAG,KAIhD6X,GAAcuT,IAAAA,MAAiB8vB,SAAS1E,EAAY1+B,GAAc,OACnEujC,EAAWC,MACR,CACH,IAAMnjC,EAAeN,EAAa2+B,EAAY3+B,EAAY5F,GAAcmZ,IAAAA,MAClEmwB,EAAa/E,EAAY1+B,EAAa3F,GAE5CkpC,EAAWE,EAAWnkD,OAAO,SAE7B,IAAMokD,EAAkB,CACpB,CACIjkD,KAAM4gB,EAAaG,QAAQnhB,IAAI,EAAG,UAClCK,OAAOikD,EAAAA,EAAAA,SACHtjC,EAAaG,QAAQnhB,IAAI,GAAI,QAC7Bq/C,EAAY1+B,EAAawjC,MAQrC,IAHK9iC,EAAAA,EAAAA,GAAmBgjC,EAAiBD,KACrCF,EAAW9E,EAAaiF,EAAiBD,EAAWjjC,QAASH,EAAaG,UAE1EijC,EAAWH,eAAejjC,IAAiBojC,EAAWG,KAAKvjC,EAAc,UAAY,EAAG,CACxF,IAAMwjC,EAA8C,KAA9BxjC,EAAaiK,IAAI,UAAmBjK,EAAaiK,IAAI,WAAa,GAClFw5B,EACFnjC,KAAaD,EAAAA,EAAAA,GAAmBC,EAAUN,EAAaG,QAAQnhB,IAAI,EAAG,YAC1EkkD,EAAWljC,EAAaG,QAAQnhB,IAAIwkD,GAAiBC,EAAoB,EAAI,EAAG,WAEhFP,EAAW5E,EAAwB4E,GAAUjkD,OAAO,QACxD,CAEiB,UAAbikD,GAAwBljC,EAAa+iC,SAASK,EAAY,SAC1DF,EAAWljC,EAAaG,QAAQujC,SAAS,EAAG,UAAUzkD,OAAO,SAErE,CACJ,CACA,MAAO,CAAE+a,YAAakpC,EAC1B,EA+FI3hC,cApMEA,EAAgB,SAACiB,EAAqBT,GACxC,GAAIS,EAAqB,CACrB,IACMT,GAAeS,EAAoBnyB,OAAS,GACd,IAA/BmyB,EAAoBnyB,QAAiD,MAAjCmyB,EAAoB,GAAG1xB,MAE5D,MAAO,CAAEixB,YAAa,YAE1B,GAAmC,IAA/BS,EAAoBnyB,OACpB,MAAO,CACH0xB,YAAa,KAGzB,CAEA,MAAO,CAAEA,YAAAA,EACb,EAqLII,YAnTgB,SAACjuB,EAAewrB,GAIhC,MAAO,CAAEY,aAHM4a,EAAAA,EAAAA,kBAAiBsiB,EAA0B,CAACtpD,EAAe,YAAc,CAAC,GAC/DsrD,wBAA0B,IAAItiD,MAAK,SAAAshC,GAAM,OAAIA,EAAO1tC,QAAU4uB,CAAU,KAAK,CAAC,GACnGY,SAET,EA+SI+B,aA7QiB,SAAC/B,EAAUZ,EAAY5F,GAAU,MAAM,CACxDA,WAAY4F,EAAa0+B,EAAa99B,EAAU+9B,EAAY3+B,EAAY5F,IAAe,KAC1F,EA4QGmI,aAAAA,EACA0hC,iBA3QkB,6BAAG,WAAO5tB,GAAI,iGAAmB,GAAjB36B,EAAa,EAAH,6BAAG,KAC1C26B,EAAM,CAAF,wCACE,IAAE,UAEPA,KAAQgoB,EAAc,gCACa7wD,EAAAA,GAAGuP,aAAas5B,GAAK,OAE1D,GAFM6tB,EAAyB,EAAH,MAExB1oB,EAAAA,EAAAA,kBAAiB0oB,EAAwB,CAAC,gBAAiB,YAC3D,IAAS9vD,EAAI,EAAGA,EAAI8vD,EAAuB/mD,cAAcC,QAAQzM,OAAQyD,IAErE,GADMiJ,EAAa6mD,EAAuB/mD,cAAcC,QAAQhJ,GAAGiJ,WAE/D,IAASC,EAAI,EAAGA,EAAID,EAAW1M,OAAQ2M,IAEnC,GADMC,EAAUF,EAAWC,GAAGC,QAE1B,IAASsG,EAAI,EAAGA,EAAItG,EAAQ5M,OAAQkT,IAC1BzL,EAASmF,EAAQsG,GAClBw6C,EAAe6F,EAAuBjxB,SAAS91B,iBAChDkhD,EAAe6F,EAAuBjxB,SAAS91B,eAAiB,CAAC,GAErEkhD,EAAe6F,EAAuBjxB,SAAS91B,eAAe/E,EAAOA,QACjEA,EAAO+rD,OAMlC,gCAGE9F,EAAehoB,GAAM36B,IAAW,2CAC1C,gBA9BqB,sCA4QlBmB,gBA5OiB,6BAAG,WAAOw5B,GAAI,iGAAmB,GAAjB36B,EAAa,EAAH,6BAAG,KACzC26B,EAAM,CAAF,wCACE,IAAE,UAGPA,KAAQl5B,EAAa,gCACc3P,EAAAA,GAAGuP,aAAas5B,GAAK,OAE1D,GAFM6tB,EAAyB,EAAH,MAExB1oB,EAAAA,EAAAA,kBAAiB0oB,EAAwB,CAAC,gBAAiB,YAC3D,IAAS9vD,EAAI,EAAGA,EAAI8vD,EAAuB/mD,cAAcC,QAAQzM,OAAQyD,IAErE,GADMiJ,EAAa6mD,EAAuB/mD,cAAcC,QAAQhJ,GAAGiJ,WAE/D,IAASC,EAAI,EAAGA,EAAID,EAAW1M,OAAQ2M,IAEnC,GADMC,EAAUF,EAAWC,GAAGC,QAE1B,IAASsG,EAAI,EAAGA,EAAItG,EAAQ5M,OAAQkT,IAC1BzL,EAASmF,EAAQsG,GAClB1G,EAAc+mD,EAAuBjxB,SAAS91B,iBAC/CA,EAAc+mD,EAAuBjxB,SAAS91B,eAAiB,CAAC,GAEpEA,EAAc+mD,EAAuBjxB,SAAS91B,eAAe/E,EAAOA,QAAU,CAC1EsH,KAAMtH,EAAOqH,MAAMC,KACnBC,MAAOvH,EAAOqH,MAAME,OAO/C,gCAGEjE,EAAayB,EAAck5B,GAAM36B,GAAcyB,EAAck5B,IAAK,2CAC5E,gBAjCoB,sCA6OjB7R,sBAAuB,iBAAO,CAC1BjD,oBAAqB68B,EACrB1xC,oCAAAA,EACH,g3CC9jBT,IAEM03C,EAAkB,CACpBvvD,QAAS,YACT8lC,SAAU,YACVpgB,YAAa,eAGJuiB,EAAwB,SAAA7uC,GACjC,IAAMo2D,GAAc7oB,EAAAA,EAAAA,kBAAiBvtC,EAAU,CAAC,QAAS,UAAW,UACpE,IAAKo2D,EACD,OAAO,KAEX,IAbcC,EAaRznB,EAAWunB,EAAgBC,IAAgBA,EAC3CE,EAAWnhD,SAASohD,kBAAkB3nB,GAAU,GACtD,OAAO0nB,KAfOD,EAeeC,KAf0B,IAArBD,EAAKjO,aAA2C,IAAtBiO,EAAK3N,eAexB9Z,EAAW,IACxD,EAEajB,EAAkB,SAACvtC,EAAOJ,EAAUwtC,GAA4B,UACnEC,EAAWztC,EAASytC,UAAY,CAAC,EACjC10B,EAAS00B,EAASxhB,OAASwhB,EAASK,WAAa,EACjD0oB,EAAoB,IAATz9C,GAAiB00B,EAASK,WAAa,GAClD2oB,EAAQhpB,EAASipB,cACjBl1B,EAAaphC,EAAMohC,WAEnBm1B,EACFv2D,EAAMwH,YAAcxH,EAAMie,UACpB,CAAE7K,MAAM0+C,EAAAA,EAAAA,qBAAoB0E,iBAAkBzzD,MAAO,+BACrDq+B,EAAWjyB,MAAK,SAAAsnD,GAAC,OAAIA,EAAE1zD,QAAU/C,EAAMmhC,KAAK,KAAK,CAAC,EAGtDtmB,EADoC,UAAzB07C,EAAexzD,MACPszD,EAAQhpB,EAASkpB,EAAexzD,OACrD2zD,EAAgB77C,EAAQuyB,EAAwBrqC,MAE/CqqC,EAAwBrqC,OAAS8X,IAAUuyB,EAAwBrqC,QACpE2zD,EAAgB,MAGpB,IAAMC,EAAqB,CACvBvjD,KAAMmjD,EAAenjD,MAAQ,GAC7BrQ,MAAO8X,GAAS,IAGdynB,EAAa+K,EAAS/K,WACtBmL,EAAeJ,EAASI,aACxBmpB,EAAuB,EAAH,KACnBvpB,EAASwpB,kBAAgB,IAC5B90B,YAAa/hC,EAAM+hC,YACnBiM,UAAWX,EAASW,YAGxB,OAAO,EAAP,CACI1L,WAAAA,EACAmL,aAAAA,EACAzlC,GAAIqlC,EAASrlC,IAAM,GACnB2gB,YAAa/oB,EAASf,MACtBi4D,oBAAqBroB,EAAsB7uC,GAC3CojD,WAAYpjD,SAAe,QAAP,EAARA,EAAUf,aAAK,WAAP,EAAR,EAAiB6pC,KAC7BstB,YAAap2D,SAAe,QAAP,EAARA,EAAUf,aAAK,OAAS,QAAT,EAAf,EAAiB6vC,eAAO,WAAhB,EAAR,EAA0BE,MACvC8nB,cAAAA,EACAz2B,YAAaoN,EAASpN,YACtB/2B,QAASmkC,EAASzC,UAAYhrC,EAASf,MAAMqK,QAC7CytD,mBAAAA,EACA9qC,OAAQwhB,EAASxhB,OACjBlT,OAAQA,EAAOjT,SAAQ6f,EAAAA,EAAAA,kBAAiBvlB,EAAM0L,WAC9C0qD,QAAS,GAAF,OAAKA,EAAQ1wD,QAAQ,GAAE,KAC9B2wD,MAAAA,EACAtW,KAAM1S,EAAS0S,MACZ6W,EAEX,EAEa9pB,EAAyB,SAAA9sC,GAClC,IAAM6sC,EAAW,CAAC,EAOlB,OALAzqC,OAAOC,KAAKrC,EAAMyH,aAAajF,SAAQ,SAAAe,GACnC,IAAMwzD,EAAUC,EAAiCh3D,EAAOuD,GACxDspC,EAAStpC,GAAQwzD,CACrB,IAEOlqB,CACX,EA2BMmqB,EAAmC,SAACh3D,EAAOi3D,GAC7C,IAGIh3B,EAHEi3B,EAAkB,CAAC,EACnBC,EAAa,CAAC,EACdC,EAAiB,CAAC,EAGxB,GAA0B,YAAtBp3D,EAAMg0B,YAA2B,CACjC,IAAMpC,GAAcM,EAAAA,EAAAA,UAASlyB,EAAM4xB,aACnCulC,EAAWjrC,aAAcmrC,EAAAA,EAAAA,eAAczlC,EAAYwT,OAAQplC,EAAMisB,YACrE,CAcA,MAZ4B,eAAxBjsB,EAAMmG,eApCgB,SAACnG,EAAOo3D,GAClCA,EAAe7rC,WAAavrB,EAAMurB,WAClC6rC,EAAe3pB,aAAeztC,EAAMqiC,iBAAmBriC,EAAM2iC,2BAAwBjjC,EAErF03D,EAAen3B,YAAcjgC,EAAM6yB,iBAAmB7yB,EAAM2yB,cAAgB,CAAC,OAAIjzB,EAE7EM,EAAM6yB,iBAAmB7yB,EAAM4yB,cAC/BwkC,EAAen3B,YAAYrN,aAAe5yB,EAAM4yB,aAAe,GAG/D5yB,EAAM2yB,eAAiB3yB,EAAM0yB,YAC7B0kC,EAAen3B,YAAYvN,WAAa1yB,EAAM0yB,WAAa,EAEnE,CAwBQ4kC,CAAsBt3D,EAAOo3D,GAGL,gBAAxBp3D,EAAMmG,eAzBiB,SAACnG,EAAOk3D,GACnCA,EAAgBn1B,YAAc/hC,EAAM+hC,YAEpCm1B,EAAgBj3B,YAAcjgC,EAAM6yB,gBAAkB,CAAC,OAAInzB,EAEvDM,EAAM6yB,iBAAmB7yB,EAAM4yB,cAC/BskC,EAAgBj3B,YAAYrN,aAAe5yB,EAAM4yB,aAAe,EAExE,CAkBQ2kC,CAAuBv3D,EAAOk3D,IAG9B7sC,EAAAA,EAAAA,kBAAiBrqB,EAAMmG,gBAAkBnG,EAAM6yB,iBAAmB7yB,EAAM4yB,cACxEqN,EAAc,CAAErN,aAAc5yB,EAAM4yB,aAAe,IAGhD,EAAP,WACIya,SAAU,EACVhuC,UAAW,EACX2c,OAAQyiC,WAAWz+C,EAAMgc,SAAW,EACpCmlB,MAAOnhC,EAAMmhC,MACbh7B,cAAe8wD,EACfvrD,SAAU1L,EAAM0L,SAChB3B,OAAQ/J,EAAM+J,QACV/J,EAAM2xB,YAAc,CAAE3F,YAAYqrC,EAAAA,EAAAA,eAAcr3D,EAAM2xB,WAAY3xB,EAAM+rB,cAClD,aAAtB/rB,EAAMg0B,YACJ,CACItwB,SAAUwlC,SAASlpC,EAAM0D,UACzB0pB,cAAeptB,EAAMotB,eAEzB+pC,IACDn3D,EAAMoxB,cAAgB,IAAsD,IAAjDpxB,EAAMsd,gBAAgB1X,QAAQ,kBACzDwkB,EAAAA,EAAAA,uBAAsB6sC,IAAqB,CACxCzwD,QAASxG,EAAMkxB,WAAalxB,EAAMuW,aAEd,IAAxBvW,EAAMoxB,iBAAwBhH,EAAAA,EAAAA,uBAAsB6sC,IAAqB,CAAE3qB,SAAUtsC,EAAMwxB,YAAW,IAC1GyO,YAAAA,GACGi3B,GACAE,EAEX,2KClKMI,EAAe,SAAC9F,EAAgBz/B,EAAcwlC,GAChD,IAAMC,GAAaxlC,EAAAA,EAAAA,UAASD,GAI5B,OAHIwlC,GACAC,EAAWllC,OAAO,GAAGmlC,OAAO,GAEzBjG,EAAesD,SAAS0C,IAAeA,EAAWtyB,SAAWssB,EAAetsB,MACvF,EAEa9S,EAAqB,WAAH,IAC3BC,EAAW,UAAH,6CAAG,GACXm/B,EAAiB,UAAH,8CAAGx/B,EAAAA,EAAAA,UAASgT,IAAAA,OAC1BjT,EAAe,UAAH,8CAAGC,EAAAA,EAAAA,UAASgT,IAAAA,OACxBuyB,EAAyB,UAAH,8CAAQ,QAE7BD,EAAa9F,EAAgBxsB,IAAAA,MAAkBuyB,IAC/CD,EAAa9F,EAAgBz/B,EAAcwlC,IAC1CllC,EAASjwB,SACLiwB,EAASpjB,MAAK,SAAAyoD,GAAO,OACnBlG,EAAemG,UAAUD,EAAQvmD,KAAMumD,EAAQtmD,MAAOmmD,EAAyB,OAAS,KAAM,KAAK,IACrG,8IClBJK,EAAqB3tD,IAAAA,cAAuC,MAErD4tD,EAAsB,SAAH,GAAuD,IAAjDz3D,EAAQ,EAARA,SAC1B4uB,GAAYzuB,EAAAA,EAAAA,MAAZyuB,QAGR,OAAO,kBAAC4oC,EAAmB90D,SAAQ,CAACD,MAAOmsB,aAAO,EAAPA,EAASva,OAAQrU,EAChE,EAEa8K,EAAiB,WAC1B,IAAMpL,EAAQmK,IAAAA,WAAiB2tD,GAE/B,IAAK93D,EACD,MAAM,IAAIG,MAAM,0DAGpB,OAAOH,CACX,4HCZakrB,EAAuB,SAAA/jB,GAChC,IAAM6wD,EAAc,CAChBn5C,SAAU,GACVxR,WAAY,IAMV4qD,EAHU,IAAI5F,OAChB,+FAEsBS,KAAK3rD,GAM/B,OALkB,OAAd8wD,IACAD,EAAYn5C,SAAWo5C,EAAU,GAAGvxD,cACpCsxD,EAAY3qD,WAAa4qD,EAAU,IAGhCD,CACX,iDCzBA,IAKQE,EAFAC,EACEC,EAJJC,EAAeC,EAAAA,4BAAAA,aAEfpzB,GACEizB,GAAgB,EACdC,EAAU,IAAIC,EAab,CACHE,KAXS,SAAAv4D,GACJm4D,IACDD,EAAel4D,EACfo4D,EAAQhpB,QAAQ8oB,EAAavsD,aAC7BwsD,GAAgB,EAExB,EAMIj8B,IAJQ,WAAH,OAAUi8B,GAAiBD,EAAavsD,YAAcusD,EAAavsD,YAAYymB,aAAU1yB,CAAS,EAKvG84D,YAAa,kBAAOL,EAAgBhpB,QAAQC,QAAQ8oB,EAAavsD,aAAeysD,EAAQK,OAAO,IAIvG3K,EAAO4K,QAAUxzB,21BCxBjB,IA8BIyzB,EAOEN,EAAY,GACd,aAAc,iHACVp3D,KAAKw3D,QAAU,IAAItpB,SAAQ,SAACC,EAASwpB,GACjC,EAAKA,OAASA,EACd,EAAKxpB,QAAUA,CACnB,GACJ,IAGJ0e,EAAO4K,QAAU,CACblhC,SA/Ca,SAACqhC,EAAQC,GACtB,IAAIC,EAAaD,EAIjB,OAHIA,IAAY3wD,MAAM6wD,QAAQF,KAC1BC,EAAa,CAACD,IAEXD,EAAOhzD,QAAQ,cAAc,SAAC+e,EAAGvE,GAAK,OAAK04C,GAAY14C,EAAQ,EAAE,GAC5E,EA0CI44C,cAjCkB,SAACC,GAA8B,IAApBpV,EAAa,UAAH,6CAAG,CAAC,EACrCloC,EAAK7G,SAASkkD,cAAcC,GAWlC,OAVA92D,OAAOC,KAAKyhD,GAAYthD,SAAQ,SAAA22D,GAC5B,IAAMp2D,EAAQ+gD,EAAWqV,GACZ,SAATA,EACAv9C,EAAGw9C,YAAcr2D,EACD,SAATo2D,EACPv9C,EAAGy9C,KAAKt2D,GAER6Y,EAAG09C,aAAaH,EAAMp2D,EAE9B,IACO6Y,CACX,EAqBI29C,cAlBkB,WAGlB,OAFAZ,EACIA,IAAgB5jD,SAASykD,cAAc,uBAAuBC,aAAa,QAAU,IAAItgD,MAAM,KAAK,EAE5G,EAeIk/C,aAAAA","sources":["webpack://@deriv/trader/../stores/src/storeContext.ts","webpack://@deriv/trader/../api/src/APIProvider.tsx","webpack://@deriv/trader/../api/src/useSubscription.ts","webpack://@deriv/trader/../stores/src/useStore.ts","webpack://@deriv/trader/../stores/src/providers/ExchangeRatesProvider.tsx","webpack://@deriv/trader/../stores/src/stores/BaseStore.ts","webpack://@deriv/trader/../stores/src/stores/ExchangeRatesStore.ts","webpack://@deriv/trader/../stores/src/stores/FeatureFlagsStore.ts","webpack://@deriv/trader/../stores/src/storeProvider.tsx","webpack://@deriv/trader/./src/App/Components/Animations/bounce.jsx","webpack://@deriv/trader/./src/App/Components/Animations/slide-in.jsx","webpack://@deriv/trader/./src/App/Components/Elements/ContentLoader/positions-card.jsx","webpack://@deriv/trader/./src/App/Components/Elements/ContentLoader/trade-params.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/helpers/positions-helper.js","webpack://@deriv/trader/./src/_common/components/loading.tsx","webpack://@deriv/trader/./src/App/Components/Elements/chart-loader.jsx","webpack://@deriv/trader/./src/App/Components/Routes/helpers.js","webpack://@deriv/trader/./src/App/Components/Elements/EmptyPortfolioMessage/empty-portfolio-message.jsx","webpack://@deriv/trader/./src/App/Components/Elements/EmptyPortfolioMessage/index.js","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/index.js","webpack://@deriv/trader/./src/App/Components/Elements/market-countdown-timer.jsx","webpack://@deriv/trader/./src/App/Components/Elements/market-is-closed-overlay.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/test.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Helpers/symbol.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/chart-widgets.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/form-layout.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-profit-loss-text.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-profit-loss-tooltip.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-chart-elements.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/toolbar-widgets.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/trade.jsx","webpack://@deriv/trader/./src/Modules/Trading/index.js","webpack://@deriv/trader/./src/App/Constants/routes-config.js","webpack://@deriv/trader/./src/App/Components/Routes/binary-link.jsx","webpack://@deriv/trader/./src/App/Components/Routes/route-with-sub-routes.jsx","webpack://@deriv/trader/./src/App/Components/Routes/binary-routes.jsx","webpack://@deriv/trader/./src/App/Components/Routes/index.js","webpack://@deriv/trader/./src/App/Containers/Routes/routes.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/result-mobile.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-modal-card.jsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/toggle-positions.jsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/toggle-positions-mobile.jsx","webpack://@deriv/trader/./src/App/Containers/populate-header.jsx","webpack://@deriv/trader/./src/trader-providers.tsx","webpack://@deriv/trader/./src/App/Containers/trade-header-extensions.tsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/index.js","webpack://@deriv/trader/./src/App/Containers/trade-footer-extensions.jsx","webpack://@deriv/trader/./src/App/Containers/trade-settings-extensions.tsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/symbol.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Constants/validation-rules.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/purchase.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/accumulator.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/contract-type.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/duration.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/start-date.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/process.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/barrier-utils.ts","webpack://@deriv/trader/./src/Utils/Validator/errors.js","webpack://@deriv/trader/./src/Utils/Validator/validator.js","webpack://@deriv/trader/./src/Utils/Validator/index.js","webpack://@deriv/trader/./src/Stores/base-store.js","webpack://@deriv/trader/./src/Stores/Modules/SmartChart/Helpers/barriers.js","webpack://@deriv/trader/./src/Stores/Modules/SmartChart/chart-barrier-store.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/limit-orders.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/trade-store.js","webpack://@deriv/trader/./src/Stores/Modules/index.js","webpack://@deriv/trader/./src/Stores/index.js","webpack://@deriv/trader/./src/App/init-store.js","webpack://@deriv/trader/./src/App/app.tsx","webpack://@deriv/trader/./src/App/index.tsx","webpack://@deriv/trader/./src/Constants/contract.js","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/ticks-history-counter.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/expanded-ticks-history.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/accumulators-stats-manual-modal.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/accumulators-stats.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/index.js","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit-spot.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-stat.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit-display.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-pointer.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-prediction.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/Digits/digits.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/Digits/index.js","webpack://@deriv/trader/./src/Modules/Page404/Components/Page404.jsx","webpack://@deriv/trader/./src/Modules/Page404/index.js","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/marker.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/icons.js","webpack://@deriv/trader/./src/Modules/SmartChart/Components/all-markers.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/bottom-widgets.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/buy-toast-notification.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/top-widgets.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/index.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/toast-popup.jsx","webpack://@deriv/trader/./src/Modules/Trading/Helpers/contract-type.tsx","webpack://@deriv/trader/./src/Modules/Trading/Helpers/digits.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/contract-type.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/proposal.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/start-date.js","webpack://@deriv/trader/./src/Stores/useTraderStores.tsx","webpack://@deriv/trader/./src/Utils/Helpers/market-underlying.js","webpack://@deriv/trader/./src/_common/base/server_time.js","webpack://@deriv/trader/./src/_common/utility.js"],"sourcesContent":["import { createContext } from 'react';\nimport type { TStores } from '../types';\n\nconst StoreContext = createContext<TStores | null>(null);\n\nexport default StoreContext;\n","import React, { PropsWithChildren } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\nconst queryClient = new QueryClient();\n\nconst APIProvider = ({ children }: PropsWithChildren<unknown>) => (\n    <QueryClientProvider client={queryClient}>\n        {children}\n        <ReactQueryDevtools />\n    </QueryClientProvider>\n);\n\nexport default APIProvider;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useWS } from '@deriv/shared';\nimport type {\n    TSocketAcceptableProps,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\n\nconst useSubscription = <T extends TSocketSubscribableEndpointNames>(name: T) => {\n    const [is_loading, setIsLoading] = useState(false);\n    const [is_subscribed, setSubscribed] = useState(false);\n    const [error, setError] = useState<unknown>();\n    const [data, setData] = useState<TSocketResponseData<T>>();\n    const subscriber = useRef<{ unsubscribe?: VoidFunction }>();\n    const WS = useWS();\n\n    const subscribe = useCallback(\n        (...props: TSocketAcceptableProps<T>) => {\n            const prop = props?.[0];\n            const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n\n            setIsLoading(true);\n            setSubscribed(true);\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const onData = (response: any) => {\n                setData(response);\n                setIsLoading(false);\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const onError = (response: any) => {\n                setError(response.error);\n                setIsLoading(false);\n            };\n\n            try {\n                subscriber.current = WS.subscribe({ [name]: 1, subscribe: 1, ...(payload || {}) }).subscribe(\n                    onData,\n                    onError\n                );\n            } catch (e) {\n                setError(e);\n            }\n        },\n        [WS, name]\n    );\n\n    const unsubscribe = useCallback(() => {\n        subscriber.current?.unsubscribe?.();\n        setSubscribed(false);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            unsubscribe();\n        };\n    }, [unsubscribe]);\n\n    return { subscribe, unsubscribe, is_loading, is_subscribed, error, data };\n};\n\nexport default useSubscription;\n","import { useContext } from 'react';\nimport StoreContext from './storeContext';\n\nconst useStore = () => {\n    const store = useContext(StoreContext);\n\n    if (!store) {\n        throw new Error('useStore must be used within StoreProvider');\n    }\n\n    return store;\n};\n\nexport default useStore;\n","import React, { useEffect } from 'react';\nimport { useSubscription } from '@deriv/api';\nimport merge from 'lodash.merge';\nimport { observer } from 'mobx-react-lite';\nimport useStore from '../useStore';\n\nconst ExchangeRatesProvider = observer(({ children }: React.PropsWithChildren<unknown>) => {\n    const { data, subscribe } = useSubscription('exchange_rates');\n    const {\n        exchange_rates: { update },\n    } = useStore();\n\n    useEffect(() => {\n        subscribe({ payload: { base_currency: 'USD' } });\n    }, [subscribe]);\n\n    useEffect(() => {\n        if (data) {\n            const { exchange_rates } = data;\n\n            if (exchange_rates) update(prev => merge(prev, exchange_rates));\n        }\n    }, [update, data]);\n\n    return <>{children}</>;\n});\n\nexport default ExchangeRatesProvider;\n","import { action, makeObservable, observable } from 'mobx';\nimport { makePersistable, stopPersisting } from 'mobx-persist-store';\n\nexport default class BaseStore<T> {\n    data: T | undefined = undefined;\n\n    constructor(name: string, onHydrationDone?: VoidFunction) {\n        makeObservable(this, {\n            data: observable,\n            update: action.bound,\n            unmount: action.bound,\n        });\n\n        makePersistable(this, { name, properties: ['data'], storage: window.localStorage }).then(() =>\n            onHydrationDone?.()\n        );\n    }\n\n    update(data: NonNullable<T> | ((previous?: T) => NonNullable<T>)) {\n        this.data = data instanceof Function ? data(this.data) : data;\n    }\n\n    unmount() {\n        stopPersisting(this);\n    }\n}\n","import BaseStore from './BaseStore';\nimport type { ExchangeRatesResponse } from '@deriv/api-types';\n\nexport default class ExchangeRatesStore extends BaseStore<ExchangeRatesResponse['exchange_rates']> {\n    constructor() {\n        super('ExchangeRatesStore');\n    }\n}\n","import BaseStore from './BaseStore';\n\nconst FLAGS = {\n    foo: false,\n    bar: false,\n    baz: false,\n    // Add your flag here 🚀\n} satisfies Record<string, boolean>;\n\nexport default class FeatureFlagsStore extends BaseStore<{ [k in keyof typeof FLAGS]: boolean }> {\n    constructor() {\n        super('FeatureFlagsStore', () => {\n            // Set the default values for the first time.\n            if (!this.data) this.update(FLAGS);\n\n            // Update the store data if a new flag was added or removed.\n            if (this.data && Object.keys(this.data).length !== Object.keys(FLAGS).length) {\n                this.update(old => {\n                    const data = FLAGS;\n\n                    Object.keys(FLAGS).forEach(flag => {\n                        // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n                        if (old[flag] !== undefined) data[flag] = old[flag];\n                    });\n\n                    return data;\n                });\n            }\n        });\n    }\n}\n","import React, { useEffect, useMemo } from 'react';\nimport { ExchangeRatesProvider } from './providers';\nimport StoreContext from './storeContext';\nimport { ExchangeRatesStore, FeatureFlagsStore } from './stores';\nimport type { TCoreStores, TStores } from '../types';\n\nconst StoreProvider = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    const memoizedValue: TStores = useMemo(() => {\n        // If the store is mocked for testing purposes, then return the mocked value.\n        if ('is_mock' in store && store.is_mock) return store as unknown as TStores;\n\n        // Otherwise, instantiate store and return it.\n        return {\n            ...store,\n            exchange_rates: new ExchangeRatesStore(),\n            feature_flags: new FeatureFlagsStore(),\n        };\n    }, [store]);\n\n    useEffect(() => {\n        return () => {\n            Object.values(memoizedValue).forEach(value => {\n                if (typeof value === 'object' && 'unmount' in value) value.unmount();\n            });\n        };\n    }, [memoizedValue]);\n\n    return (\n        <StoreContext.Provider value={memoizedValue}>\n            <ExchangeRatesProvider>{children}</ExchangeRatesProvider>\n        </StoreContext.Provider>\n    );\n};\n\nexport default StoreProvider;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { motion } from 'framer-motion';\n\nconst BounceUp = {\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    initial: {\n        y: 35,\n        opacity: 0,\n    },\n    transition: {\n        type: 'spring',\n        stiffness: 500,\n        damping: 15,\n        duration: 0.3,\n    },\n};\n\nconst Bounce = ({ children, className, is_visible, keyname }) =>\n    is_visible ? (\n        <motion.div\n            initial={BounceUp.initial}\n            animate={BounceUp.animate}\n            transition={BounceUp.transition}\n            className={className}\n            key={keyname}\n        >\n            {children}\n        </motion.div>\n    ) : null;\n\nBounce.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    is_visible: PropTypes.bool,\n    keyname: PropTypes.string,\n};\n\nexport { Bounce };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { motion } from 'framer-motion';\n\nconst SlideInFromTop = {\n    initial: {\n        y: -20,\n        opacity: 0,\n    },\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    transition: {\n        duration: 0.2,\n    },\n};\n\nconst SlideInFromBottom = {\n    initial: {\n        y: 20,\n        opacity: 0,\n    },\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    transition: {\n        duration: 0.2,\n    },\n};\n\nconst SlideIn = ({ children, className, keyname, is_visible, type }) => {\n    if (type === 'bottom') {\n        return (\n            <>\n                {is_visible && (\n                    <motion.div\n                        initial={SlideInFromBottom.initial}\n                        animate={SlideInFromBottom.animate}\n                        transition={SlideInFromBottom.transition}\n                        className={className}\n                        key={keyname}\n                    >\n                        {children}\n                    </motion.div>\n                )}\n            </>\n        );\n    }\n    return (\n        <>\n            {is_visible && (\n                <motion.div\n                    initial={SlideInFromTop.initial}\n                    animate={SlideInFromTop.animate}\n                    transition={SlideInFromTop.transition}\n                    className={className}\n                    key={keyname}\n                >\n                    {children}\n                </motion.div>\n            )}\n        </>\n    );\n};\n\nSlideIn.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    is_visible: PropTypes.bool,\n    keyname: PropTypes.string,\n    type: PropTypes.string,\n};\n\nexport { SlideIn };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PositionsCardLoader = ({ speed }) => (\n    <ContentLoader\n        height={173}\n        width={218}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <rect x='43' y='19' rx='0' ry='0' width='56' height='8' />\n        <rect x='147' y='19' rx='0' ry='0' width='56' height='8' />\n        <rect x='12' y='50' rx='0' ry='0' width='44' height='8' />\n        <rect x='13' y='68' rx='0' ry='0' width='192' height='8' />\n        <rect x='5' y='89' rx='0' ry='0' width='208' height='1' />\n        <rect x='12' y='104' rx='0' ry='0' width='44' height='8' />\n        <rect x='12' y='9' rx='0' ry='0' width='24' height='24' />\n        <rect x='116' y='11' rx='0' ry='0' width='24' height='24' />\n        <rect x='12' y='118' rx='0' ry='0' width='88' height='8' />\n        <rect x='116' y='104' rx='0' ry='0' width='44' height='8' />\n        <rect x='116' y='118' rx='0' ry='0' width='88' height='8' />\n        <rect x='12' y='139' rx='0' ry='0' width='44' height='8' />\n        <rect x='12' y='153' rx='0' ry='0' width='88' height='8' />\n        <rect x='116' y='139' rx='0' ry='0' width='44' height='8' />\n        <rect x='116' y='153' rx='0' ry='0' width='88' height='8' />\n    </ContentLoader>\n);\n\nPositionsCardLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { PositionsCardLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DesktopWrapper, MobileWrapper } from '@deriv/components';\n\nconst TradeParamsLoader = ({ speed }) => (\n    <>\n        <MobileWrapper>\n            <ContentLoader\n                height={214}\n                width={344}\n                speed={speed}\n                backgroundColor={'var(--general-section-1)'}\n                foregroundColor={'var(--general-hover)'}\n                viewBox='0 0 344 176'\n            >\n                <rect x='148' y='24' rx='3' ry='3' width='40' height='4' />\n                <rect x='8' y='40' rx='4' ry='4' width='328' height='40' />\n                <rect x='8' y='88' rx='4' ry='4' width='328' height='40' />\n                <rect x='8' y='136' rx='4' ry='4' width='160' height='70' />\n                <rect x='176' y='136' rx='4' ry='4' width='160' height='70' />\n            </ContentLoader>\n        </MobileWrapper>\n        <DesktopWrapper>\n            <ContentLoader\n                height={548}\n                width={240}\n                speed={speed}\n                backgroundColor={'var(--general-section-1)'}\n                foregroundColor={'var(--general-hover)'}\n            >\n                <rect x='0' y='0' rx='4' ry='4' width='240' height='76' />\n                <rect x='0' y='84' rx='4' ry='4' width='240' height='132' />\n                <rect x='0' y='224' rx='4' ry='4' width='240' height='120' />\n                <rect x='0' y='352' rx='4' ry='4' width='240' height='194' />\n            </ContentLoader>\n        </DesktopWrapper>\n    </>\n);\n\nTradeParamsLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { TradeParamsLoader };\n","import { localize } from '@deriv/translations';\nimport { isHighLow, getContractTypesConfig, isCallPut, isVanillaContract } from '@deriv/shared';\n\nexport const addCommaToNumber = (num, decimal_places) => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(/\\d(?=(?:\\d{3})+(?:\\.|$))/g, (m, i) => (p <= 0 || i < p ? `${m},` : m));\n};\n\nexport const getBarrierLabel = contract_info => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    if (isVanillaContract(contract_info.contract_type)) {\n        return localize('Strike');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = contract_info => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type];\n    }\n    return addCommaToNumber(contract_info.barrier);\n};\n\nexport const isDigitType = contract_type => /digit/.test(contract_type.toLowerCase());\n\nconst digitTypeMap = contract_info => ({\n    DIGITDIFF: localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITEVEN: localize('Even'),\n    DIGITMATCH: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITODD: localize('Odd'),\n    DIGITOVER: localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITUNDER: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n\nexport const filterByContractType = ({ contract_type, shortcode }, trade_contract_type) => {\n    const is_call_put = isCallPut(trade_contract_type);\n    const is_high_low = isHighLow({ shortcode });\n    const is_vanilla = isVanillaContract(contract_type);\n    const trade_types = is_call_put\n        ? ['CALL', 'CALLE', 'PUT', 'PUTE']\n        : getContractTypesConfig()[trade_contract_type]?.trade_types;\n    const match = trade_types?.includes(contract_type);\n    if (trade_contract_type === 'high_low') return is_high_low;\n    return match && (is_vanilla || !is_high_low);\n};\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype LoadingProps = {\n    className?: string;\n    data_testid?: string;\n    is_invisible?: boolean;\n    theme?: string;\n    id?: string;\n};\n\nconst Loading = ({ className, data_testid, is_invisible, theme, id }: LoadingProps) => (\n    <div\n        id={id}\n        data-testid={data_testid}\n        className={classNames('barspinner', `barspinner--${theme || 'dark'}`, { invisible: is_invisible }, className)}\n    >\n        {Array.from(new Array(5)).map((_x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Loading from '_common/components/loading';\n\nconst ChartLoader = ({ is_dark, is_visible }) =>\n    is_visible ? (\n        <div className='chart-container__loader'>\n            <Loading theme={is_dark ? 'dark' : 'light'} data_testid='dt_barspinner' />\n        </div>\n    ) : null;\n\nChartLoader.propTypes = {\n    is_dark: PropTypes.bool,\n    is_visible: PropTypes.bool,\n};\n\nexport default ChartLoader;\n","import { matchPath } from 'react-router';\nimport { routes } from '@deriv/shared';\n\nexport const normalizePath = path => (/^\\//.test(path) ? path : `/${path || ''}`); // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some(route_info => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) => !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) =>\n    Object.keys(params).reduce((p, name) => p.replace(`:${name}`, params[name]), route_path);\n\nexport const getContractPath = contract_id => getPath(routes.contract, { contract_id });\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst EmptyPortfolioMessage = ({ error }) => (\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            {error ? (\n                <Text color='disabled' size='xs'>\n                    {error}\n                </Text>\n            ) : (\n                <React.Fragment>\n                    <Icon icon='IcPortfolio' className='portfolio-empty__icon' size={96} color='disabled' />\n                    <Text align='center' className='portfolio-empty__text' color='disabled' size='xs'>\n                        {localize(\n                            'You have no open positions for this asset. To view other open positions, click Go to Reports'\n                        )}\n                    </Text>\n                </React.Fragment>\n            )}\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import EmptyPortfolioMessage from './empty-portfolio-message.jsx';\n\nexport default EmptyPortfolioMessage;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon, DataList, Text, PositionsDrawerCard } from '@deriv/components';\nimport { routes, useNewRowTransition, TURBOS } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport EmptyPortfolioMessage from '../EmptyPortfolioMessage';\nimport { filterByContractType } from './helpers';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst PositionsDrawerCardItem = ({\n    row: portfolio_position,\n    measure,\n    onHoverPosition,\n    symbol,\n    is_new_row,\n    ...props\n}) => {\n    const { in_prop } = useNewRowTransition(is_new_row);\n\n    React.useEffect(() => {\n        measure();\n    }, [portfolio_position.contract_info.is_sold, measure]);\n\n    return (\n        <CSSTransition\n            in={in_prop}\n            timeout={150}\n            classNames={{\n                appear: 'dc-contract-card__wrapper--enter',\n                enter: 'dc-contract-card__wrapper--enter',\n                enterDone: 'dc-contract-card__wrapper--enter-done',\n                exit: 'dc-contract-card__wrapper--exit',\n            }}\n            onEntered={measure}\n            unmountOnExit\n        >\n            <div className='dc-contract-card__wrapper'>\n                <PositionsDrawerCard\n                    {...portfolio_position}\n                    {...props}\n                    onMouseEnter={() => {\n                        onHoverPosition(true, portfolio_position, symbol);\n                    }}\n                    onMouseLeave={() => {\n                        onHoverPosition(false, portfolio_position, symbol);\n                    }}\n                    onFooterEntered={measure}\n                    should_show_transition={is_new_row}\n                />\n            </div>\n        </CSSTransition>\n    );\n};\n\nconst PositionsDrawer = observer(({ ...props }) => {\n    const { symbol, contract_type: trade_contract_type } = useTraderStore();\n    const { client, common, contract_trade, portfolio, ui } = useStore();\n    const { currency } = client;\n    const { server_time } = common;\n    const { getContractById } = contract_trade;\n    const {\n        all_positions,\n        error,\n        onHoverPosition,\n        onMount,\n        onClickCancel,\n        onClickSell,\n        removePositionById: onClickRemove,\n    } = portfolio;\n    const {\n        is_mobile,\n        is_positions_drawer_on,\n        togglePositionsDrawer: toggleDrawer,\n        addToast,\n        current_focus,\n        removeToast,\n        setCurrentFocus,\n        should_show_cancellation_warning,\n        toggleCancellationWarning,\n        toggleUnsupportedContractModal,\n    } = ui;\n    const drawer_ref = React.useRef(null);\n    const list_ref = React.useRef(null);\n    const scrollbar_ref = React.useRef(null);\n\n    React.useEffect(() => {\n        onMount();\n    }, [onMount]);\n\n    React.useEffect(() => {\n        list_ref?.current?.scrollTo(0);\n        scrollbar_ref?.current?.scrollToTop();\n    }, [symbol, trade_contract_type]);\n\n    const positions = all_positions.filter(\n        p =>\n            p.contract_info &&\n            symbol === p.contract_info.underlying &&\n            (trade_contract_type.includes('turbos')\n                ? filterByContractType(p.contract_info, TURBOS.SHORT) ||\n                  filterByContractType(p.contract_info, TURBOS.LONG)\n                : filterByContractType(p.contract_info, trade_contract_type))\n    );\n    const body_content = (\n        <DataList\n            data_source={positions}\n            rowRenderer={args => (\n                <PositionsDrawerCardItem\n                    onHoverPosition={onHoverPosition}\n                    symbol={symbol}\n                    currency={currency}\n                    addToast={addToast}\n                    onClickCancel={onClickCancel}\n                    onClickSell={onClickSell}\n                    onClickRemove={onClickRemove}\n                    server_time={server_time}\n                    getContractById={getContractById}\n                    is_mobile={is_mobile}\n                    current_focus={current_focus}\n                    removeToast={removeToast}\n                    setCurrentFocus={setCurrentFocus}\n                    should_show_cancellation_warning={should_show_cancellation_warning}\n                    toggleCancellationWarning={toggleCancellationWarning}\n                    toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                    {...args}\n                    {...props}\n                />\n            )}\n            keyMapper={row => row.id}\n            row_gap={8}\n        />\n    );\n\n    return (\n        <React.Fragment>\n            <div\n                className={classNames('positions-drawer__bg', {\n                    'positions-drawer__bg--open': is_positions_drawer_on,\n                })}\n            />\n            <div\n                id='dt_positions_drawer'\n                className={classNames('positions-drawer', {\n                    'positions-drawer--open': is_positions_drawer_on,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <Text color='prominent' weight='bold' size='xs'>\n                        {localize('Recent positions')}\n                    </Text>\n                    <div\n                        id='dt_positions_drawer_close_icon'\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <Icon icon='IcMinusBold' />\n                    </div>\n                </div>\n                <div className='positions-drawer__body' ref={drawer_ref}>\n                    {positions.length === 0 || error ? <EmptyPortfolioMessage error={error} /> : body_content}\n                </div>\n                <div className='positions-drawer__footer'>\n                    <NavLink\n                        id='dt_positions_drawer_report_button'\n                        className='dc-btn dc-btn--secondary dc-btn__large'\n                        to={routes.reports}\n                    >\n                        <Text size='xs' weight='bold'>\n                            {localize('Go to Reports')}\n                        </Text>\n                    </NavLink>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n});\n\nPositionsDrawer.propTypes = {\n    children: PropTypes.node,\n    onChangeContractUpdate: PropTypes.func,\n    onClickContractUpdate: PropTypes.func,\n};\n\nexport default PositionsDrawer;\n","import PositionsDrawer from './positions-drawer.jsx';\n\nexport default PositionsDrawer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Text } from '@deriv/components';\nimport { useIsMounted, WS, convertTimeFormat, isMarketClosed } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\n// check market in coming 7 days\nconst days_to_check_before_exit = 7;\n\nconst getTradingTimes = async target_time => {\n    const data = await WS.tradingTimes(target_time);\n    if (data.error) {\n        return { api_initial_load_error: data.error.message };\n    }\n    return data;\n};\n// eslint-disable-next-line consistent-return\nconst getSymbol = (target_symbol, trading_times) => {\n    let symbol;\n    const { markets } = trading_times;\n    for (let i = 0; i < markets.length; i++) {\n        const { submarkets } = markets[i];\n        for (let j = 0; j < submarkets.length; j++) {\n            const { symbols } = submarkets[j];\n            symbol = symbols.find(item => item.symbol === target_symbol);\n            if (symbol !== undefined) return symbol;\n        }\n    }\n};\n\nconst calculateTimeLeft = remaining_time_to_open => {\n    const difference = remaining_time_to_open - Date.now();\n    return difference > 0\n        ? {\n              days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n              hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n              minutes: Math.floor((difference / 1000 / 60) % 60),\n              seconds: Math.floor((difference / 1000) % 60),\n          }\n        : {};\n};\n\nconst MarketCountdownTimer = observer(({ is_main_page, setIsTimerLoading, onMarketOpen, symbol }) => {\n    const { active_symbols } = useTraderStore();\n    const isMounted = useIsMounted();\n    const [when_market_opens, setWhenMarketOpens] = React.useState({});\n    const [time_left, setTimeLeft] = React.useState(calculateTimeLeft(when_market_opens?.remaining_time_to_open));\n    const [is_loading, setLoading] = React.useState(true);\n\n    React.useEffect(() => {\n        if (!is_main_page || (is_main_page && isMarketClosed(active_symbols, symbol))) {\n            setLoading(true);\n            // eslint-disable-next-line consistent-return\n            const whenMarketOpens = async (days_offset, target_symbol) => {\n                // days_offset is 0 for today, 1 for tomorrow, etc.\n                if (days_offset > days_to_check_before_exit) return {};\n                let remaining_time_to_open;\n                const target_date = moment(new Date()).add(days_offset, 'days');\n                const api_response = await getTradingTimes(target_date.format('YYYY-MM-DD'));\n                if (!api_response.api_initial_load_error) {\n                    const { times } = getSymbol(target_symbol, api_response.trading_times);\n                    const { open, close } = times;\n                    const is_closed_all_day = open?.length === 1 && open[0] === '--' && close[0] === '--';\n                    if (is_closed_all_day) {\n                        // check tomorrow trading times\n                        return whenMarketOpens(days_offset + 1, target_symbol);\n                    }\n                    const date_str = target_date.toISOString().substring(0, 11);\n                    const getUTCDate = hour => new Date(`${date_str}${hour}Z`);\n                    for (let i = 0; i < open?.length; i++) {\n                        const diff = +getUTCDate(open[i]) - Date.now();\n                        if (diff > 0) {\n                            remaining_time_to_open = +getUTCDate(open[i]);\n                            if (isMounted() && target_symbol === symbol) {\n                                return setWhenMarketOpens({\n                                    days_offset,\n                                    opening_time: open[i],\n                                    remaining_time_to_open,\n                                });\n                            }\n                        }\n                    }\n                    whenMarketOpens(days_offset + 1, target_symbol);\n                }\n            };\n\n            whenMarketOpens(0, symbol);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [symbol]);\n\n    React.useEffect(() => {\n        let timer;\n        if (when_market_opens?.remaining_time_to_open) {\n            timer = setTimeout(() => {\n                setTimeLeft(calculateTimeLeft(when_market_opens.remaining_time_to_open));\n                if (new Date(when_market_opens.remaining_time_to_open) - +new Date() < 1000) {\n                    setLoading(true);\n                    if (is_main_page) onMarketOpen(false);\n                }\n            }, 1000);\n        }\n        return () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n        };\n    }, [time_left, when_market_opens, onMarketOpen, is_main_page]);\n\n    React.useEffect(() => {\n        if (!is_loading) setIsTimerLoading(false);\n    }, [is_loading, setIsTimerLoading]);\n\n    let timer_components = '';\n\n    if (Object.keys(time_left).length) {\n        const hours = (time_left.days * 24 + time_left.hours).toString().padStart(2, '0');\n        const minutes = time_left.minutes.toString().padStart(2, '0');\n        const seconds = time_left.seconds.toString().padStart(2, '0');\n        timer_components = `${hours}:${minutes}:${seconds}`;\n    }\n\n    if (!(when_market_opens && timer_components)) return null;\n\n    const { opening_time, days_offset } = when_market_opens;\n    let opening_time_banner = null;\n    if (opening_time) {\n        const formatted_opening_time = convertTimeFormat(opening_time);\n        const target_date = moment(new Date()).add(days_offset, 'days');\n        const opening_date = target_date.format('DD MMM YYYY');\n        const opening_day = target_date.format('dddd');\n        opening_time_banner = (\n            <Text\n                align='center'\n                as='p'\n                className='market-is-closed-overlay__open-date'\n                line_height='m'\n                color='prominent'\n                size={is_main_page ? 's' : 'xs'}\n                weight='bold'\n            >\n                <Localize\n                    i18n_default_text='{{formatted_opening_time}} (GMT) on {{opening_day}},<0></0> {{opening_date}}.'\n                    components={[<div key={0} />]}\n                    values={{\n                        formatted_opening_time,\n                        opening_day,\n                        opening_date,\n                    }}\n                />\n            </Text>\n        );\n    }\n\n    if (is_loading) setLoading(false);\n\n    return (\n        <React.Fragment>\n            <Text\n                as='p'\n                className={classNames('market-is-closed-overlay__open-at', {\n                    'market-is-closed-overlay__open-at--main-page': is_main_page,\n                })}\n                line_height='x'\n                size={is_main_page ? 'xs' : 'xxs'}\n            >\n                <Localize i18n_default_text='It will reopen at' />\n            </Text>\n            {opening_time_banner}\n            <Text\n                align='center'\n                as='p'\n                className={classNames('market-is-closed-overlay__come-back', {\n                    'market-is-closed-overlay__come-back--main-page': is_main_page,\n                })}\n                line_height='x'\n                size={is_main_page ? 'xs' : 'xxs'}\n            >\n                <Localize i18n_default_text='Please come back in' />\n            </Text>\n            <Text\n                as='p'\n                className={classNames('market-is-closed-overlay__timer', {\n                    'market-is-closed-overlay__timer--main-page': is_main_page,\n                })}\n                line_height='m'\n                color='prominent'\n                size={is_main_page ? 's' : 'xs'}\n                weight='bold'\n            >\n                {timer_components}\n            </Text>\n            <div className='market-is-closed-overlay__separator' />\n        </React.Fragment>\n    );\n});\n\nMarketCountdownTimer.propTypes = {\n    is_main_page: PropTypes.bool,\n    setIsTimerLoading: PropTypes.func,\n    onMarketOpen: PropTypes.func,\n    symbol: PropTypes.string.isRequired,\n};\n\nexport default MarketCountdownTimer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport MarketCountdownTimer from './market-countdown-timer.jsx';\n\nconst MarketIsClosedOverlay = ({ is_eu, is_synthetics_trading_market_available, onClick, onMarketOpen, symbol }) => {\n    const [is_timer_loading, setIsTimerLoading] = React.useState(true);\n\n    let message = (\n        <Localize i18n_default_text='In the meantime, try our synthetic indices. They simulate real-market volatility and are open 24/7.' />\n    );\n    let btn_lbl = localize('Try Synthetic Indices');\n\n    if (!is_synthetics_trading_market_available) {\n        message = null;\n        btn_lbl = localize('See open markets');\n    }\n\n    return (\n        <div\n            className={classNames('market-is-closed-overlay', {\n                'market-is-closed-overlay--loading': is_timer_loading,\n            })}\n        >\n            <Text as='p' className='market-is-closed-overlay__main-heading' color='prominent' weight='bold'>\n                <Localize i18n_default_text='This market is closed' />\n            </Text>\n            <MarketCountdownTimer\n                is_main_page\n                setIsTimerLoading={setIsTimerLoading}\n                onMarketOpen={onMarketOpen}\n                symbol={symbol}\n            />\n            {message && (\n                <Text align='center' as='p' className='market-is-closed-overlay__main-message' size='xs'>\n                    {message}\n                </Text>\n            )}\n            {(!is_eu || (is_eu && is_synthetics_trading_market_available)) && (\n                <Button className='market-is-closed-overlay__button' onClick={onClick} text={btn_lbl} primary />\n            )}\n        </div>\n    );\n};\n\nMarketIsClosedOverlay.propTypes = {\n    is_eu: PropTypes.bool,\n    is_synthetics_trading_market_available: PropTypes.bool,\n    onClick: PropTypes.func,\n    onMarketOpen: PropTypes.func,\n    symbol: PropTypes.string,\n};\n\nexport default MarketIsClosedOverlay;\n","import { toJS } from 'mobx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst styles = {\n    container: {\n        fontSize: '10px',\n        lineHeight: '15px',\n        position: 'absolute',\n        zIndex: 1,\n        background: 'rgba(0, 0, 0, 0.8)',\n        color: '#ccc',\n        padding: '10px',\n        marginTop: '-10px',\n        display: 'none',\n        overflowY: 'auto',\n        height: '100%',\n        width: '100%',\n    },\n    prop_name: {\n        color: 'yellowgreen',\n    },\n    tabs: { display: 'flex', textAlign: 'center', marginBottom: '10px' },\n    tab: {\n        fontSize: '18px',\n        border: '1px solid grey',\n        width: '100%',\n        padding: '10px',\n    },\n};\n\nconst Test = observer(() => {\n    const stores = useStore();\n    const trade_store = useTraderStore();\n    const test_stores = {\n        trade: Object.entries(trade_store),\n        client: Object.entries(stores.client),\n        ui: Object.entries(stores.ui),\n        portfolio: Object.entries(stores.portfolio),\n    };\n\n    const [is_visible, setIsVisible] = React.useState(false);\n    const [store, setStore] = React.useState('trade');\n\n    React.useEffect(() => {\n        document.addEventListener('keyup', stateVisibility, false);\n        return () => {\n            document.removeEventListener('keyup', stateVisibility);\n        };\n    });\n\n    const stateVisibility = e => {\n        // Ctrl + s\n        if (e.ctrlKey && e.keyCode === 83) setIsVisible(!is_visible);\n    };\n\n    const renderStoreContent = ([k, v]) => {\n        return (\n            k !== 'root_store' &&\n            typeof v !== 'function' && (\n                <div key={k}>\n                    <span style={styles.prop_name}>{k}:</span>{' '}\n                    {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}\n                </div>\n            )\n        );\n    };\n\n    const { container, tab, tabs } = styles;\n\n    return (\n        <code id='state_info' style={{ ...container, display: is_visible ? 'block' : 'none' }}>\n            <div style={tabs}>\n                {Object.keys(test_stores).map(storage => (\n                    <p\n                        key={storage}\n                        onClick={() => setStore(storage)}\n                        style={{ ...tab, fontWeight: storage === store && 'bold' }}\n                    >\n                        {storage}\n                    </p>\n                ))}\n            </div>\n            {test_stores[store].sort().map(renderStoreContent)}\n        </code>\n    );\n});\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default Test;\n","export const symbolChange = onSymbolChange =>\n    onSymbolChange &&\n    (symbol => {\n        onSymbolChange({\n            target: {\n                name: 'symbol',\n                value: symbol,\n            },\n        });\n    });\n","import React from 'react';\nimport { isMobile } from '@deriv/shared';\nimport Digits from 'Modules/Contract/Components/Digits';\nimport AccumulatorsStats from 'Modules/Contract/Components/AccumulatorsStats';\nimport BottomWidgets from '../../SmartChart/Components/bottom-widgets.jsx';\nimport TopWidgets from '../../SmartChart/Components/top-widgets.jsx';\nimport { symbolChange } from '../../SmartChart/Helpers/symbol';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const DigitsWidget = observer(({ digits, tick }) => {\n    const { contract_trade } = useStore();\n    const {\n        onChange: onDigitChange,\n        symbol: underlying,\n        contract_type: trade_type,\n        last_digit: selected_digit,\n    } = useTraderStore();\n    const { last_contract } = contract_trade;\n    const { contract_info = {}, digits_info = {}, display_status, is_digit_contract, is_ended } = last_contract;\n    return (\n        <Digits\n            contract_info={contract_info}\n            digits_array={digits}\n            digits_info={digits_info}\n            display_status={display_status}\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            onDigitChange={onDigitChange}\n            is_trade_page\n            tick={tick}\n            trade_type={trade_type}\n            selected_digit={selected_digit}\n            underlying={underlying}\n        />\n    );\n});\n\n// Chart widgets passed into SmartCharts\nexport const ChartTopWidgets = observer(({ charts_ref, is_digits_widget_active, open_market, open }) => {\n    const { ui } = useStore();\n    const { onChange: onSymbolChange } = useTraderStore();\n    const { is_dark_mode_on } = ui;\n    const theme = is_dark_mode_on ? 'dark' : 'light';\n    let yAxiswidth;\n    if (charts_ref && charts_ref.chart) {\n        yAxiswidth = charts_ref.chart.yAxiswidth;\n    }\n    return (\n        <TopWidgets\n            open_market={open_market}\n            open={open}\n            is_mobile={isMobile()}\n            is_digits_widget_active={is_digits_widget_active}\n            onSymbolChange={symbolChange(onSymbolChange)}\n            theme={theme}\n            y_axis_width={yAxiswidth}\n        />\n    );\n});\n\nexport const ChartBottomWidgets = ({ digits, tick, show_accumulators_stats }) => (\n    <BottomWidgets\n        Widget={show_accumulators_stats ? <AccumulatorsStats /> : <DigitsWidget digits={digits} tick={tick} />}\n    />\n);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Loadable from 'react-loadable';\nimport { isMobile } from '@deriv/shared';\n\nconst Screen = Loadable({\n    loader: () =>\n        isMobile()\n            ? import(/* webpackChunkName: \"screen-small\" */ './screen-small.jsx')\n            : import(/* webpackChunkName: \"screen-large\" */ './screen-large.jsx'),\n    loading: () => null,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst FormLayout = ({ is_market_closed, is_trade_enabled }) => (\n    <React.Fragment>\n        <Screen is_trade_enabled={is_trade_enabled} is_market_closed={isMobile() ? undefined : is_market_closed} />\n    </React.Fragment>\n);\n\nFormLayout.propTypes = {\n    is_market_closed: PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default React.memo(FormLayout);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { formatMoney, getCurrencyDisplayCode } from '@deriv/shared';\nimport { FastMarker } from 'Modules/SmartChart';\nimport classNames from 'classnames';\n\nconst ACTIONS = {\n    INC: 'increment',\n    DEC: 'decrement',\n    ADD10: 'add10',\n};\n\nconst AccumulatorsProfitLossText = ({\n    current_spot,\n    current_spot_time,\n    currency,\n    className = 'sc-accumulators-profit-loss-text',\n    profit,\n}) => {\n    const [is_fading_in, setIsFadingIn] = React.useState(false);\n    const [is_sliding, setIsSliding] = React.useState(false);\n    const formatted_profit = formatMoney(currency, profit, true, 0, 0);\n    const prev_profit = React.useRef(formatted_profit);\n    const prev_profit_tenth = +prev_profit.current?.split('.')[1][0];\n    const [current_profit_tenth, setCurrentProfitTenth] = React.useState(prev_profit_tenth);\n    const profit_tenth_ref = React.useRef();\n    const interval_id_ref = React.useRef(null);\n    const fading_in_timeout_id = React.useRef();\n    const sliding_timeout_id = React.useRef();\n    const profit_portions_array = formatted_profit.split('.');\n    const profit_whole_number = profit_portions_array[0];\n    const profit_tenth = +profit_portions_array[1][0];\n    const profit_hundredths = +profit_portions_array[1].slice(1);\n    const won = profit >= 0;\n    const sign = profit > 0 ? '+' : '';\n\n    const runThroughTenthDigit = (action, interval_ms, start, end) => {\n        clearInterval(interval_id_ref.current);\n        const interval_id = setInterval(() => {\n            if (action === ACTIONS.INC && profit_tenth_ref.current < end) {\n                profit_tenth_ref.current = (profit_tenth_ref.current + 1) % 10;\n            } else if (action === ACTIONS.DEC && profit_tenth_ref.current > end) {\n                profit_tenth_ref.current = Math.abs(profit_tenth_ref.current - 1) % 10;\n            } else if (action === ACTIONS.ADD10 && profit_tenth_ref.current < start + 10) {\n                profit_tenth_ref.current += 1;\n            } else if (\n                action === ACTIONS.ADD10 ? profit_tenth_ref.current === start + 10 : profit_tenth_ref.current === end\n            ) {\n                clearInterval(interval_id);\n            }\n            setCurrentProfitTenth(profit_tenth_ref.current % 10);\n        }, interval_ms);\n        interval_id_ref.current = interval_id;\n    };\n\n    React.useEffect(() => {\n        if (profit) {\n            setIsFadingIn(true);\n            setIsSliding(true);\n            fading_in_timeout_id.current = setTimeout(() => {\n                setIsFadingIn(false);\n            }, 600);\n            sliding_timeout_id.current = setTimeout(() => {\n                setIsSliding(false);\n            }, 300);\n        }\n        if (profit !== 0) {\n            const updateTenth = (start, end) => {\n                const delta = Math.abs(end - start);\n                profit_tenth_ref.current = start;\n                if (start < end) {\n                    runThroughTenthDigit(ACTIONS.INC, 300 / delta, start, end);\n                } else if (start > end) {\n                    runThroughTenthDigit(ACTIONS.DEC, 300 / delta, start, end);\n                } else {\n                    runThroughTenthDigit(ACTIONS.ADD10, 30, start, end);\n                }\n            };\n            updateTenth(prev_profit_tenth, profit_tenth);\n        }\n        return () => {\n            clearTimeout(fading_in_timeout_id.current);\n            clearTimeout(sliding_timeout_id.current);\n            clearInterval(interval_id_ref.current);\n        };\n    }, [profit, prev_profit_tenth, profit_tenth]);\n\n    const onRef = ref => {\n        if (ref) {\n            if (!current_spot) {\n                // this call will hide the marker:\n                ref.setPosition({ epoch: null, price: null });\n            }\n            ref.setPosition({\n                epoch: +current_spot_time,\n                price: +current_spot,\n            });\n        }\n    };\n\n    return (\n        <FastMarker markerRef={onRef} className={classNames(className, won ? 'won' : 'lost')}>\n            <Text\n                weight='bold'\n                size='m'\n                color={won ? 'profit-success' : 'loss-danger'}\n                className={classNames(`${className}__profit`, {\n                    [`${className}__profit--fading-in`]: is_fading_in,\n                })}\n                data-testid='dt_accumulator_profit_text'\n            >\n                {`${sign}${profit_whole_number}.`}\n                <div className={is_sliding ? `${className}__sliding-tenth` : ''}>{current_profit_tenth}</div>\n                {`${profit_hundredths}`}\n            </Text>\n            <Text size='xxs' as='div' className={`${className}__currency`}>\n                {getCurrencyDisplayCode(currency)}\n            </Text>\n        </FastMarker>\n    );\n};\n\nAccumulatorsProfitLossText.propTypes = {\n    className: PropTypes.string,\n    currency: PropTypes.string,\n    current_spot: PropTypes.number,\n    current_spot_time: PropTypes.number,\n    profit: PropTypes.number,\n};\n\nexport default React.memo(AccumulatorsProfitLossText);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { Money, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { FastMarker } from 'Modules/SmartChart';\nimport AccumulatorsProfitLossText from './accumulators-profit-loss-text';\n\nconst AccumulatorsProfitLossTooltip = ({\n    alignment = 'right',\n    current_spot,\n    current_spot_time,\n    className = 'sc-accumulators-profit-loss-tooltip',\n    currency,\n    exit_tick,\n    exit_tick_time,\n    high_barrier,\n    is_sold,\n    profit,\n    should_show_profit_text,\n}) => {\n    const [is_tooltip_open, setIsTooltipOpen] = React.useState(false);\n    const won = profit >= 0;\n    const tooltip_timeout = React.useRef(null);\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(tooltip_timeout.current);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (is_sold) {\n            setIsTooltipOpen(true);\n            tooltip_timeout.current = onCloseDelayed(3000);\n        }\n    }, [is_sold]);\n\n    const onCloseDelayed = duration =>\n        setTimeout(() => {\n            setIsTooltipOpen(false);\n        }, duration);\n\n    const onHoverOrTapHandler = () => {\n        clearTimeout(tooltip_timeout.current);\n        tooltip_timeout.current = onCloseDelayed(1500);\n    };\n\n    const opposite_arrow_position = React.useMemo(() => {\n        const horizontal = ['left', 'right'];\n        return horizontal.includes(alignment)\n            ? horizontal.find(el => el !== alignment)\n            : ['top', 'bottom'].find(el => el !== alignment);\n    }, [alignment]);\n\n    const onRef = ref => {\n        if (ref) {\n            if (!exit_tick) {\n                // this call will hide the marker:\n                ref.setPosition({ epoch: null, price: null });\n            }\n            ref.setPosition({\n                epoch: +exit_tick_time,\n                price: +exit_tick,\n            });\n        }\n    };\n\n    if (typeof profit !== 'number') return null;\n    if (!is_sold && current_spot_time && high_barrier && should_show_profit_text)\n        return (\n            <AccumulatorsProfitLossText\n                currency={currency}\n                current_spot={current_spot}\n                current_spot_time={current_spot_time}\n                profit={profit}\n            />\n        );\n    return is_sold && exit_tick_time ? (\n        <FastMarker markerRef={onRef} className={classNames(className, won ? 'won' : 'lost')}>\n            <span\n                className={`${className}__spot-circle`}\n                onMouseEnter={() => setIsTooltipOpen(true)}\n                onMouseLeave={onHoverOrTapHandler}\n                onTouchStart={() => setIsTooltipOpen(true)}\n                onTouchEnd={onHoverOrTapHandler}\n                data-testid='dt_accumulator_tooltip_spot'\n            />\n            <CSSTransition\n                in={is_tooltip_open}\n                timeout={{\n                    exit: 500,\n                }}\n                unmountOnExit\n                classNames={`${className}__content`}\n            >\n                <div className={classNames(`${className}__content`, `arrow-${opposite_arrow_position}`)}>\n                    <Text size='xxs' className={`${className}__text`}>\n                        {localize('Total profit/loss:')}\n                    </Text>\n                    <Text size='xs' className={`${className}__text`} weight='bold'>\n                        <Money amount={profit} currency={currency} has_sign show_currency />\n                    </Text>\n                </div>\n            </CSSTransition>\n        </FastMarker>\n    ) : null;\n};\n\nAccumulatorsProfitLossTooltip.propTypes = {\n    alignment: PropTypes.string,\n    current_spot: PropTypes.number,\n    current_spot_time: PropTypes.number,\n    className: PropTypes.string,\n    currency: PropTypes.string,\n    exit_tick: PropTypes.number,\n    exit_tick_time: PropTypes.number,\n    high_barrier: PropTypes.string,\n    is_sold: PropTypes.number,\n    profit: PropTypes.number,\n    should_show_profit_text: PropTypes.bool,\n};\n\nexport default React.memo(AccumulatorsProfitLossTooltip);\n","import { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers/positions-helper.js';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport AccumulatorsProfitLossTooltip from './accumulators-profit-loss-tooltip.jsx';\nimport ChartMarker from './marker.jsx';\n\nconst AccumulatorsChartElements = ({\n    all_positions,\n    current_spot,\n    current_spot_time,\n    has_crossed_accu_barriers,\n    should_show_profit_text,\n    symbol,\n}) => {\n    const accumulators_positions = all_positions.filter(\n        ({ contract_info }) =>\n            contract_info && symbol === contract_info.underlying && filterByContractType(contract_info, 'accumulator')\n    );\n\n    return (\n        <React.Fragment>\n            {!!accumulators_positions.length &&\n                accumulators_positions.map(({ contract_info }) => (\n                    <AccumulatorsProfitLossTooltip\n                        key={contract_info.contract_id}\n                        {...contract_info}\n                        should_show_profit_text={should_show_profit_text}\n                    />\n                ))}\n            {has_crossed_accu_barriers && !!current_spot_time && (\n                <ChartMarker\n                    marker_config={{\n                        ContentComponent: 'div',\n                        x: current_spot_time,\n                        y: current_spot,\n                    }}\n                    marker_content_props={{ className: 'sc-current-spot-emphasizer' }}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nAccumulatorsChartElements.propTypes = {\n    all_positions: PropTypes.array,\n    current_spot: PropTypes.number,\n    current_spot_time: PropTypes.number,\n    has_crossed_accu_barriers: PropTypes.bool,\n    should_show_profit_text: PropTypes.bool,\n    symbol: PropTypes.string,\n};\n\nexport default React.memo(AccumulatorsChartElements);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { ChartMode, DrawTools, Share, StudyLegend, Views, ToolbarWidget } from 'Modules/SmartChart';\n\nconst ToolbarWidgets = ({ position, updateChartType, updateGranularity }) => {\n    return (\n        <ToolbarWidget position={position || isMobile() ? 'bottom' : null}>\n            <ChartMode portalNodeId='modal_root' onChartType={updateChartType} onGranularity={updateGranularity} />\n            {isDesktop() && <StudyLegend portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />}\n            {isDesktop() && <Views portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />}\n            {isDesktop() && <DrawTools portalNodeId='modal_root' />}\n            {isDesktop() && <Share portalNodeId='modal_root' />}\n        </ToolbarWidget>\n    );\n};\n\nToolbarWidgets.propTypes = {\n    position: PropTypes.string,\n    updateChartType: PropTypes.func,\n    updateGranularity: PropTypes.func,\n};\n\nexport default React.memo(ToolbarWidgets);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { DesktopWrapper, Div100vhContainer, MobileWrapper, SwipeableWrapper } from '@deriv/components';\nimport { getDecimalPlaces, isDesktop, isMobile } from '@deriv/shared';\nimport ChartLoader from 'App/Components/Elements/chart-loader.jsx';\nimport PositionsDrawer from 'App/Components/Elements/PositionsDrawer';\nimport MarketIsClosedOverlay from 'App/Components/Elements/market-is-closed-overlay.jsx';\nimport Test from './test.jsx';\nimport { ChartBottomWidgets, ChartTopWidgets, DigitsWidget } from './chart-widgets.jsx';\nimport FormLayout from '../Components/Form/form-layout.jsx';\nimport AllMarkers from '../../SmartChart/Components/all-markers.jsx';\nimport AccumulatorsChartElements from '../../SmartChart/Components/Markers/accumulators-chart-elements.jsx';\nimport ToolbarWidgets from '../../SmartChart/Components/toolbar-widgets.jsx';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst BottomWidgetsMobile = ({ tick, digits, setTick, setDigits }) => {\n    React.useEffect(() => {\n        setTick(tick);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tick]);\n\n    React.useEffect(() => {\n        setDigits(digits);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [digits]);\n\n    // render nothing for bottom widgets on chart in mobile\n    return null;\n};\n\nconst Trade = observer(() => {\n    const { client, common, ui } = useStore();\n    const {\n        form_components,\n        getFirstOpenMarket,\n        should_show_active_symbols_loading,\n        is_chart_loading,\n        is_market_closed,\n        is_trade_enabled,\n        onChange,\n        onMount,\n        onUnmount,\n        prepareTradeStore,\n        setContractTypes,\n        setMobileDigitView,\n        show_digits_stats,\n        is_accumulator,\n        symbol,\n        is_synthetics_available,\n        is_synthetics_trading_market_available,\n        is_turbos,\n        is_vanilla,\n    } = useTraderStore();\n    const {\n        notification_messages_ui: NotificationMessages,\n        has_only_forward_starting_contracts: is_market_unavailable_visible,\n        should_show_multipliers_onboarding,\n        is_dark_mode_on: is_dark_theme,\n    } = ui;\n    const { is_eu } = client;\n    const { network_status } = common;\n\n    const [digits, setDigits] = React.useState([]);\n    const [tick, setTick] = React.useState({});\n    const [try_synthetic_indices, setTrySyntheticIndices] = React.useState(false);\n    const [try_open_markets, setTryOpenMarkets] = React.useState(false);\n    const [category, setCategory] = React.useState(null);\n    const [subcategory, setSubcategory] = React.useState(null);\n    const [is_digits_widget_active, setIsDigitsWidgetActive] = React.useState(false);\n    const charts_ref = React.useRef();\n\n    const open_market = React.useMemo(() => {\n        if (try_synthetic_indices) {\n            return { category: 'synthetics' };\n        } else if (try_open_markets && category) {\n            return { category, subcategory };\n        }\n        return null;\n    }, [try_synthetic_indices, try_open_markets, category, subcategory]);\n\n    React.useEffect(() => {\n        onMount();\n        if (!is_synthetics_available) {\n            const setMarket = async () => {\n                const markets_to_search = ['forex', 'indices', 'commodities']; // none-synthetic\n                const { category: market_cat, subcategory: market_subcat } =\n                    (await getFirstOpenMarket(markets_to_search)) ?? {};\n                if (market_cat) {\n                    setCategory(market_cat);\n                    setSubcategory(market_subcat);\n                }\n            };\n\n            setMarket();\n        }\n        return () => onUnmount();\n    }, [onMount, onUnmount, getFirstOpenMarket, is_synthetics_available]);\n\n    React.useEffect(() => {\n        if (isMobile()) {\n            setDigits([]);\n        }\n        setTrySyntheticIndices(false);\n        setTryOpenMarkets(false);\n    }, [symbol, setDigits, setTrySyntheticIndices, is_synthetics_available]);\n\n    React.useEffect(() => {\n        const selectMultipliers = async () => {\n            await setContractTypes();\n\n            onChange({ target: { name: 'contract_type', value: 'multiplier' } });\n        };\n        if (should_show_multipliers_onboarding && !is_chart_loading && (is_synthetics_available || !is_market_closed)) {\n            selectMultipliers();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [should_show_multipliers_onboarding, is_chart_loading]);\n\n    const bottomWidgets = React.useCallback(({ digits: d, tick: t }) => {\n        return <BottomWidgetsMobile digits={d} tick={t} setTick={setTick} setDigits={setDigits} />;\n    }, []);\n\n    const onChangeSwipeableIndex = index => {\n        setMobileDigitView(index === 0);\n        setIsDigitsWidgetActive(index === 0);\n    };\n\n    const onTryOtherMarkets = async () => {\n        if (!is_synthetics_available) {\n            setTryOpenMarkets(true);\n            setTimeout(() => setTryOpenMarkets(false));\n        } else {\n            setTrySyntheticIndices(true);\n            setTimeout(() => setTrySyntheticIndices(false));\n        }\n    };\n\n    const topWidgets = React.useCallback(\n        ({ ...params }) => (\n            <ChartTopWidgets\n                open_market={open_market}\n                open={try_synthetic_indices || try_open_markets}\n                charts_ref={charts_ref}\n                is_digits_widget_active={is_digits_widget_active}\n                {...params}\n            />\n        ),\n        [open_market, try_synthetic_indices, try_open_markets, charts_ref, is_digits_widget_active]\n    );\n\n    const form_wrapper_class = isMobile() ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n    const chart_height_offset = React.useMemo(() => {\n        if (is_accumulator) return '295px';\n        if (is_turbos) return '300px';\n        return '259px';\n    }, [is_turbos, is_accumulator]);\n\n    return (\n        <div\n            id='trade_container'\n            className={classNames('trade-container', {\n                [`trade-container--${is_accumulator ? 'accumulators' : 'turbos'}`]: is_accumulator || is_turbos,\n            })}\n        >\n            <DesktopWrapper>\n                <PositionsDrawer />\n            </DesktopWrapper>\n            {/* Div100vhContainer is workaround for browsers on devices\n                    with toolbars covering screen height,\n                    using css vh is not returning correct screen height */}\n            <Div100vhContainer\n                id='chart_container'\n                className='chart-container'\n                is_disabled={isDesktop()}\n                height_offset={chart_height_offset}\n            >\n                <NotificationMessages />\n                <React.Suspense\n                    fallback={<ChartLoader is_dark={is_dark_theme} is_visible={!symbol || is_chart_loading} />}\n                >\n                    <DesktopWrapper>\n                        <div className={classNames('chart-container__wrapper', { 'vanilla-trade-chart': is_vanilla })}>\n                            <ChartLoader is_visible={is_chart_loading || should_show_active_symbols_loading} />\n                            <ChartTrade\n                                topWidgets={topWidgets}\n                                charts_ref={charts_ref}\n                                is_accumulator={is_accumulator}\n                            />\n                        </div>\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <ChartLoader is_visible={is_chart_loading || should_show_active_symbols_loading} />\n                        <SwipeableWrapper\n                            onChange={onChangeSwipeableIndex}\n                            is_disabled={\n                                !show_digits_stats ||\n                                !is_trade_enabled ||\n                                form_components.length === 0 ||\n                                is_chart_loading ||\n                                should_show_active_symbols_loading\n                            }\n                            className={classNames({ 'vanilla-trade-chart': is_vanilla })}\n                        >\n                            {show_digits_stats && <DigitsWidget digits={digits} tick={tick} />}\n                            <ChartTrade\n                                topWidgets={topWidgets}\n                                charts_ref={charts_ref}\n                                bottomWidgets={show_digits_stats ? bottomWidgets : undefined}\n                                is_accumulator={is_accumulator}\n                            />\n                        </SwipeableWrapper>\n                    </MobileWrapper>\n                </React.Suspense>\n\n                {/* Remove Test component for debugging below for production release */}\n                <Test />\n            </Div100vhContainer>\n            <div className={form_wrapper_class}>\n                {is_market_closed && !is_market_unavailable_visible && (\n                    <MarketIsClosedOverlay\n                        is_eu={is_eu}\n                        is_synthetics_trading_market_available={is_synthetics_trading_market_available}\n                        {...(is_eu && category)}\n                        onClick={onTryOtherMarkets}\n                        onMarketOpen={prepareTradeStore}\n                        symbol={symbol}\n                    />\n                )}\n                <FormLayout\n                    is_market_closed={is_market_closed}\n                    is_trade_enabled={\n                        is_trade_enabled && form_components.length > 0 && network_status.class === 'online'\n                    }\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default Trade;\n\n// CHART (ChartTrade)--------------------------------------------------------\n\n/* eslint-disable */\nimport { SmartChart } from 'Modules/SmartChart';\n\nconst SmartChartWithRef = React.forwardRef((props, ref) => <SmartChart innerRef={ref} {...props} />);\n\n// ChartMarkers --------------------------\nconst ChartMarkers = observer(config => {\n    const { ui, client, contract_trade } = useStore();\n    const { markers_array, granularity } = contract_trade;\n    const { is_dark_mode_on: is_dark_theme } = ui;\n    const { currency } = client;\n    return markers_array.map(marker => {\n        const Marker = AllMarkers[marker.type];\n        return (\n            <Marker\n                key={marker.key}\n                is_dark_theme={is_dark_theme}\n                granularity={granularity}\n                currency={currency}\n                config={config}\n                {...marker}\n            />\n        );\n    });\n});\n\nconst ChartTrade = observer(props => {\n    const { is_accumulator, end_epoch, topWidgets, charts_ref } = props;\n    const { client, ui, common, contract_trade, portfolio } = useStore();\n    const {\n        accumulator_barriers_data,\n        accumulator_contract_barriers_data,\n        chart_type,\n        granularity,\n        has_crossed_accu_barriers,\n        updateGranularity,\n        updateChartType,\n    } = contract_trade;\n    const { all_positions } = portfolio;\n    const { is_chart_layout_default, is_chart_countdown_visible, is_dark_mode_on } = ui;\n    const { is_socket_opened, current_language } = common;\n    const { currency, should_show_eu_content } = client;\n    const {\n        chartStateChange,\n        is_trade_enabled,\n        main_barrier_flattened: main_barrier,\n        barriers_flattened: extra_barriers,\n        show_digits_stats,\n        symbol,\n        exportLayout,\n        setChartStatus,\n        chart_layout,\n        wsForget,\n        wsForgetStream,\n        wsSendRequest,\n        wsSubscribe,\n        active_symbols,\n        has_alternative_source,\n        refToAddTick,\n    } = useTraderStore();\n\n    const settings = {\n        assetInformation: false, // ui.is_chart_asset_info_visible,\n        countdown: is_chart_countdown_visible,\n        isHighestLowestMarkerEnabled: false, // TODO: Pending UI,\n        language: current_language.toLowerCase(),\n        position: is_chart_layout_default ? 'bottom' : 'left',\n        theme: is_dark_mode_on ? 'dark' : 'light',\n    };\n\n    const { current_spot, current_spot_time } = accumulator_barriers_data || {};\n\n    const bottomWidgets = React.useCallback(\n        ({ digits, tick }) => (\n            <ChartBottomWidgets digits={digits} tick={tick} show_accumulators_stats={is_accumulator} is_trade_page />\n        ),\n        [is_accumulator]\n    );\n\n    const getMarketsOrder = active_symbols => {\n        const synthetic_index = 'synthetic_index';\n\n        const has_synthetic_index = !!active_symbols.find(s => s.market === synthetic_index);\n        return active_symbols\n            .slice()\n            .sort((a, b) => (a.display_name < b.display_name ? -1 : 1))\n            .map(s => s.market)\n            .reduce(\n                (arr, market) => {\n                    if (arr.indexOf(market) === -1) arr.push(market);\n                    return arr;\n                },\n                has_synthetic_index ? [synthetic_index] : []\n            );\n    };\n\n    const barriers = main_barrier ? [main_barrier, ...extra_barriers] : extra_barriers;\n\n    // max ticks to display for mobile view for tick chart\n    const max_ticks = granularity === 0 ? 8 : 24;\n\n    if (!symbol || active_symbols.length === 0) return null;\n\n    return (\n        <SmartChartWithRef\n            ref={charts_ref}\n            barriers={barriers}\n            bottomWidgets={(is_accumulator || show_digits_stats) && isDesktop() ? bottomWidgets : props.bottomWidgets}\n            crosshair={isMobile() ? 0 : undefined}\n            crosshairTooltipLeftAllow={560}\n            showLastDigitStats={isDesktop() ? show_digits_stats : false}\n            chartControlsWidgets={null}\n            chartStatusListener={v => setChartStatus(!v)}\n            chartType={chart_type}\n            initialData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            chartData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            feedCall={{\n                activeSymbols: false,\n            }}\n            enabledNavigationWidget={isDesktop()}\n            enabledChartFooter={false}\n            id='trade'\n            isMobile={isMobile()}\n            maxTick={isMobile() ? max_ticks : undefined}\n            granularity={show_digits_stats || is_accumulator ? 0 : granularity}\n            requestAPI={wsSendRequest}\n            requestForget={wsForget}\n            requestForgetStream={wsForgetStream}\n            requestSubscribe={wsSubscribe}\n            settings={settings}\n            should_show_eu_content={should_show_eu_content}\n            allowTickChartTypeOnly={show_digits_stats || is_accumulator}\n            stateChangeListener={chartStateChange}\n            symbol={symbol}\n            topWidgets={is_trade_enabled ? topWidgets : null}\n            isConnectionOpened={is_socket_opened}\n            clearChart={false}\n            toolbarWidget={() => (\n                <ToolbarWidgets updateChartType={updateChartType} updateGranularity={updateGranularity} />\n            )}\n            importedLayout={chart_layout}\n            onExportLayout={exportLayout}\n            shouldFetchTradingTimes={!end_epoch}\n            hasAlternativeSource={has_alternative_source}\n            refToAddTick={refToAddTick}\n            getMarketsOrder={getMarketsOrder}\n            yAxisMargin={{\n                top: isMobile() ? 76 : 106,\n            }}\n        >\n            <ChartMarkers />\n            {is_accumulator && (\n                <AccumulatorsChartElements\n                    all_positions={all_positions}\n                    current_spot={current_spot}\n                    current_spot_time={current_spot_time}\n                    has_crossed_accu_barriers={has_crossed_accu_barriers}\n                    should_show_profit_text={\n                        !!accumulator_contract_barriers_data.accumulators_high_barrier &&\n                        getDecimalPlaces(currency) <= 2\n                    }\n                    symbol={symbol}\n                />\n            )}\n        </SmartChartWithRef>\n    );\n});\n","import Trade from './Containers/trade.jsx';\n\nexport default Trade;\n","import React from 'react';\nimport { routes, moduleLoader } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport Trade from 'Modules/Trading';\n\nconst ContractDetails = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"contract\" */ 'Modules/Contract'))\n);\n\n// Error Routes\nconst Page404 = React.lazy(() => moduleLoader(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404')));\n\n// Order matters\nconst initRoutesConfig = () => {\n    return [\n        {\n            path: routes.contract,\n            component: ContractDetails,\n            // Don't use `Localize` component since native html tag like `option` cannot render them\n            getTitle: () => localize('Contract Details'),\n            is_authenticated: true,\n        },\n        { path: routes.trade, component: Trade, getTitle: () => localize('Trader'), exact: true },\n    ];\n};\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default = { component: Page404, getTitle: () => localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n        routesConfig.push(route_default);\n    }\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { findRouteByPath, normalizePath } from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return to ? (\n        <NavLink\n            data-testid='dt_binary_link'\n            to={path}\n            activeClassName={active_class || 'active'}\n            exact={route.exact}\n            {...props}\n        >\n            {children}\n        </NavLink>\n    ) : (\n        <a data-testid='dt_binary_link' {...props}>\n            {children}\n        </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n    to: PropTypes.string,\n};\n\nexport default BinaryLink;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n    alternateLinkTagChange,\n    canonicalLinkTagChange,\n    redirectToLogin,\n    removeBranchName,\n    routes,\n    isEmptyObject,\n    default_title,\n} from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport Page404 from 'Modules/Page404';\n\nconst RouteWithSubRoutes = route => {\n    const validateRoute = pathname => {\n        if (pathname === '') return true;\n        if (route.path?.includes(':')) {\n            const static_pathname = pathname.substring(0, pathname.lastIndexOf('/') + 1);\n            return static_pathname === route.path.substring(0, route.path.indexOf(':'));\n        }\n        return route.path === pathname || !!(route.routes && route.routes.find(r => pathname === r.path));\n    };\n\n    const renderFactory = props => {\n        let result = null;\n\n        const pathname = removeBranchName(location.pathname).replace(/\\/$/, '');\n        const is_valid_route = validateRoute(pathname);\n\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else if (is_valid_route && route.is_authenticated && !route.is_logging_in && !route.is_logged_in) {\n            redirectToLogin(route.is_logged_in, getLanguage());\n        } else {\n            const default_subroute = route.routes ? route.routes.find(r => r.default) : {};\n            const has_default_subroute = !isEmptyObject(default_subroute);\n\n            result = (\n                <React.Fragment>\n                    {has_default_subroute && pathname === route.path && <Redirect to={default_subroute.path} />}\n                    {is_valid_route ? <route.component {...props} routes={route.routes} /> : <Page404 />}\n                </React.Fragment>\n            );\n        }\n\n        // eslint-disable-next-line no-nested-ternary\n        const title = route.getTitle?.() || '';\n        document.title = `${title} | ${default_title}`;\n\n        alternateLinkTagChange();\n        canonicalLinkTagChange();\n\n        return result;\n    };\n\n    return <Route exact={route.exact} path={route.path} render={renderFactory} />;\n};\n\nexport default RouteWithSubRoutes;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = props => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {getRoutesConfig().map((route, idx) => (\n                <RouteWithSubRoutes key={idx} {...route} {...props} />\n            ))}\n        </Switch>\n    </React.Suspense>\n);\n\nexport default BinaryRoutes;\n","import BinaryLink from './binary-link.jsx';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\nimport BinaryRoutes from './binary-routes.jsx';\n\nexport * from './helpers';\nexport { BinaryLink, RouteWithSubRoutes };\nexport default BinaryRoutes;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter, matchPath } from 'react-router';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport BinaryRoutes from 'App/Components/Routes';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst checkRoutingMatch = (route_list, path) => {\n    return route_list.some(route => !!matchPath(path, { path: route, exact: true }));\n};\n\nconst tradePageMountingMiddleware = ({ path_from, path_to, action, match_patterns, callback }) => {\n    if (action === 'PUSH' || action === 'POP') {\n        // We use matchPath here because on route, there will be extra\n        // parameters which matchPath takes into account.\n        const has_match = match_patterns.some(\n            pattern => checkRoutingMatch(pattern.from, path_from) && checkRoutingMatch(pattern.to, path_to)\n        );\n\n        callback(has_match);\n    }\n\n    return true;\n};\n\nconst Error = Loadable({\n    loader: () => import(/* webpackChunkName: \"error-component\" */ 'App/Components/Elements/Errors'),\n    loading: UILoader,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst Routes = observer(({ history, passthrough }) => {\n    const { client, common, ui, portfolio } = useStore();\n    const { setSkipPrePostLifecycle: setTradeMountingPolicy } = useTraderStore();\n    const { error, has_error } = common;\n    const { onUnmount: onUnmountPortfolio } = portfolio;\n    const { is_logged_in, is_logging_in } = client;\n    const { setPromptHandler } = ui;\n\n    React.useEffect(() => {\n        if (setPromptHandler) {\n            setPromptHandler(true, (route_to, action) => {\n                // clears portfolio when we navigate to mt5 dashboard\n                tradePageMountingMiddleware({\n                    path_from: history.location.pathname,\n                    path_to: route_to.pathname,\n                    match_patterns: [\n                        {\n                            from: getRoutesConfig()\n                                .flatMap(route => {\n                                    if (route.routes) {\n                                        return route.routes.map(subroute => subroute.path);\n                                    }\n                                    return [route.path];\n                                })\n                                .filter(path => path && path !== routes.mt5 && path !== routes.dxtrade),\n                            to: [routes.mt5, routes.dxtrade],\n                        },\n                    ],\n                    action,\n                    callback: has_match => {\n                        if (has_match) {\n                            onUnmountPortfolio();\n                        }\n                    },\n                });\n\n                return tradePageMountingMiddleware({\n                    path_from: history.location.pathname,\n                    path_to: route_to.pathname,\n                    match_patterns: [\n                        { from: [routes.contract], to: [routes.trade] },\n                        { from: [routes.trade], to: [routes.contract] },\n                    ],\n                    action,\n                    callback: setTradeMountingPolicy,\n                });\n            });\n        }\n\n        return () => {\n            setPromptHandler?.(false);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        return () => onUnmountPortfolio();\n    }, [onUnmountPortfolio]);\n\n    if (has_error) return <Error {...error} />;\n\n    return <BinaryRoutes is_logged_in={is_logged_in} is_logging_in={is_logging_in} passthrough={passthrough} />;\n});\n\nRoutes.propTypes = {\n    history: PropTypes.object,\n    passthrough: PropTypes.object,\n};\n\nexport default withRouter(Routes);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst ResultMobile = ({ is_visible, result }) => {\n    const is_contract_won = result === 'won';\n    return (\n        <React.Fragment>\n            <CSSTransition\n                in={is_visible}\n                timeout={250}\n                classNames={{\n                    enter: 'positions-modal-card__result--enter',\n                    enterDone: 'positions-modal-card__result--enter-done',\n                    exit: 'positions-modal-card__result--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-modal-card__caption-wrapper' data-testid='result_mobile'>\n                    <span\n                        className={classNames('positions-modal-card__caption', {\n                            'positions-modal-card__caption--won': is_contract_won,\n                            'positions-modal-card__caption--lost': !is_contract_won,\n                        })}\n                    >\n                        {is_contract_won ? (\n                            <React.Fragment>\n                                {localize('Won')}\n                                <Icon icon='IcCheckmarkCircle' className='positions-modal-card__icon' color='green' />\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                {localize('Lost')}\n                                <Icon icon='IcCrossCircle' className='positions-modal-card__icon' color='red' />\n                            </React.Fragment>\n                        )}\n                    </span>\n                </div>\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nResultMobile.propTypes = {\n    is_visible: PropTypes.bool,\n    result: PropTypes.string,\n};\n\nexport default ResultMobile;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { ContractCard, CurrencyBadge, Icon, Money, ProgressSliderMobile, Text } from '@deriv/components';\nimport {\n    getContractPath,\n    isAccumulatorContract,\n    isCryptoContract,\n    isMultiplierContract,\n    isTurbosContract,\n    isHighLow,\n    isCryptocurrency,\n    hasContractEntered,\n    isOpen,\n    getSymbolDisplayName,\n    getEndTime,\n    getTotalProfit,\n    isVanillaContract,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport { getContractTypeDisplay, getCardLabels } from 'Constants/contract';\nimport { getMarketInformation } from 'Utils/Helpers/market-underlying';\nimport ResultMobile from './result-mobile.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst PositionsModalCard = observer(\n    ({\n        className,\n        contract_info,\n        contract_update,\n        currency,\n        current_tick,\n        id,\n        indicative,\n        is_loading,\n        is_sell_requested,\n        is_unsupported,\n        onClickSell,\n        profit_loss,\n        onClickCancel,\n        result,\n        sell_price,\n        status,\n        togglePositions,\n        toggleUnsupportedContractModal,\n        type,\n    }) => {\n        const { ui, common, contract_trade } = useStore();\n        const { active_symbols } = useTraderStore();\n        const { server_time } = common;\n        const { getContractById } = contract_trade;\n        const {\n            addToast,\n            current_focus,\n            is_mobile,\n            removeToast,\n            setCurrentFocus,\n            should_show_cancellation_warning,\n            toggleCancellationWarning,\n        } = ui;\n        const loader_el = (\n            <div className='positions-modal-card__content-loader'>\n                <PositionsCardLoader speed={2} />\n            </div>\n        );\n        const is_multiplier = isMultiplierContract(contract_info.contract_type);\n        const is_accumulator = isAccumulatorContract(contract_info.contract_type);\n        const is_turbos = isTurbosContract(contract_info.contract_type);\n        const is_vanilla = isVanillaContract(contract_info.contract_type);\n        const is_crypto = isCryptoContract(contract_info.underlying);\n        const has_progress_slider = !is_multiplier || (is_crypto && is_multiplier);\n        const has_ended = !!getEndTime(contract_info);\n        const fallback_result = profit_loss >= 0 ? 'won' : 'lost';\n        const total_profit = getTotalProfit(contract_info);\n\n        const should_show_sell = hasContractEntered(contract_info) && isOpen(contract_info);\n        const display_name = getSymbolDisplayName(\n            active_symbols,\n            getMarketInformation(contract_info.shortcode).underlying\n        );\n\n        const contract_options_el = (\n            <React.Fragment>\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-header')}>\n                    <div className='positions-modal-card__underlying-name'>\n                        <Icon\n                            icon={contract_info.underlying ? `IcUnderlying${contract_info.underlying}` : 'IcUnknown'}\n                            size={34}\n                        />\n                        <Text size='xxs' className='positions-modal-card__symbol' weight='bold'>\n                            {contract_info.display_name}\n                        </Text>\n                    </div>\n                    <div className='positions-modal-card__type'>\n                        <ContractCard.ContractTypeCell\n                            getContractTypeDisplay={getContractTypeDisplay}\n                            is_high_low={isHighLow({ shortcode: contract_info.shortcode })}\n                            multiplier={contract_info.multiplier}\n                            type={type}\n                        />\n                    </div>\n                    <CSSTransition\n                        in={should_show_sell}\n                        timeout={250}\n                        classNames={{\n                            enter: 'positions-modal-card__sell-button--enter',\n                            enterDone: 'positions-modal-card__sell-button--enter-done',\n                            exit: 'positions-modal-card__sell-button--exit',\n                        }}\n                        unmountOnExit\n                    >\n                        <div className='positions-modal-card__sell-button'>\n                            <ContractCard.Sell\n                                contract_info={contract_info}\n                                is_sell_requested={is_sell_requested}\n                                getCardLabels={getCardLabels}\n                                onClickSell={onClickSell}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n                <CurrencyBadge currency={contract_info?.currency ?? ''} />\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-body')}>\n                    <div className={classNames('positions-modal-card__grid-profit-payout')}>\n                        <div\n                            className={classNames(\n                                'positions-modal-card__profit-loss',\n                                'positions-modal-card__profit-loss-label'\n                            )}\n                        >\n                            {result ? localize('Profit/Loss:') : localize('Potential profit/loss:')}\n                        </div>\n                        <div\n                            className={classNames(\n                                'positions-modal-card__indicative',\n                                'positions-modal-card__indicative-label'\n                            )}\n                        >\n                            {!result ? localize('Indicative price:') : localize('Payout:')}\n                        </div>\n                        <div\n                            className={classNames('positions-modal-card__profit-loss', {\n                                'positions-modal-card__profit-loss--is-crypto': isCryptocurrency(currency),\n                                'positions-modal-card__profit-loss--negative': profit_loss < 0,\n                                'positions-modal-card__profit-loss--positive': profit_loss > 0,\n                            })}\n                        >\n                            <Money amount={Math.abs(profit_loss)} currency={currency} />\n                            <div\n                                className={classNames('positions-modal-card__indicative--movement', {\n                                    'positions-modal-card__indicative--movement-complete': !!result,\n                                })}\n                            >\n                                {status === 'profit' && <Icon icon='IcProfit' />}\n                                {status === 'loss' && <Icon icon='IcLoss' />}\n                            </div>\n                        </div>\n                        <div className='positions-modal-card__indicative'>\n                            <Money amount={sell_price || indicative} currency={currency} />\n                            <div\n                                className={classNames('positions-modal-card__indicative--movement', {\n                                    'positions-modal-card__indicative--movement-complete': !!result,\n                                })}\n                            >\n                                {status === 'profit' && <Icon icon='IcProfit' />}\n                                {status === 'loss' && <Icon icon='IcLoss' />}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classNames('positions-modal-card__grid-price-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Purchase price:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={contract_info.buy_price} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Potential payout:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                {contract_info.payout ? (\n                                    <Money amount={contract_info.payout} currency={currency} />\n                                ) : (\n                                    <strong>-i</strong>\n                                )}\n                            </Text>\n                        </div>\n                    </div>\n\n                    {result || !!contract_info.is_sold ? (\n                        <ResultMobile\n                            contract_id={id}\n                            is_visible={!!contract_info.is_sold}\n                            result={result || fallback_result}\n                        />\n                    ) : (\n                        <ProgressSliderMobile\n                            className='positions-modal-card__progress'\n                            current_tick={current_tick}\n                            getCardLabels={getCardLabels}\n                            is_loading={is_loading}\n                            start_time={contract_info.date_start}\n                            expiry_time={contract_info.date_expiry}\n                            server_time={server_time}\n                            ticks_count={contract_info.tick_count}\n                        />\n                    )}\n                </div>\n            </React.Fragment>\n        );\n\n        const contract_vanilla_el = (\n            <React.Fragment>\n                <NavLink\n                    className={classNames('dc-contract-card', {\n                        'dc-contract-card--green': profit_loss > 0 && !result,\n                        'dc-contract-card--red': profit_loss < 0 && !result,\n                    })}\n                    to={{\n                        pathname: `/contract/${contract_info.contract_id}`,\n                    }}\n                >\n                    <ContractCard.Header\n                        contract_info={contract_info}\n                        display_name={display_name}\n                        getCardLabels={getCardLabels}\n                        getContractTypeDisplay={getContractTypeDisplay}\n                        has_progress_slider={!is_mobile && has_progress_slider}\n                        is_mobile={is_mobile}\n                        is_sell_requested={is_sell_requested}\n                        onClickSell={onClickSell}\n                        server_time={server_time}\n                    />\n                </NavLink>\n                <CurrencyBadge currency={contract_info?.currency ?? ''} />\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-body')}>\n                    <div className={classNames('positions-modal-card__grid-profit-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Buy price:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={contract_info.buy_price} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Contract value:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                <Money amount={contract_info.bid_price} currency={currency} />\n                            </Text>\n                        </div>\n                    </div>\n\n                    <div className={classNames('positions-modal-card__grid-price-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Entry spot:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={contract_info.entry_spot} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Strike:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                <Money amount={contract_info.barrier} currency={currency} />\n                            </Text>\n                        </div>\n                    </div>\n\n                    {result || !!contract_info.is_sold ? (\n                        <ResultMobile\n                            contract_id={id}\n                            is_visible={!!contract_info.is_sold}\n                            result={result || fallback_result}\n                        />\n                    ) : (\n                        <ProgressSliderMobile\n                            className='positions-modal-card__progress'\n                            current_tick={current_tick}\n                            getCardLabels={getCardLabels}\n                            is_loading={is_loading}\n                            start_time={contract_info.date_start}\n                            expiry_time={contract_info.date_expiry}\n                            server_time={server_time}\n                            ticks_count={contract_info.tick_count}\n                        />\n                    )}\n                </div>\n                <div className={classNames('positions-modal-card__item', className)}>\n                    <div className='dc-contract-card-item__header'>{getCardLabels().TOTAL_PROFIT_LOSS}</div>\n                    <div\n                        className={classNames('dc-contract-card-item__body', {\n                            'dc-contract-card-item__body--crypto': isCryptocurrency(currency),\n                            'dc-contract-card-item__body--loss': +total_profit < 0,\n                            'dc-contract-card-item__body--profit': +total_profit > 0,\n                        })}\n                    >\n                        <Money amount={total_profit} currency={currency} />\n                        <div\n                            className={classNames('dc-contract-card__indicative--movement', {\n                                'dc-contract-card__indicative--movement-complete': !!contract_info.is_sold,\n                            })}\n                        >\n                            {status === 'profit' && <Icon icon='IcProfit' />}\n                            {status === 'loss' && <Icon icon='IcLoss' />}\n                        </div>\n                    </div>\n                </div>\n                <ContractCard.Footer\n                    contract_info={contract_info}\n                    getCardLabels={getCardLabels}\n                    is_multiplier={is_multiplier}\n                    is_sell_requested={is_sell_requested}\n                    onClickCancel={onClickCancel}\n                    onClickSell={onClickSell}\n                    server_time={server_time}\n                    status={status}\n                />\n            </React.Fragment>\n        );\n\n        const custom_card_header = (\n            <ContractCard.Header\n                contract_info={contract_info}\n                display_name={display_name}\n                getCardLabels={getCardLabels}\n                getContractTypeDisplay={getContractTypeDisplay}\n                has_progress_slider={(!is_mobile && has_progress_slider) || is_accumulator}\n                is_mobile={is_mobile}\n                is_sell_requested={is_sell_requested}\n                onClickSell={onClickSell}\n                server_time={server_time}\n            />\n        );\n\n        const custom_card_body = (\n            <ContractCard.Body\n                addToast={addToast}\n                contract_info={contract_info}\n                contract_update={contract_update}\n                currency={currency}\n                current_focus={current_focus}\n                getCardLabels={getCardLabels}\n                getContractById={getContractById}\n                is_accumulator={is_accumulator}\n                is_mobile={is_mobile}\n                is_multiplier={is_multiplier}\n                is_positions\n                is_sold={!!contract_info.is_sold}\n                is_turbos={is_turbos}\n                has_progress_slider={is_mobile && has_progress_slider && !has_ended}\n                removeToast={removeToast}\n                server_time={server_time}\n                setCurrentFocus={setCurrentFocus}\n                should_show_cancellation_warning={should_show_cancellation_warning}\n                status={status}\n                toggleCancellationWarning={toggleCancellationWarning}\n            />\n        );\n\n        const custom_card_footer = (\n            <ContractCard.Footer\n                contract_info={contract_info}\n                getCardLabels={getCardLabels}\n                is_multiplier={is_multiplier}\n                is_sell_requested={is_sell_requested}\n                onClickCancel={onClickCancel}\n                onClickSell={onClickSell}\n                server_time={server_time}\n                status={status}\n            />\n        );\n\n        const custom_contract_el = (\n            <React.Fragment>\n                <ContractCard\n                    contract_info={contract_info}\n                    getCardLabels={getCardLabels}\n                    is_multiplier={is_multiplier}\n                    profit_loss={profit_loss}\n                    should_show_result_overlay={false}\n                >\n                    {custom_card_header}\n                    {custom_card_body}\n                    {custom_card_footer}\n                </ContractCard>\n            </React.Fragment>\n        );\n\n        const options_el = is_vanilla ? contract_vanilla_el : contract_options_el;\n        const contract_el = is_multiplier || is_accumulator || is_turbos ? custom_contract_el : options_el;\n\n        return (\n            <div id={`dt_drawer_card_${id}`} className={classNames('positions-modal-card__wrapper', className)}>\n                {is_unsupported ? (\n                    <div\n                        className={classNames('positions-modal-card')}\n                        onClick={() => toggleUnsupportedContractModal(true)}\n                    >\n                        {contract_info.underlying ? contract_el : loader_el}\n                    </div>\n                ) : (\n                    <React.Fragment>\n                        <BinaryLink\n                            onClick={togglePositions}\n                            className={classNames('positions-modal-card', {\n                                'positions-modal-card--multiplier': is_multiplier,\n                            })}\n                            to={getContractPath(id)}\n                        >\n                            {contract_info.underlying ? contract_el : loader_el}\n                        </BinaryLink>\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n);\n\nPositionsModalCard.propTypes = {\n    className: PropTypes.string,\n    contract_info: PropTypes.object,\n    contract_update: PropTypes.object,\n    currency: PropTypes.string,\n    current_tick: PropTypes.number,\n    duration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    duration_unit: PropTypes.string,\n    exit_spot: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    id: PropTypes.number,\n    indicative: PropTypes.number,\n    is_loading: PropTypes.bool,\n    is_sell_requested: PropTypes.bool,\n    is_unsupported: PropTypes.bool,\n    is_valid_to_sell: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClickSell: PropTypes.func,\n    onClickCancel: PropTypes.func,\n    profit_loss: PropTypes.number,\n    result: PropTypes.string,\n    sell_price: PropTypes.number,\n    sell_time: PropTypes.number,\n    status: PropTypes.string,\n    togglePositions: PropTypes.func,\n    toggleUnsupportedContractModal: PropTypes.func,\n    type: PropTypes.string,\n};\n\nexport default PositionsModalCard;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport 'Sass/app/_common/components/positions-toggle.scss';\n\nconst TogglePositions = ({ positions_count, is_open, togglePositions }) => {\n    const positions_toggle_class = classNames('positions-toggle', {\n        'positions-toggle--active': is_open,\n        'positions-toggle--has-count': positions_count > 0,\n    });\n    return (\n        <a\n            id='dt_positions_toggle'\n            data-testid='dt_positions_toggle'\n            className={positions_toggle_class}\n            onClick={togglePositions}\n            data-count={positions_count}\n        >\n            <Icon data_testid='dt_icon' icon='IcPortfolio' className='positions-toggle__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_open: PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    positions_count: PropTypes.number,\n    togglePositions: PropTypes.func,\n    togglePositionsDrawer: PropTypes.func,\n};\n\nexport default TogglePositions;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Icon, Div100vhContainer, Modal, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { NavLink } from 'react-router-dom';\nimport EmptyPortfolioMessage from '../EmptyPortfolioMessage';\nimport PositionsModalCard from 'App/Components/Elements/PositionsDrawer/positions-modal-card.jsx';\nimport TogglePositions from './toggle-positions.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst TogglePositionsMobile = observer(\n    ({\n        active_positions_count,\n        currency,\n        disableApp,\n        enableApp,\n        error,\n        filtered_positions,\n        is_empty,\n        onClickSell,\n        onClickCancel,\n        toggleUnsupportedContractModal,\n    }) => {\n        const { togglePositionsDrawer, is_positions_drawer_on } = useStore().ui;\n        const [hidden_positions_ids, setHiddenPositionsIds] = React.useState([]);\n        const displayed_positions = filtered_positions\n            .filter(p =>\n                hidden_positions_ids.every(hidden_position_id => hidden_position_id !== p.contract_info.contract_id)\n            )\n            .slice(0, 5);\n        const closed_positions_ids = displayed_positions\n            .filter(position => position.contract_info?.is_sold)\n            .map(p => p.contract_info.contract_id);\n\n        const closeModal = () => {\n            setHiddenPositionsIds([...new Set([...hidden_positions_ids, ...closed_positions_ids])]);\n            togglePositionsDrawer();\n        };\n\n        // Show only 5 most recent open contracts\n        const body_content = (\n            <React.Fragment>\n                <TransitionGroup component='div'>\n                    {displayed_positions.map(portfolio_position => (\n                        <CSSTransition\n                            appear\n                            key={portfolio_position.id}\n                            in={true}\n                            timeout={150}\n                            classNames={{\n                                appear: 'dc-contract-card__wrapper--enter',\n                                enter: 'dc-contract-card__wrapper--enter',\n                                enterDone: 'dc-contract-card__wrapper--enter-done',\n                                exit: 'dc-contract-card__wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <PositionsModalCard\n                                onClickSell={onClickSell}\n                                onClickCancel={onClickCancel}\n                                key={portfolio_position.id}\n                                currency={currency}\n                                toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                                togglePositions={togglePositionsDrawer}\n                                {...portfolio_position}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </React.Fragment>\n        );\n\n        return (\n            <React.Fragment>\n                <TogglePositions\n                    is_open={is_positions_drawer_on}\n                    togglePositions={togglePositionsDrawer}\n                    positions_count={active_positions_count}\n                />\n                <Modal\n                    is_open={is_positions_drawer_on}\n                    toggleModal={closeModal}\n                    id='dt_mobile_positions'\n                    is_vertical_top\n                    has_close_icon\n                    enableApp={enableApp}\n                    disableApp={disableApp}\n                    width='calc(100vw - 32px)'\n                >\n                    <Div100vhContainer className='positions-modal' height_offset='48px'>\n                        <div className='positions-modal__header'>\n                            <Text size='xxxs' className='positions-modal__title'>\n                                <Icon icon='IcPortfolio' className='positions-modal__title-icon' />\n                                {localize('Recent positions')}\n                            </Text>\n                            <div className='positions-modal__close-btn' onClick={closeModal}>\n                                <Icon data_testid='dt_modal_header_close' icon='IcMinusBold' />\n                            </div>\n                        </div>\n                        <div className='positions-modal__body'>\n                            {is_empty || !displayed_positions.length || error ? (\n                                <EmptyPortfolioMessage error={error} />\n                            ) : (\n                                body_content\n                            )}\n                        </div>\n                        <div className='positions-modal__footer'>\n                            <NavLink\n                                onClick={closeModal}\n                                className='dc-btn dc-btn--secondary dc-btn__large positions-modal__footer-btn'\n                                to={routes.positions}\n                            >\n                                <Text size='xs' weight='bold'>\n                                    {localize('Go to Reports')}\n                                </Text>\n                            </NavLink>\n                        </div>\n                    </Div100vhContainer>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default TogglePositionsMobile;\n","import React from 'react';\nimport TogglePositionsMobile from 'App/Components/Elements/TogglePositions/toggle-positions-mobile.jsx';\nimport { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\nimport { TURBOS } from '@deriv/shared';\n\nconst PopulateHeader = observer(() => {\n    const { portfolio, ui, client } = useStore();\n    const { symbol, contract_type: trade_contract_type } = useTraderStore();\n    const { currency: positions_currency } = client;\n    const { disableApp, enableApp } = ui;\n    const {\n        active_positions_count,\n        all_positions: positions,\n        error: positions_error,\n        onClickSell: onPositionsSell,\n        onClickCancel: onPositionsCancel,\n    } = portfolio;\n\n    const filtered_positions = positions.filter(\n        p =>\n            p.contract_info &&\n            symbol === p.contract_info.underlying &&\n            (trade_contract_type.includes('turbos')\n                ? filterByContractType(p.contract_info, TURBOS.SHORT) ||\n                  filterByContractType(p.contract_info, TURBOS.LONG)\n                : filterByContractType(p.contract_info, trade_contract_type))\n    );\n\n    return (\n        <TogglePositionsMobile\n            active_positions_count={active_positions_count}\n            filtered_positions={filtered_positions}\n            currency={positions_currency}\n            disableApp={disableApp}\n            is_empty={!filtered_positions.length}\n            enableApp={enableApp}\n            error={positions_error}\n            onClickSell={onPositionsSell}\n            onClickCancel={onPositionsCancel}\n        />\n    );\n});\n\nexport default PopulateHeader;\n","import React from 'react';\nimport { StoreProvider } from '@deriv/stores';\nimport { TraderStoreProvider } from 'Stores/useTraderStores';\nimport type { TCoreStores } from '@deriv/stores/types';\n\nexport const TraderProviders = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    return (\n        <StoreProvider store={store}>\n            <TraderStoreProvider>{children}</TraderStoreProvider>\n        </StoreProvider>\n    );\n};\n\nexport default TraderProviders;\n","import React from 'react';\nimport { when } from 'mobx';\nimport { MobileWrapper } from '@deriv/components';\nimport { isMobile, routes, WS } from '@deriv/shared';\nimport PopulateHeader from './populate-header';\nimport { observer, useStore } from '@deriv/stores';\nimport TraderProviders from '../../trader-providers';\nimport { TCoreStores } from '@deriv/stores/types';\n\ntype TradeHeaderExtensionsProps = {\n    store: TCoreStores;\n};\n\nconst TradeHeaderExtensions = observer(({ store }: TradeHeaderExtensionsProps) => {\n    const { client, modules, ui, portfolio } = useStore();\n    const { populateHeaderExtensions } = ui;\n    const { onMount: onMountPositions } = portfolio;\n    const { is_logged_in, is_populating_account_list } = client;\n    const { onMountCommon: onMountCashier, setAccountSwitchListener } = modules.cashier.general_store;\n\n    const show_positions_toggle = location.pathname !== routes.mt5;\n    const show_component = is_logged_in && show_positions_toggle;\n\n    const populateHeaderfunction = React.useCallback(() => {\n        const header_items = show_component ? (\n            <MobileWrapper>\n                <TraderProviders store={store}>\n                    <PopulateHeader />\n                </TraderProviders>\n            </MobileWrapper>\n        ) : null;\n\n        populateHeaderExtensions(header_items);\n    }, [populateHeaderExtensions, store, show_positions_toggle, is_populating_account_list]);\n\n    React.useEffect(() => {\n        const waitForLogin = async () => {\n            if (isMobile() && show_positions_toggle) {\n                await when(() => !is_populating_account_list); // Waits for login to complete\n                if (is_logged_in) {\n                    await WS.wait('authorize');\n                    onMountPositions();\n                    onMountCashier(true);\n                    setAccountSwitchListener();\n                }\n            }\n\n            populateHeaderfunction();\n        };\n\n        waitForLogin().catch(() => {\n            // Do nothing: This is to remove the bug reported by SonarCloud about not having a catch statement here.\n        });\n\n        return () => populateHeaderExtensions(null);\n    }, [\n        onMountCashier,\n        onMountPositions,\n        populateHeaderfunction,\n        populateHeaderExtensions,\n        setAccountSwitchListener,\n        store,\n        show_positions_toggle,\n    ]);\n\n    React.useEffect(() => {\n        populateHeaderfunction();\n    });\n\n    return null;\n});\n\nexport default TradeHeaderExtensions;\n","import TogglePositions from './toggle-positions.jsx';\n\nexport default TogglePositions;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\nimport TogglePositions from 'App/Components/Elements/TogglePositions';\nimport { observer, useStore } from '@deriv/stores';\n\nconst TradeFooterExtensions = observer(() => {\n    const { client, portfolio, ui } = useStore();\n    const { is_logged_in } = client;\n    const { active_positions_count } = portfolio;\n    const { is_positions_drawer_on, populateFooterExtensions, togglePositionsDrawer } = ui;\n    React.useEffect(() => populateFooter());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useEffect(() => () => populateFooterExtensions([]), []);\n\n    const TogglePositionsIcon = () => (\n        <TogglePositions\n            is_open={is_positions_drawer_on}\n            togglePositions={togglePositionsDrawer}\n            positions_count={active_positions_count}\n        />\n    );\n\n    const populateFooter = () => {\n        const show_positions_toggle = location.pathname === routes.trade;\n\n        if (is_logged_in && show_positions_toggle) {\n            populateFooterExtensions([\n                {\n                    position: 'left',\n                    Component: TogglePositionsIcon,\n                },\n            ]);\n        } else {\n            populateFooterExtensions([]);\n        }\n    };\n\n    return null;\n});\n\nTradeFooterExtensions.propTypes = {\n    location: PropTypes.object,\n};\n\nexport default withRouter(TradeFooterExtensions);\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport TraderProviders from '../../trader-providers';\nimport type { TCoreStores } from '@deriv/stores/types';\n\ntype TTradeSettingsExtensionsProps = {\n    store: TCoreStores;\n};\n\nconst ChartSettingContainer = Loadable({\n    loader: () =>\n        import(\n            /* webpackChunkName: \"settings-chart\", webpackPrefetch: true */ 'App/Containers/SettingsModal/settings-chart.jsx'\n        ),\n    loading: () => <UILoader />,\n});\n\n// const PurchaseSettings = Loadable({\n//     loader: () =>\n//     import(/* webpackChunkName: \"settings-chart\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-purchase.jsx'),\n//     loading: UILoader,\n// });\n\nconst renderItemValue = <T extends object>(props: T, store: TCoreStores) => (\n    <TraderProviders store={store}>\n        <ChartSettingContainer {...props} />\n    </TraderProviders>\n);\n\nconst TradeSettingsExtensions = observer(({ store }: TTradeSettingsExtensionsProps) => {\n    const { ui } = useStore();\n    const { populateSettingsExtensions } = ui;\n    const populateSettings = () => {\n        const menu_items: Parameters<typeof populateSettingsExtensions>[0] = [\n            {\n                icon: 'IcChart',\n                label: localize('Charts'),\n                value: props => renderItemValue(props, store),\n                // uncomment below lines to bring back purchase lock and purchase confirmation}\n                // }, {\n                //     icon : IconPurchase,\n                //     label: localize('Purchase'),\n                //     value: PurchaseSettings,\n            },\n        ];\n        populateSettingsExtensions(menu_items);\n    };\n\n    React.useEffect(() => {\n        return () => populateSettingsExtensions(null);\n    }, [populateSettingsExtensions]);\n\n    React.useEffect(() => populateSettings());\n\n    return null;\n});\n\nexport default TradeSettingsExtensions;\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async symbol => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize } from '@deriv/translations';\nimport { isHourValid, isMinuteValid, isTimeValid, toMoment } from '@deriv/shared';\nimport { isSessionAvailable } from '../Helpers/start-date';\n\nconst tradeSpecificBarrierCheck = (is_vanilla, input) => is_vanilla || input !== 0;\n\nexport const getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req', { message: localize('Amount is a required field.') }],\n            ['number', { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1,\n                    message: localize('Barrier is a required field.'),\n                },\n            ],\n            ['barrier', { condition: store => store.barrier_count }],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) =>\n                        store.barrier_count > 1 ? +value > +inputs.barrier_2 : true,\n                    message: localize('Higher barrier must be higher than lower barrier.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) =>\n                        /^[+-]/.test(inputs.barrier_1)\n                            ? tradeSpecificBarrierCheck(store.is_vanilla, +inputs.barrier_1)\n                            : true,\n                    message: localize('Barrier cannot be zero.'),\n                },\n            ],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1,\n                    message: localize('Barrier is a required field.'),\n                },\n            ],\n            ['barrier', { condition: store => store.barrier_count }],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) =>\n                        (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) ||\n                        (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)),\n                    message: localize('Both barriers should be relative or absolute'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) => +inputs.barrier_1 > +value,\n                    message: localize('Lower barrier must be lower than higher barrier.'),\n                },\n            ],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [['req', { message: localize('Duration is a required field.') }]],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value),\n                    message: localize('Please enter the start time in the format \"HH:MM\".'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value),\n                    message: localize('Hour must be between 0 and 23.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value),\n                    message: localize('Minute must be between 0 and 59.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => {\n                        if (store.contract_start_type === 'spot') return true;\n                        if (!isTimeValid(value)) return false;\n                        const start_moment = toMoment(store.start_date);\n                        const start_moment_clone = start_moment.clone();\n                        const [h, m] = value.split(':');\n                        return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n                    },\n                    message: localize('Start time cannot be in the past.'),\n                },\n            ],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value),\n                    message: localize('Please enter the start time in the format \"HH:MM\".'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value),\n                    message: localize('Hour must be between 0 and 23.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value),\n                    message: localize('Minute must be between 0 and 59.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => {\n                        if (store.contract_start_type === 'spot') return true;\n                        if (!isTimeValid(value)) return false;\n                        const start_moment = toMoment(store.start_date);\n                        const start_moment_clone = start_moment.clone();\n                        const [h, m] = value.split(':');\n                        return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n                    },\n                    message: localize('Expiry time cannot be in the past.'),\n                },\n            ],\n        ],\n    },\n    ...getMultiplierValidationRules(),\n});\n\nexport const getMultiplierValidationRules = () => ({\n    stop_loss: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.has_stop_loss && !store.stop_loss,\n                    message: localize('Please enter a stop loss amount.'),\n                },\n            ],\n        ],\n    },\n    take_profit: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.has_take_profit && !store.take_profit,\n                    message: localize('Please enter a take profit amount.'),\n                },\n            ],\n        ],\n    },\n});\n","import { WS } from '@deriv/shared';\n\nexport const processPurchase = async (proposal_id, price, passthrough) =>\n    WS.buy({\n        proposal_id,\n        price,\n        ...(passthrough && { passthrough }),\n    });\n","/**\n * @param {Object} previous_ticks_history_stats - an object of type: { ticks_stayed_in: number[], last_tick_epoch: number }\n *                                                with ticks_stayed_in starting with the latest counter value;\n * @param {number[]} new_ticks_history_stats - an array of ticks counters containing 100 last values at first, and then only 1 latest updated counter value;\n * @param {number} last_tick_epoch - an epoch of the latest tick counted by the latest (last) ticks counter in new_ticks_stayed_in array;\n * @returns an object of the same type as previous_ticks_history_stats.\n */\nexport const getUpdatedTicksHistoryStats = ({\n    previous_ticks_history_stats = {},\n    new_ticks_history_stats = [],\n    last_tick_epoch,\n}) => {\n    // we anticipate that the latest counter value will be the last one in the received new_ticks_stayed_in array:\n    let ticks_stayed_in = [];\n    const previous_history = previous_ticks_history_stats.ticks_stayed_in || [];\n    const previous_epoch = previous_ticks_history_stats.last_tick_epoch;\n    if (!new_ticks_history_stats.length || !last_tick_epoch) return previous_ticks_history_stats;\n    if (new_ticks_history_stats.length > 1) {\n        ticks_stayed_in = [...new_ticks_history_stats].reverse();\n    } else if (new_ticks_history_stats[0] <= previous_history[0] && last_tick_epoch > previous_epoch) {\n        ticks_stayed_in = [new_ticks_history_stats[0], ...previous_history.slice(0, previous_history.length - 1)];\n    } else if (last_tick_epoch === previous_epoch) {\n        ticks_stayed_in = previous_history;\n    } else {\n        ticks_stayed_in = [new_ticks_history_stats[0], ...previous_history.slice(1)];\n    }\n    return { ticks_stayed_in, last_tick_epoch };\n};\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => {\n    return ContractType.getContractType(contract_types_list, contract_type);\n};\nexport const onChangeContractType = store => ContractType.getContractValues(store);\n","import { getExpiryType, getDurationMinMaxValues } from '@deriv/shared';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeExpiry = store => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers =\n        store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n\nexport const onChangeContractType = store => {\n    const contract_expiry_type = getExpiryType(store);\n\n    const { duration, duration_min_max, duration_unit } = store;\n\n    const obj_duration = assertDuration({ contract_expiry_type, duration, duration_min_max, duration_unit });\n\n    return {\n        ...obj_duration,\n    };\n};\n\nconst assertDuration = ({ contract_expiry_type, duration, duration_min_max, duration_unit } = {}) => {\n    const [min, max] = getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n    if (duration < min) {\n        return { duration: min };\n    }\n    if (duration > max) {\n        return { duration: max };\n    }\n    return {};\n};\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeStartDate = async store => {\n    const { contract_type, duration_unit, start_date } = store;\n    const server_time = store.root_store.common.server_time;\n    let { start_time, expiry_date, expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type = obj_contract_start_type.contract_start_type;\n    const obj_sessions = ContractType.getSessions(contract_type, start_date);\n    const sessions = obj_sessions.sessions;\n    const obj_start_time = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date = obj_expiry_date.expiry_date;\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_type,\n    };\n};\n\nexport const onChangeExpiry = async store => {\n    const { start_time, expiry_date, expiry_type, expiry_time, start_date, symbol, sessions } = store;\n\n    const trading_times = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times = obj_market_close_times.market_close_times;\n    const obj_expiry_time = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    return {\n        ...obj_expiry_time,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import { ContractType as ContractTypeHelper } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport * as ContractType from '../Actions/contract-type';\nimport * as Duration from '../Actions/duration';\nimport * as StartDate from '../Actions/start-date';\n\nconst processInSequence = async (store, functions) => {\n    const snapshot = store.getSnapshot();\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++) {\n        // Shallow copy with Object.assign is good enough to extend the snapshot with new state\n        // we don't need deep extension here, since each function in functions array composes a property of the store completely\n        Object.assign(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n    store.updateStore({\n        ...snapshot,\n    });\n};\n\nexport const processTradeParams = async (store, new_state) => {\n    const functions = getMethodsList(store, new_state);\n    await processInSequence(store, functions);\n\n    const duration_functions = getExpiryMethodsList();\n    await processInSequence(store, duration_functions);\n\n    store.updateStore({\n        is_trade_enabled: true,\n    });\n};\n\nconst getMethodsList = (store, new_state) => [\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type|is_equal)\\b/.test(Object.keys(new_state)) || !store.contract_type // symbol/contract_type changed or contract_type not set yet\n        ? [ContractType.onChangeContractType]\n        : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n    ...(/\\b(symbol|contract_type|is_equal)\\b/.test(Object.keys(new_state)) || !store.contract_type // symbol/contract_type changed or contract_type not set yet\n        ? [Duration.onChangeContractType]\n        : []),\n];\n\nconst getExpiryMethodsList = () => [StartDate.onChangeExpiry];\n","import { BARRIER_COLORS } from '@deriv/shared';\n\nexport const getHoveredColor = (type: string): string => {\n    switch (type) {\n        case 'TURBOSSHORT':\n            return BARRIER_COLORS.RED;\n        case 'TURBOSLONG':\n            return BARRIER_COLORS.GREEN;\n        default:\n            return BARRIER_COLORS.GRAY;\n    }\n};\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { template } from '_common/utility';\nimport { getPreBuildDVRs } from '@deriv/shared';\nimport Error from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input = input;\n        this.rules = rules;\n        this.store = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule, error_message) {\n        let message = error_message || rule.options.message || getPreBuildDVRs()[rule.name].message();\n        if (rule.name === 'length') {\n            message = template(message, [\n                rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`,\n            ]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                let is_valid, error_message;\n                if (ruleObject.name === 'number') {\n                    const { is_ok, message } = ruleObject.validator(\n                        this.input[attribute],\n                        ruleObject.options,\n                        this.store,\n                        this.input\n                    );\n                    is_valid = is_ok;\n                    error_message = message;\n                } else {\n                    is_valid = ruleObject.validator(this.input[attribute], ruleObject.options, this.store, this.input);\n                }\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject, error_message);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name: is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Validator from './validator';\n\nexport default Validator;\n","import { action, intercept, observable, reaction, toJS, when, makeObservable } from 'mobx';\nimport { isProduction, isEmptyObject } from '@deriv/shared';\n\nimport Validator from 'Utils/Validator';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    validation_errors = {};\n\n    validation_rules = {};\n\n    preSwitchAccountDisposer = null;\n    pre_switch_account_listener = null;\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    logoutDisposer = null;\n    logout_listener = null;\n\n    clientInitDisposer = null;\n    client_init_listener = null;\n\n    networkStatusChangeDisposer = null;\n    network_status_change_listener = null;\n\n    themeChangeDisposer = null;\n    theme_change_listener = null;\n\n    realAccountSignupEndedDisposer = null;\n    real_account_signup_ended_listener = null;\n\n    partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        makeObservable(this, {\n            validation_errors: observable,\n            validation_rules: observable,\n            partial_fetch_time: observable,\n            retrieveFromStorage: action,\n            setValidationErrorMessages: action,\n            setValidationRules: action,\n            addRule: action,\n            validateProperty: action,\n            validateAllProperties: action,\n            onSwitchAccount: action.bound,\n            onPreSwitchAccount: action.bound,\n            onLogout: action.bound,\n            onClientInit: action.bound,\n            onNetworkStatusChange: action.bound,\n            onThemeChange: action.bound,\n            onRealAccountSignupEnd: action.bound,\n            disposePreSwitchAccount: action.bound,\n            disposeSwitchAccount: action.bound,\n            disposeLogout: action.bound,\n            disposeClientInit: action.bound,\n            disposeNetworkStatusChange: action.bound,\n            disposeThemeChange: action.bound,\n            disposeRealAccountSignupEnd: action.bound,\n            onUnmount: action.bound,\n            assertHasValidCache: action.bound,\n        });\n\n        const { root_store, local_storage_properties, session_storage_properties, validation_rules, store_name } =\n            options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n\n        const has_local_or_session_storage =\n            (local_storage_properties && local_storage_properties.length) ||\n            (session_storage_properties && session_storage_properties.length);\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value: store_name,\n                enumerable: false,\n                writable: false,\n            });\n        }\n\n        this.root_store = root_store;\n        this.local_storage_properties = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n\n        setTimeout(() => {\n            this.setValidationRules(validation_rules);\n\n            this.setupReactionForLocalStorage();\n            this.setupReactionForSessionStorage();\n            this.retrieveFromStorage();\n        }, 0);\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce((result, p) => Object.assign(result, { [p]: snapshot[p] }), {});\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach(k => (this[k] = snapshot[k]));\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: this.validation_rules[property].rules || [] };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    validateAllProperties() {\n        const validation_rules = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    onSwitchAccount(listener) {\n        if (listener) {\n            this.switch_account_listener = listener;\n\n            this.switchAccountDisposer = when(\n                () => this.root_store.client.switch_broadcast,\n                () => {\n                    try {\n                        const result = this.switch_account_listener();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.switchEndSignal();\n                                this.onSwitchAccount(this.switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Switching account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onPreSwitchAccount(listener) {\n        if (listener) {\n            this.pre_switch_account_listener = listener;\n            this.preSwitchAccountDisposer = when(\n                () => this.root_store.client.pre_switch_broadcast,\n                () => {\n                    try {\n                        const result = this.pre_switch_account_listener?.();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.setPreSwitchAccount(false);\n                                this.onPreSwitchAccount(this.pre_switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Pre-switch account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onLogout(listener) {\n        this.logoutDisposer = when(\n            () => this.root_store.client.has_logged_out,\n            async () => {\n                try {\n                    const result = this.logout_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setLogout(false);\n                            this.onLogout(this.logout_listener);\n                        });\n                    } else {\n                        throw new Error('Logout listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.logout_listener = listener;\n    }\n\n    onClientInit(listener) {\n        this.clientInitDisposer = when(\n            () => this.root_store.client.initialized_broadcast,\n            async () => {\n                try {\n                    const result = this.client_init_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setInitialized(false);\n                            this.onClientInit(this.client_init_listener);\n                        });\n                    } else {\n                        throw new Error('Client init listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.client_init_listener = listener;\n    }\n\n    onNetworkStatusChange(listener) {\n        this.networkStatusChangeDisposer = reaction(\n            () => this.root_store.common.is_network_online,\n            is_online => {\n                try {\n                    this.network_status_change_listener(is_online);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.network_status_change_listener = listener;\n    }\n\n    onThemeChange(listener) {\n        this.themeChangeDisposer = reaction(\n            () => this.root_store.ui.is_dark_mode_on,\n            is_dark_mode_on => {\n                try {\n                    this.theme_change_listener(is_dark_mode_on);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.theme_change_listener = listener;\n    }\n\n    onRealAccountSignupEnd(listener) {\n        this.realAccountSignupEndedDisposer = when(\n            () => this.root_store.ui.has_real_account_signup_ended,\n            () => {\n                try {\n                    const result = this.real_account_signup_ended_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.ui.setRealAccountSignupEnd(false);\n                            this.onRealAccountSignupEnd(this.real_account_signup_ended_listener);\n                        });\n                    } else {\n                        throw new Error('Real account signup listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.real_account_signup_ended_listener = listener;\n    }\n\n    disposePreSwitchAccount() {\n        if (typeof this.preSwitchAccountDisposer === 'function') {\n            this.preSwitchAccountDisposer();\n        }\n        this.pre_switch_account_listener = null;\n    }\n\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    disposeLogout() {\n        if (typeof this.logoutDisposer === 'function') {\n            this.logoutDisposer();\n        }\n        this.logout_listener = null;\n    }\n\n    disposeClientInit() {\n        if (typeof this.clientInitDisposer === 'function') {\n            this.clientInitDisposer();\n        }\n        this.client_init_listener = null;\n    }\n\n    disposeNetworkStatusChange() {\n        if (typeof this.networkStatusChangeDisposer === 'function') {\n            this.networkStatusChangeDisposer();\n        }\n        this.network_status_change_listener = null;\n    }\n\n    disposeThemeChange() {\n        if (typeof this.themeChangeDisposer === 'function') {\n            this.themeChangeDisposer();\n        }\n        this.theme_change_listener = null;\n    }\n\n    disposeRealAccountSignupEnd() {\n        if (typeof this.realAccountSignupEndedDisposer === 'function') {\n            this.realAccountSignupEndedDisposer();\n        }\n        this.real_account_signup_ended_listener = null;\n    }\n\n    onUnmount() {\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.disposeRealAccountSignupEnd();\n    }\n\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n}\n","import { toJS } from 'mobx';\nimport { isEmptyObject, CONTRACT_SHADES } from '@deriv/shared';\n\nexport const isBarrierSupported = contract_type => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) =>\n    barriers_list\n        .filter(barrier => barrier !== undefined && barrier !== null)\n        .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers, reference_array) => {\n    Object.keys(barriers).forEach(barrier => {\n        const js_object = toJS(barriers[barrier]);\n        if (!isEmptyObject(js_object)) {\n            reference_array.push(js_object);\n        }\n    });\n\n    return reference_array;\n};\n\nexport const removeBarrier = (barriers, key) => {\n    const index = barriers.findIndex(b => b.key === key);\n    if (index > -1) {\n        barriers.splice(index, 1);\n    }\n};\n","import { action, computed, observable, makeObservable } from 'mobx';\nimport { BARRIER_COLORS, BARRIER_LINE_STYLES, CONTRACT_SHADES, DEFAULT_SHADES } from '@deriv/shared';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    color;\n    lineStyle;\n    shade;\n    shadeColor;\n\n    high;\n    low;\n\n    relative;\n    draggable;\n\n    hidePriceLines;\n    hideBarrierLine;\n    hideOffscreenLine;\n    title;\n\n    onChartBarrierChange;\n\n    constructor(high_barrier, low_barrier, onChartBarrierChange = null, { color, line_style, not_draggable } = {}) {\n        makeObservable(this, {\n            color: observable,\n            lineStyle: observable,\n            shade: observable,\n            shadeColor: observable,\n            high: observable,\n            low: observable,\n            relative: observable,\n            draggable: observable,\n            hidePriceLines: observable,\n            hideBarrierLine: observable,\n            hideOffscreenLine: observable,\n            title: observable,\n            updateBarriers: action.bound,\n            updateBarrierShade: action.bound,\n            onBarrierChange: action.bound,\n            updateBarrierColor: action.bound,\n            barrier_count: computed,\n            default_shade: computed,\n        });\n\n        this.color = color;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange =\n            typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier = !!high_barrier;\n        this.relative = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative = /^[+-]/.test(high);\n        }\n        this.high = high || undefined;\n        this.low = low || undefined;\n    }\n\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    updateBarrierColor(is_dark_mode) {\n        this.color = is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n    }\n\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { isMultiplierContract, BARRIER_COLORS, BARRIER_LINE_STYLES } from '@deriv/shared';\nimport { ChartBarrierStore } from '../../SmartChart/chart-barrier-store';\nimport { removeBarrier } from '../../SmartChart/Helpers/barriers';\n\nconst isLimitOrderBarrierSupported = (contract_type, contract_info) =>\n    isMultiplierContract(contract_type) && contract_info.limit_order;\n\nexport const LIMIT_ORDER_TYPES = {\n    STOP_OUT: 'stop_out',\n    TAKE_PROFIT: 'take_profit',\n    STOP_LOSS: 'stop_loss',\n};\n\nexport const setLimitOrderBarriers = ({ barriers, contract_type, contract_info = {}, is_over }) => {\n    if (is_over && isLimitOrderBarrierSupported(contract_type, contract_info)) {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        const has_stop_loss = Object.keys(contract_info.limit_order).some(\n            k => k === LIMIT_ORDER_TYPES.STOP_LOSS && contract_info.limit_order[k].value\n        );\n\n        limit_orders.forEach(key => {\n            const obj_limit_order = contract_info.limit_order[key];\n\n            if (!obj_limit_order || !obj_limit_order.value) {\n                removeBarrier(barriers, key);\n                return;\n            }\n\n            let barrier = barriers.find(b => b.key === key);\n\n            if (barrier) {\n                if (barrier.high === +obj_limit_order.value) {\n                    return;\n                }\n\n                barrier.onChange({\n                    high: obj_limit_order.value,\n                });\n            } else {\n                const obj_barrier = {\n                    key,\n                    title: `${obj_limit_order.display_name}`,\n                    color: key === LIMIT_ORDER_TYPES.TAKE_PROFIT ? BARRIER_COLORS.GREEN : BARRIER_COLORS.ORANGE,\n                    draggable: false,\n                    lineStyle:\n                        key === LIMIT_ORDER_TYPES.STOP_OUT ? BARRIER_LINE_STYLES.DOTTED : BARRIER_LINE_STYLES.SOLID,\n                    hidePriceLines: has_stop_loss && key === LIMIT_ORDER_TYPES.STOP_OUT,\n                    hideOffscreenLine: true,\n                    showOffscreenArrows: true,\n                    isSingleBarrier: true,\n                    opacityOnOverlap: key === LIMIT_ORDER_TYPES.STOP_OUT && 0.15,\n                };\n                barrier = new ChartBarrierStore(obj_limit_order.value);\n\n                Object.assign(barrier, obj_barrier);\n                barriers.push(barrier);\n            }\n        });\n    } else {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        limit_orders.forEach(l => removeBarrier(barriers, l));\n    }\n};\n\n/**\n * Get limit_order for contract_update API\n * @param {object} contract_update - contract_update input & checkbox values\n */\nexport const getLimitOrder = contract_update => {\n    const {\n        has_contract_update_stop_loss,\n        has_contract_update_take_profit,\n        contract_update_stop_loss,\n        contract_update_take_profit,\n        contract_info,\n    } = contract_update;\n\n    const limit_order = {};\n\n    const new_take_profit = has_contract_update_take_profit ? +contract_update_take_profit : null;\n    const has_take_profit_changed =\n        Math.abs(contract_info.limit_order?.take_profit?.order_amount) !== Math.abs(new_take_profit);\n\n    if (has_take_profit_changed) {\n        // send positive take_profit to update or null cancel\n        limit_order.take_profit = new_take_profit;\n    }\n\n    const new_stop_loss = has_contract_update_stop_loss ? +contract_update_stop_loss : null;\n    const has_stop_loss_changed =\n        Math.abs(contract_info.limit_order?.stop_loss?.order_amount) !== Math.abs(new_stop_loss);\n\n    if (has_stop_loss_changed) {\n        // send positive stop_loss to update or null to cancel\n        limit_order.stop_loss = new_stop_loss;\n    }\n\n    return limit_order;\n};\n","import * as Symbol from './Actions/symbol';\n\nimport {\n    WS,\n    cloneObject,\n    convertDurationLimit,\n    extractInfoFromShortcode,\n    findFirstOpenMarket,\n    getBarrierPipSize,\n    getMinPayout,\n    getPlatformSettings,\n    getPropertyValue,\n    getContractSubtype,\n    isBarrierSupported,\n    isCryptocurrency,\n    isDesktop,\n    isEmptyObject,\n    isMarketClosed,\n    isMobile,\n    isTurbosContract,\n    pickDefaultSymbol,\n    removeBarrier,\n    resetEndTimeOnVolatilityIndices,\n    showDigitalOptionsUnavailableError,\n    showMxMltUnavailableError,\n    showUnavailableLocationError,\n    formatMoney,\n    getCurrencyDisplayCode,\n    unsupported_contract_types_list,\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { getValidationRules, getMultiplierValidationRules } from 'Stores/Modules/Trading/Constants/validation-rules';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { isDigitContractType, isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport ServerTime from '_common/base/server_time';\nimport { processPurchase } from './Actions/purchase';\nimport { getAvailableContractTypes } from 'Modules/Trading/Helpers/contract-type';\nimport { getUpdatedTicksHistoryStats } from './Helpers/accumulator';\nimport { processTradeParams } from './Helpers/process';\nimport { action, computed, makeObservable, observable, override, reaction, runInAction, toJS, when } from 'mobx';\nimport { createProposalRequests, getProposalErrorField, getProposalInfo } from './Helpers/proposal';\nimport { getHoveredColor } from './Helpers/barrier-utils';\nimport BaseStore from '../../base-store';\nimport { ChartBarrierStore } from '../SmartChart/chart-barrier-store';\nimport debounce from 'lodash.debounce';\nimport { setLimitOrderBarriers } from './Helpers/limit-orders';\n\nconst store_name = 'trade_store';\nconst g_subscribers_map = {}; // blame amin.m\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    is_trade_component_mounted = false;\n    is_purchase_enabled = false;\n    is_trade_enabled = false;\n    is_equal = 0;\n    has_equals_only = false;\n\n    // Underlying\n    symbol;\n    is_market_closed = false;\n    previous_symbol = '';\n    active_symbols = [];\n\n    form_components = [];\n\n    // Contract Type\n    contract_expiry_type = '';\n    contract_start_type = '';\n    contract_type = '';\n    contract_types_list = {};\n    trade_types = {};\n\n    // Amount\n    amount = 10;\n    basis = '';\n    basis_list = [];\n    currency = '';\n    stake_boundary = {};\n\n    // Duration\n    duration = 5;\n    duration_min_max = {};\n    duration_unit = '';\n    duration_units_list = [];\n    expiry_date = '';\n    expiry_epoch = '';\n    expiry_time = '';\n    expiry_type = 'duration';\n\n    // Barrier\n    barrier_1 = '';\n    barrier_2 = '';\n    barrier_count = 0;\n    barriers = [];\n    hovered_barrier = '';\n    main_barrier = null;\n    barrier_choices = [];\n\n    // Start Time\n    start_date = Number(0); // Number(0) refers to 'now'\n    start_dates_list = [];\n    start_time = null;\n    sessions = [];\n\n    market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    market_close_times = [];\n\n    // Last Digit\n    last_digit = 5;\n    is_mobile_digit_view_selected = false;\n\n    // Purchase\n    proposal_info = {};\n    purchase_info = {};\n\n    // Chart loader observables\n    is_chart_loading;\n    should_show_active_symbols_loading = false;\n\n    // Accumulator trade params\n    accumulator_range_list = [];\n    growth_rate = 0.03;\n    maximum_payout = 0;\n    maximum_ticks = 0;\n    ticks_history_stats = {};\n    tick_size_barrier = 0;\n\n    // Multiplier trade params\n    multiplier;\n    multiplier_range_list = [];\n    stop_loss;\n    take_profit;\n    has_stop_loss = false;\n    has_take_profit = false;\n    has_cancellation = false;\n    commission;\n    cancellation_price;\n    stop_out;\n    expiration;\n    hovered_contract_type;\n    cancellation_duration = '60m';\n    cancellation_range_list = [];\n\n    // Turbos trade params\n    long_barriers = {};\n    short_barriers = {};\n\n    // Vanilla trade params\n    vanilla_trade_type = 'VANILLALONGCALL';\n\n    // Mobile\n    is_trade_params_expanded = true;\n\n    //Toastbox\n    contract_purchase_toast_box;\n\n    addTickByProposal = () => null;\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    is_purchasing_contract = false;\n\n    initial_barriers;\n    is_initial_barrier_applied = false;\n\n    should_skip_prepost_lifecycle = false;\n\n    constructor({ root_store }) {\n        const local_storage_properties = [\n            'amount',\n            'currency',\n            'barrier_1',\n            'barrier_2',\n            'basis',\n            'contract_start_type',\n            'contract_type',\n            'duration',\n            'duration_unit',\n            'expiry_date',\n            'expiry_type',\n            'growth_rate',\n            'has_take_profit',\n            'has_stop_loss',\n            'has_cancellation',\n            'hovered_barrier',\n            'short_barriers',\n            'long_barriers',\n            'is_equal',\n            'last_digit',\n            'multiplier',\n            'start_date',\n            'start_time',\n            'symbol',\n            'stop_loss',\n            'take_profit',\n            'is_trade_params_expanded',\n        ];\n        super({\n            root_store,\n            local_storage_properties,\n            store_name,\n            validation_rules: getValidationRules(),\n        });\n\n        makeObservable(this, {\n            accumulator_range_list: observable,\n            active_symbols: observable,\n            amount: observable,\n            barrier_1: observable,\n            barrier_2: observable,\n            barrier_count: observable,\n            barrier_choices: observable,\n            barriers: observable,\n            basis_list: observable,\n            basis: observable,\n            cancellation_duration: observable,\n            cancellation_price: observable,\n            cancellation_range_list: observable,\n            commission: observable,\n            contract_expiry_type: observable,\n            contract_start_type: observable,\n            contract_type: observable,\n            contract_types_list: observable,\n            currency: observable,\n            duration_min_max: observable,\n            duration_unit: observable,\n            duration_units_list: observable,\n            duration: observable,\n            expiration: observable,\n            expiry_date: observable,\n            expiry_epoch: observable,\n            expiry_time: observable,\n            expiry_type: observable,\n            form_components: observable,\n            growth_rate: observable,\n            has_cancellation: observable,\n            has_equals_only: observable,\n            has_stop_loss: observable,\n            has_take_profit: observable,\n            hovered_barrier: observable,\n            hovered_contract_type: observable,\n            is_accumulator: computed,\n            is_chart_loading: observable,\n            is_equal: observable,\n            is_market_closed: observable,\n            is_mobile_digit_view_selected: observable,\n            is_purchase_enabled: observable,\n            is_trade_component_mounted: observable,\n            is_trade_enabled: observable,\n            is_trade_params_expanded: observable,\n            is_turbos: computed,\n            last_digit: observable,\n            long_barriers: observable,\n            main_barrier: observable,\n            market_close_times: observable,\n            market_open_times: observable,\n            maximum_payout: observable,\n            maximum_ticks: observable,\n            multiplier_range_list: observable,\n            multiplier: observable,\n            previous_symbol: observable,\n            proposal_info: observable.ref,\n            purchase_info: observable.ref,\n            setHoveredBarrier: action.bound,\n            sessions: observable,\n            setDefaultGrowthRate: action.bound,\n            short_barriers: observable,\n            should_show_active_symbols_loading: observable,\n            should_skip_prepost_lifecycle: observable,\n            stake_boundary: observable,\n            start_date: observable,\n            start_dates_list: observable,\n            start_time: observable,\n            stop_loss: observable,\n            stop_out: observable,\n            symbol: observable,\n            take_profit: observable,\n            tick_size_barrier: observable,\n            ticks_history_stats: observable,\n            trade_types: observable,\n            accountSwitcherListener: action.bound,\n            barrier_pipsize: computed,\n            barriers_flattened: computed,\n            changeDurationValidationRules: action.bound,\n            chartStateChange: action.bound,\n            clearContractPurchaseToastBox: action.bound,\n            clearContracts: action.bound,\n            clearLimitOrderBarriers: action.bound,\n            clearPurchaseInfo: action.bound,\n            clientInitListener: action.bound,\n            contract_purchase_toast_box: observable,\n            enablePurchase: action.bound,\n            exportLayout: action.bound,\n            forgetAllProposal: action.bound,\n            getFirstOpenMarket: action.bound,\n            has_alternative_source: computed,\n            initAccountCurrency: action.bound,\n            is_multiplier: computed,\n            is_symbol_in_active_symbols: computed,\n            is_synthetics_available: computed,\n            is_vanilla: computed,\n            loadActiveSymbols: action.bound,\n            logoutListener: action.bound,\n            main_barrier_flattened: computed,\n            manageMxMltRemovalNotification: action.bound,\n            networkStatusChangeListener: action.bound,\n            onAllowEqualsChange: action.bound,\n            onChange: action.bound,\n            onChangeMultiple: action.bound,\n            onChartBarrierChange: action.bound,\n            onHoverPurchase: action.bound,\n            onMount: action.bound,\n            onProposalResponse: action.bound,\n            onPurchase: action.bound,\n            onUnmount: override,\n            prepareTradeStore: action.bound,\n            preSwitchAccountListener: action.bound,\n            processPurchase: action.bound,\n            pushPurchaseDataToGtm: action.bound,\n            refresh: action.bound,\n            requestProposal: action.bound,\n            resetAccumulatorData: action.bound,\n            resetErrorServices: action.bound,\n            resetPreviousSymbol: action.bound,\n            setActiveSymbols: action.bound,\n            setAllowEqual: action.bound,\n            setBarrierChoices: action.bound,\n            setChartStatus: action.bound,\n            setContractPurchaseToastbox: action.bound,\n            setContractTypes: action.bound,\n            setDefaultSymbol: action.bound,\n            setIsTradeParamsExpanded: action.bound,\n            setMarketStatus: action.bound,\n            setMobileDigitView: action.bound,\n            setPreviousSymbol: action.bound,\n            setPurchaseSpotBarrier: action.bound,\n            setSkipPrePostLifecycle: action.bound,\n            setStakeBoundary: action.bound,\n            setTradeStatus: action.bound,\n            show_digits_stats: computed,\n            themeChangeListener: action.bound,\n            updateBarrierColor: action.bound,\n            updateLimitOrderBarriers: action.bound,\n            updateStore: action.bound,\n            updateSymbol: action.bound,\n            vanilla_trade_type: observable,\n        });\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            }\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            }\n        );\n        reaction(\n            () => this.symbol,\n            () => {\n                const date = resetEndTimeOnVolatilityIndices(this.symbol, this.expiry_type);\n                if (date) {\n                    this.expiry_date = date;\n                }\n                this.setDefaultGrowthRate();\n                this.resetAccumulatorData();\n            }\n        );\n        reaction(\n            () => this.duration_unit,\n            () => {\n                this.contract_expiry_type = this.duration_unit === 't' ? 'tick' : 'intraday';\n            }\n        );\n        reaction(\n            () => [this.has_stop_loss, this.has_take_profit],\n            () => {\n                if (!this.has_stop_loss) {\n                    this.validation_errors.stop_loss = [];\n                }\n                if (!this.has_take_profit) {\n                    this.validation_errors.take_profit = [];\n                }\n            }\n        );\n        reaction(\n            () => [this.contract_type],\n            () => {\n                this.root_store.portfolio.setContractType(this.contract_type);\n                if (this.is_accumulator || this.is_multiplier || this.is_turbos) {\n                    // when switching back to Multiplier contract, re-apply Stop loss / Take profit validation rules\n                    Object.assign(this.validation_rules, getMultiplierValidationRules());\n                } else {\n                    // we need to remove these two validation rules on contract_type change\n                    // to be able to remove any existing Stop loss / Take profit validation errors\n                    delete this.validation_rules.stop_loss;\n                    delete this.validation_rules.take_profit;\n                }\n                this.resetAccumulatorData();\n            }\n        );\n        reaction(\n            () => this.root_store.common.current_language,\n            () => {\n                this.setValidationRules(getValidationRules());\n                this.changeDurationValidationRules();\n                if (!this.amount) {\n                    this.validateAllProperties();\n                }\n            }\n        );\n        when(\n            () => this.accumulator_range_list.length,\n            () => this.setDefaultGrowthRate()\n        );\n    }\n\n    get is_symbol_in_active_symbols() {\n        return this.active_symbols.some(\n            symbol_info => symbol_info.symbol === this.symbol && symbol_info.exchange_is_open === 1\n        );\n    }\n\n    resetAccumulatorData() {\n        if (!isEmptyObject(this.root_store.contract_trade.accumulator_barriers_data)) {\n            this.root_store.contract_trade.clearAccumulatorBarriersData();\n        }\n    }\n\n    setDefaultGrowthRate() {\n        if (\n            this.is_accumulator &&\n            !this.accumulator_range_list.includes(this.growth_rate) &&\n            this.accumulator_range_list.length\n        ) {\n            this.growth_rate = this.accumulator_range_list[0];\n        }\n    }\n\n    setSkipPrePostLifecycle(should_skip) {\n        if (!!should_skip !== !!this.should_skip_prepost_lifecycle) {\n            // to skip assignment if no change is made\n            this.should_skip_prepost_lifecycle = should_skip;\n        }\n    }\n\n    setTradeStatus(status) {\n        this.is_trade_enabled = status;\n    }\n\n    refresh() {\n        this.forgetAllProposal();\n        this.proposal_info = {};\n        this.purchase_info = {};\n        this.proposal_requests = {};\n    }\n\n    clearContracts = () => {\n        this.root_store.contract_trade.contracts = [];\n    };\n\n    async loadActiveSymbols(should_set_default_symbol = true, should_show_loading = true) {\n        this.should_show_active_symbols_loading = should_show_loading;\n\n        await this.setActiveSymbols();\n        await this.root_store.active_symbols.setActiveSymbols();\n        if (should_set_default_symbol) await this.setDefaultSymbol();\n\n        const r = await WS.storage.contractsFor(this.symbol);\n        if (['InvalidSymbol', 'InputValidationFailed'].includes(r.error?.code)) {\n            const symbol_to_update = await pickDefaultSymbol(this.active_symbols);\n            await this.processNewValuesAsync({ symbol: symbol_to_update });\n        }\n\n        runInAction(() => {\n            this.should_show_active_symbols_loading = false;\n        });\n    }\n\n    async setDefaultSymbol() {\n        if (!this.is_symbol_in_active_symbols) {\n            this.is_trade_enabled = false;\n\n            const symbol = await pickDefaultSymbol(this.active_symbols);\n            await this.processNewValuesAsync({ symbol });\n        }\n    }\n\n    async setActiveSymbols() {\n        const is_on_mf_account = this.root_store.client.landing_company_shortcode === 'maltainvest';\n        const hide_close_mx_mlt_storage_flag = !!parseInt(\n            localStorage.getItem('hide_close_mx_mlt_account_notification')\n        );\n        const is_logged_in = this.root_store.client.is_logged_in;\n        const clients_country = this.root_store.client.clients_country;\n        const showError = this.root_store.common.showError;\n        const setError = this.root_store.common.setError;\n\n        // To resolve infinite load for Belgium and Isle of man logout IPs\n        if (['be', 'im'].includes(clients_country) && !is_logged_in) {\n            showUnavailableLocationError(showError, is_logged_in);\n        }\n\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n\n        if (error) {\n            showError({ message: localize('Trading is unavailable at this time.') });\n            return;\n        }\n\n        if (!active_symbols || !active_symbols.length) {\n            await WS.wait('get_settings');\n            /*\n             * This logic is related to EU country checks\n             * Avoid moving this upward in the scope since mobx will lose reactivity\n             */\n            const can_have_mx_account = this.root_store.client.can_have_mx_account;\n            const can_have_mlt_account = this.root_store.client.can_have_mlt_account;\n            const can_have_mlt_or_mx_account = can_have_mlt_account || can_have_mx_account;\n\n            if (can_have_mlt_or_mx_account && is_logged_in && !hide_close_mx_mlt_storage_flag) {\n                setError(true, {\n                    type: 'mx_mlt_removal',\n                });\n            } else if (is_logged_in && hide_close_mx_mlt_storage_flag) {\n                showMxMltUnavailableError(showError, can_have_mlt_account, can_have_mx_account);\n            } else if (!is_on_mf_account) {\n                if (!hide_close_mx_mlt_storage_flag) {\n                    setError(true, {\n                        type: 'mx_mlt_removal',\n                    });\n                } else {\n                    showUnavailableLocationError(showError, is_logged_in);\n                }\n                return;\n            } else if (is_on_mf_account) {\n                showDigitalOptionsUnavailableError(showError, {\n                    text: localize(\n                        'We’re working to have this available for you soon. If you have another account, switch to that account to continue trading. You may add a Deriv MT5 Financial.'\n                    ),\n                    title: localize('{{platform_name_trader}} is not available for this account', {\n                        platform_name_trader: getPlatformSettings('trader').name,\n                    }),\n                    link: localize('Go to {{platform_name_mt5}} dashboard', {\n                        platform_name_mt5: getPlatformSettings('mt5').name,\n                    }),\n                });\n                return;\n            }\n        }\n        await this.processNewValuesAsync({ active_symbols });\n    }\n\n    async setContractTypes() {\n        if (this.symbol && this.is_symbol_in_active_symbols) {\n            await Symbol.onChangeSymbolAsync(this.symbol);\n            runInAction(() => {\n                const contract_categories = ContractType.getContractCategories();\n                this.processNewValuesAsync({\n                    ...contract_categories,\n                    ...ContractType.getContractType(contract_categories.contract_types_list, this.contract_type),\n                });\n                this.processNewValuesAsync(ContractType.getContractValues(this));\n            });\n        }\n        this.root_store.common.setSelectedContractType(this.contract_type);\n        this.root_store.portfolio.setContractType(this.contract_type);\n    }\n\n    async prepareTradeStore(should_set_default_symbol = true) {\n        this.initial_barriers = { barrier_1: this.barrier_1, barrier_2: this.barrier_2 };\n        await when(() => !this.root_store.client.is_populating_account_list);\n\n        // waits for `website_status` in order to set `stake_default` for the selected currency\n        await WS.wait('website_status');\n        await runInAction(async () => {\n            await this.processNewValuesAsync(\n                {\n                    // fallback to default currency if current logged-in client hasn't selected a currency yet\n                    currency: this.root_store.client.currency || this.root_store.client.default_currency,\n                },\n                true,\n                null,\n                false\n            );\n        });\n        await this.loadActiveSymbols(should_set_default_symbol);\n        await this.setContractTypes();\n        await this.processNewValuesAsync(\n            {\n                is_market_closed: isMarketClosed(this.active_symbols, this.symbol),\n            },\n            true,\n            null,\n            false\n        );\n    }\n\n    async onChangeMultiple(values) {\n        Object.keys(values).forEach(name => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        await this.processNewValuesAsync({ ...values }, true); // wait for store to be updated\n        this.validateAllProperties(); // then run validation before sending proposal\n    }\n\n    async onChange(e) {\n        const { name, value } = e.target;\n        if (name === 'symbol' && value) {\n            // set trade params skeleton and chart loader to true until processNewValuesAsync resolves\n            this.setChartStatus(true);\n            // reset market close status\n            this.setMarketStatus(false);\n            this.is_trade_enabled = false;\n            // this.root_store.modules.contract_trade.contracts = [];\n            // TODO: Clear the contracts in contract-trade-store\n        } else if (name === 'currency') {\n            // Only allow the currency dropdown change if client is not logged in\n            if (!this.root_store.client.is_logged_in) {\n                this.root_store.client.selectCurrency(value);\n            }\n        } else if (name === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        await this.processNewValuesAsync(\n            { [name]: value },\n            true,\n            name === 'contract_type' ? { contract_type: this.contract_type } : {}, // refer to [Multiplier validation rules] below\n            true\n        ); // wait for store to be updated\n        this.validateAllProperties(); // then run validation before sending proposal\n        this.root_store.common.setSelectedContractType(this.contract_type);\n    }\n\n    setHoveredBarrier(hovered_value) {\n        this.hovered_barrier = hovered_value;\n    }\n\n    setPreviousSymbol(symbol) {\n        if (this.previous_symbol !== symbol) this.previous_symbol = symbol;\n    }\n\n    setAllowEqual(is_equal) {\n        this.is_equal = is_equal;\n    }\n\n    setIsTradeParamsExpanded(value) {\n        this.is_trade_params_expanded = value;\n    }\n\n    async resetPreviousSymbol() {\n        this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n\n        await Symbol.onChangeSymbolAsync(this.previous_symbol);\n        await this.updateSymbol(this.symbol);\n\n        this.setChartStatus(false);\n        runInAction(() => {\n            this.previous_symbol = ''; // reset the symbol to default\n        });\n    }\n\n    updateBarrierColor(is_dark_mode) {\n        if (this.main_barrier) {\n            this.main_barrier.updateBarrierColor(is_dark_mode);\n        }\n    }\n\n    onHoverPurchase(is_over, contract_type) {\n        if (this.is_accumulator) return;\n        if (this.is_purchase_enabled && this.main_barrier && !this.is_multiplier) {\n            this.main_barrier.updateBarrierShade(is_over, contract_type);\n        } else if (!is_over && this.main_barrier && !this.is_multiplier) {\n            this.main_barrier.updateBarrierShade(false, contract_type);\n        }\n\n        this.hovered_contract_type = is_over ? contract_type : null;\n        setLimitOrderBarriers({\n            barriers: this.root_store.portfolio.barriers,\n            is_over,\n            contract_type,\n            contract_info: this.proposal_info[contract_type],\n        });\n    }\n\n    setPurchaseSpotBarrier(is_over, position) {\n        const key = 'PURCHASE_SPOT_BARRIER';\n        if (!is_over) {\n            removeBarrier(this.root_store.portfolio.barriers, key);\n            return;\n        }\n\n        let purchase_spot_barrier = this.root_store.portfolio.barriers.find(b => b.key === key);\n        if (purchase_spot_barrier) {\n            if (purchase_spot_barrier.high !== +position.contract_info.entry_spot) {\n                purchase_spot_barrier.onChange({\n                    high: position.contract_info.entry_spot,\n                });\n            }\n        } else {\n            purchase_spot_barrier = new ChartBarrierStore(position.contract_info.entry_spot);\n            purchase_spot_barrier.key = key;\n            purchase_spot_barrier.draggable = false;\n            purchase_spot_barrier.hideOffscreenBarrier = true;\n            purchase_spot_barrier.isSingleBarrier = true;\n            purchase_spot_barrier.updateBarrierColor(this.root_store.ui.is_dark_mode_on);\n            this.barriers.push(purchase_spot_barrier);\n            this.root_store.portfolio.barriers.push(purchase_spot_barrier);\n        }\n    }\n\n    updateLimitOrderBarriers(is_over, position) {\n        const contract_info = position.contract_info;\n        const { barriers } = this;\n        setLimitOrderBarriers({\n            barriers,\n            contract_info,\n            contract_type: contract_info.contract_type,\n            is_over,\n        });\n    }\n\n    clearLimitOrderBarriers() {\n        this.hovered_contract_type = null;\n        const { barriers } = this;\n        setLimitOrderBarriers({\n            barriers,\n            is_over: false,\n        });\n    }\n\n    get barrier_pipsize() {\n        return getBarrierPipSize(this.barrier_1);\n    }\n\n    get main_barrier_flattened() {\n        const is_digit_trade_type = isDigitTradeType(this.contract_type);\n        return is_digit_trade_type ? null : toJS(this.main_barrier);\n    }\n\n    get barriers_flattened() {\n        return this.root_store.portfolio.barriers && toJS(this.root_store.portfolio.barriers);\n    }\n\n    setMainBarrier = proposal_info => {\n        if (!proposal_info) {\n            return;\n        }\n        const { barrier, contract_type, high_barrier, low_barrier } = proposal_info;\n\n        if (isBarrierSupported(contract_type)) {\n            const color = this.root_store.ui.is_dark_mode_on ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n\n            // create barrier only when it's available in response\n            this.main_barrier = new ChartBarrierStore(\n                this.hovered_barrier || barrier || high_barrier,\n                low_barrier,\n                this.onChartBarrierChange,\n                {\n                    color: this.hovered_barrier ? getHoveredColor(contract_type) : color,\n                    line_style: this.hovered_barrier && BARRIER_LINE_STYLES.DASHED,\n                    not_draggable: this.is_turbos || this.is_vanilla,\n                }\n            );\n            // this.main_barrier.updateBarrierShade(true, contract_type);\n        } else {\n            this.main_barrier = null;\n        }\n    };\n\n    onPurchase = debounce(this.processPurchase, 300);\n\n    processPurchase(proposal_id, price, type) {\n        if (!this.is_purchase_enabled) return;\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            this.is_purchasing_contract = true;\n            const is_tick_contract = this.duration_unit === 't';\n            processPurchase(proposal_id, price).then(\n                action(response => {\n                    if (!this.is_trade_component_mounted) {\n                        this.enablePurchase();\n                        this.is_purchasing_contract = false;\n                        return;\n                    }\n\n                    const last_digit = +this.last_digit;\n                    if (response.error) {\n                        // using javascript to disable purchase-buttons manually to compensate for mobx lag\n                        this.disablePurchaseButtons();\n                        // invalidToken error will handle in socket-general.js\n                        if (response.error.code !== 'InvalidToken') {\n                            this.root_store.common.setServicesError({\n                                type: response.msg_type,\n                                ...response.error,\n                            });\n\n                            // Clear purchase info on mobile after toast box error disappears (mobile_toast_timeout = 3500)\n                            if (isMobile() && this.root_store.common?.services_error?.type === 'buy') {\n                                setTimeout(() => {\n                                    this.clearPurchaseInfo();\n                                    this.requestProposal();\n                                }, 3500);\n                            }\n                        }\n                    } else if (response.buy) {\n                        if (this.proposal_info[type] && this.proposal_info[type].id !== proposal_id) {\n                            throw new Error('Proposal ID does not match.');\n                        }\n                        const contract_data = {\n                            ...this.proposal_requests[type],\n                            ...this.proposal_info[type],\n                            buy_price: response.buy.buy_price,\n                        };\n                        const { contract_id, longcode, start_time } = response.buy;\n\n                        // toggle smartcharts to contract mode\n                        if (contract_id) {\n                            const shortcode = response.buy.shortcode;\n                            const { category, underlying } = extractInfoFromShortcode(shortcode);\n                            const is_digit_contract = isDigitContractType(category.toUpperCase());\n                            const contract_type = category.toUpperCase();\n                            this.root_store.contract_trade.addContract({\n                                contract_id,\n                                start_time,\n                                longcode,\n                                underlying,\n                                barrier: is_digit_contract ? last_digit : null,\n                                contract_type,\n                                is_tick_contract,\n                            });\n                            this.root_store.portfolio.onBuyResponse({\n                                contract_id,\n                                longcode,\n                                contract_type,\n                            });\n                            // NOTE: changing chart granularity and chart_type has to be done in a different render cycle\n                            // so we have to set chart granularity to zero, and change the chart_type to 'mountain' first,\n                            // and then set the chart view to the start_time\n                            // draw the start time line and show longcode then mount contract\n                            // this.root_store.modules.contract_trade.drawContractStartTime(start_time, longcode, contract_id);\n                            if (isDesktop()) {\n                                this.root_store.ui.openPositionsDrawer();\n                            }\n                            this.proposal_info = {};\n                            this.forgetAllProposal();\n                            this.purchase_info = response;\n                            this.proposal_requests = {};\n                            this.debouncedProposal();\n                            this.clearLimitOrderBarriers();\n                            this.pushPurchaseDataToGtm(contract_data);\n                            this.setContractPurchaseToastbox(response.buy);\n                            this.is_purchasing_contract = false;\n                            return;\n                        }\n                    }\n                    this.forgetAllProposal();\n                    this.purchase_info = response;\n                    this.enablePurchase();\n                    this.is_purchasing_contract = false;\n                })\n            );\n        }\n    }\n\n    enablePurchase() {\n        if (!this.root_store.client.is_unwelcome) {\n            this.is_purchase_enabled = true;\n        }\n    }\n\n    disablePurchaseButtons = () => {\n        const el_purchase_value = document.getElementsByClassName('trade-container__price-info');\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        [].forEach.bind(el_purchase_buttons, el => {\n            el.classList.add('btn-purchase--disabled');\n        })();\n        [].forEach.bind(el_purchase_value, el => {\n            el.classList.add('trade-container__price-info--fade');\n        })();\n    };\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state) || {}).forEach(key => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(\n        obj_new_values = {},\n        is_changed_by_user = false,\n        obj_old_values = {},\n        should_forget_first = true\n    ) {\n        // To switch to rise_fall_equal contract type when allow equal is checked on first page refresh or\n        // when switch back to Rise/Fall from another contract type i.e.\n        if (obj_new_values.contract_type && obj_new_values.contract_type === 'rise_fall' && !!this.is_equal) {\n            obj_new_values.contract_type = 'rise_fall_equal';\n        }\n        // when accumulator is selected, we need to change chart type to mountain and granularity to 0\n        // and we need to restore previous chart type and granularity when accumulator is unselected\n        const {\n            prev_chart_type,\n            prev_granularity,\n            chart_type,\n            granularity,\n            savePreviousChartMode,\n            updateChartType,\n            updateGranularity,\n        } = this.root_store.contract_trade || {};\n        if (obj_new_values.contract_type === 'accumulator') {\n            savePreviousChartMode(chart_type, granularity);\n            updateGranularity(0);\n            updateChartType('mountain');\n        } else if (\n            (obj_new_values.contract_type || obj_new_values.symbol) &&\n            prev_chart_type &&\n            prev_granularity &&\n            (prev_chart_type !== chart_type || prev_granularity !== granularity)\n        ) {\n            updateGranularity(prev_granularity);\n            updateChartType(prev_chart_type);\n            savePreviousChartMode('', null);\n        }\n\n        if (/\\bduration\\b/.test(Object.keys(obj_new_values))) {\n            // TODO: fix this in input-field.jsx\n            if (typeof obj_new_values.duration === 'string') {\n                obj_new_values.duration = +obj_new_values.duration;\n            }\n        }\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (should_forget_first) {\n            this.forgetAllProposal();\n            this.proposal_requests = {};\n        }\n        if (is_changed_by_user && /\\bcurrency\\b/.test(Object.keys(obj_new_values))) {\n            const prev_currency = obj_old_values?.currency || this.currency;\n            const has_currency_changed = obj_new_values.currency !== prev_currency;\n\n            const should_reset_stake =\n                isCryptocurrency(obj_new_values.currency) ||\n                // For switch between fiat and crypto and vice versa\n                isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency);\n\n            if (has_currency_changed && should_reset_stake) {\n                obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (Object.keys(obj_new_values).includes('symbol')) {\n            this.setPreviousSymbol(this.symbol);\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol);\n            this.setMarketStatus(isMarketClosed(this.active_symbols, obj_new_values.symbol));\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            this.updateStore({\n                // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info: {},\n            });\n\n            // To prevent infinite loop when changing from advanced end_time to digit type contract\n            if (obj_new_values.contract_type && this.root_store.ui.is_advanced_duration) {\n                if (isDigitTradeType(obj_new_values.contract_type)) {\n                    this.barrier_1 = '';\n                    this.barrier_2 = '';\n                    this.expiry_type = 'duration';\n                    this.root_store.ui.is_advanced_duration = false;\n                }\n            }\n\n            // TODO: handle barrier updates on proposal api\n            // const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n            await processTradeParams(this, new_state);\n\n            this.updateStore({\n                ...(!this.is_initial_barrier_applied ? this.initial_barriers : {}),\n            });\n            this.is_initial_barrier_applied = true;\n            if (/\\b(contract_type|currency)\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n            this.debouncedProposal();\n        }\n    }\n\n    get is_synthetics_available() {\n        return !!this.active_symbols?.find(item => item.market === 'synthetic_index');\n    }\n\n    get is_synthetics_trading_market_available() {\n        return !!this.active_symbols?.find(\n            item => item.market === 'synthetic_index' && !isMarketClosed(this.active_symbols, item.symbol)\n        );\n    }\n\n    get show_digits_stats() {\n        return isDigitTradeType(this.contract_type);\n    }\n\n    setMobileDigitView(bool) {\n        this.is_mobile_digit_view_selected = bool;\n    }\n\n    pushPurchaseDataToGtm(contract_data) {\n        const data = {\n            event: 'buy_contract',\n            bom_ui: 'new',\n            contract: {\n                amount: contract_data.amount,\n                barrier1: contract_data.barrier,\n                barrier2: contract_data.barrier2,\n                basis: contract_data.basis,\n                buy_price: contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency: contract_data.currency,\n                date_expiry: contract_data.date_expiry,\n                date_start: contract_data.date_start,\n                duration: contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout: contract_data.payout,\n                symbol: contract_data.symbol,\n            },\n            settings: {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                chart: {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type: this.root_store.contract_trade.chart_type,\n                    granularity: this.root_store.contract_trade.granularity,\n                },\n            },\n        };\n        this.root_store.gtm.pushDataLayer(data);\n    }\n\n    clearPurchaseInfo() {\n        this.purchase_info = {};\n        this.proposal_requests = {};\n        this.proposal_info = {};\n    }\n\n    requestProposal() {\n        const requests = createProposalRequests(this);\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            this.forgetAllProposal();\n            if (this.is_accumulator) this.resetAccumulatorData();\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            this.proposal_requests = requests;\n            this.purchase_info = {};\n            Object.keys(this.proposal_requests).forEach(type => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    forgetAllProposal() {\n        const length = Object.keys(this.proposal_requests).length;\n        if (length > 0) WS.forgetAll('proposal');\n    }\n\n    setMarketStatus(status) {\n        this.is_market_closed = status;\n    }\n\n    onProposalResponse(response) {\n        const { contract_type } = response.echo_req;\n        const prev_proposal_info = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        // add/update expiration or date_expiry for crypto indices from proposal\n        const date_expiry = response.proposal?.date_expiry;\n        this.expiry_epoch = date_expiry || this.expiry_epoch;\n\n        if (!response.error && !!date_expiry && this.is_crypto_multiplier) {\n            this.expiration = date_expiry;\n        }\n\n        this.proposal_info = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (this.is_multiplier && this.proposal_info && this.proposal_info.MULTUP) {\n            const { commission, cancellation, limit_order } = this.proposal_info.MULTUP;\n            // commission and cancellation.ask_price is the same for MULTUP/MULTDOWN\n            if (commission) {\n                this.commission = commission;\n            }\n            if (cancellation) {\n                this.cancellation_price = cancellation.ask_price;\n            }\n            this.stop_out = limit_order?.stop_out?.order_amount;\n        }\n        if (this.is_accumulator && this.proposal_info?.ACCU) {\n            const {\n                barrier_spot_distance,\n                maximum_ticks,\n                ticks_stayed_in,\n                tick_size_barrier,\n                last_tick_epoch,\n                maximum_payout,\n                high_barrier,\n                low_barrier,\n                spot_time,\n            } = this.proposal_info.ACCU;\n            this.ticks_history_stats = getUpdatedTicksHistoryStats({\n                previous_ticks_history_stats: this.ticks_history_stats,\n                new_ticks_history_stats: ticks_stayed_in,\n                last_tick_epoch,\n            });\n            this.maximum_ticks = maximum_ticks;\n            this.maximum_payout = maximum_payout;\n            this.tick_size_barrier = tick_size_barrier;\n            const { updateAccumulatorBarriersData } = this.root_store.contract_trade || {};\n            if (updateAccumulatorBarriersData) {\n                updateAccumulatorBarriersData({\n                    accumulators_high_barrier: high_barrier,\n                    accumulators_low_barrier: low_barrier,\n                    barrier_spot_distance,\n                    current_spot_time: spot_time,\n                    underlying: this.symbol,\n                });\n            }\n        }\n\n        if (!this.main_barrier || this.main_barrier?.shade) {\n            this.setMainBarrier(response.echo_req);\n        }\n\n        if (this.hovered_contract_type === contract_type) {\n            this.addTickByProposal(response);\n            setLimitOrderBarriers({\n                barriers: this.root_store.portfolio.barriers,\n                contract_info: this.proposal_info[this.hovered_contract_type],\n                contract_type,\n                is_over: true,\n            });\n        }\n\n        if (response.error) {\n            const error_id = getProposalErrorField(response);\n            if (error_id) {\n                this.setValidationErrorMessages(error_id, [response.error.message]);\n            }\n            // Commission for multipliers is normally set from proposal response.\n            // But when we change the multiplier and if it is invalid, we don't get the proposal response to set the commission. We only get error message.\n            // This is a work around to set the commission from error message.\n            if (this.is_multiplier) {\n                const { message, details } = response.error;\n                const commission_match = (message || '').match(/\\((\\d+\\.*\\d*)\\)/);\n                if (details?.field === 'stop_loss' && commission_match?.[1]) {\n                    this.commission = commission_match[1];\n                }\n            }\n            if (this.is_accumulator) this.resetAccumulatorData();\n\n            // Sometimes when we navigate fast, `forget_all` proposal is called immediately after proposal subscription calls.\n            // But, in the BE, `forget_all` proposal call is processed before the proposal subscriptions are registered. In this case, `forget_all` proposal doesn't forget the new subscriptions.\n            // So when we send new proposal subscription requests, we get `AlreadySubscribed` error.\n            // If we get an error message with code `AlreadySubscribed`, `forget_all` proposal will be called and all the existing subscriptions will be marked as complete in `deriv-api` and will subscribe to new proposals\n            if (response.error.code === 'AlreadySubscribed') {\n                this.refresh();\n\n                if (this.is_trade_component_mounted) {\n                    this.debouncedProposal();\n                }\n                return;\n            }\n\n            // Sometimes the initial barrier doesn't match with current barrier choices received from API.\n            // When this happens we want to populate the list of barrier choices to choose from since the value cannot be specified manually\n            if ((this.is_turbos || this.is_vanilla) && response.error.details?.barrier_choices) {\n                const { barrier_choices, max_stake, min_stake } = response.error.details;\n                this.setStakeBoundary(contract_type, min_stake, max_stake);\n                this.setBarrierChoices(barrier_choices);\n                if (!this.barrier_choices.includes(this.barrier_1)) {\n                    // Since on change of duration `proposal` API call is made which returns a new set of barrier values.\n                    // The new list is set and the mid value is assigned\n                    const index = Math.floor(this.barrier_choices.length / 2);\n                    this.barrier_1 = this.is_vanilla ? this.barrier_choices[index] : this.barrier_choices[0];\n                    this.onChange({\n                        target: {\n                            name: 'barrier_1',\n                            value: this.barrier_1,\n                        },\n                    });\n                }\n            }\n        } else {\n            this.validateAllProperties();\n            if (this.is_turbos || this.is_vanilla) {\n                const { max_stake, min_stake, barrier_choices } = response.proposal;\n                this.setBarrierChoices(barrier_choices);\n                this.setStakeBoundary(contract_type, min_stake, max_stake);\n            }\n        }\n\n        if (!this.is_purchasing_contract) {\n            this.enablePurchase();\n        }\n    }\n\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: parseInt(this.is_equal) ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    updateSymbol(underlying) {\n        if (!underlying) return;\n        this.onChange({\n            target: {\n                name: 'symbol',\n                value: underlying,\n            },\n        });\n    }\n\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        if (!this.validation_rules.duration) return;\n\n        const index = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    async accountSwitcherListener() {\n        if (this.root_store.common.is_language_changing) {\n            await this.loadActiveSymbols(false, false);\n            this.root_store.common.is_language_changing = false;\n        } else {\n            await this.loadActiveSymbols(true, false);\n        }\n\n        this.resetErrorServices();\n        await this.setContractTypes();\n        runInAction(async () => {\n            this.processNewValuesAsync(\n                { currency: this.root_store.client.currency || this.root_store.client.default_currency },\n                true,\n                { currency: this.currency },\n                false\n            );\n        });\n        return Promise.resolve();\n    }\n\n    preSwitchAccountListener() {\n        this.clearContracts();\n        this.is_trade_enabled = false;\n        return Promise.resolve();\n    }\n\n    async logoutListener() {\n        this.clearContracts();\n        this.refresh();\n        this.resetErrorServices();\n        if (this.root_store.common.is_language_changing) {\n            await this.loadActiveSymbols(false);\n            this.root_store.common.is_language_changing = false;\n        } else {\n            await this.loadActiveSymbols();\n        }\n        await this.setContractTypes();\n        this.is_trade_enabled = true;\n        this.debouncedProposal();\n    }\n\n    clientInitListener() {\n        this.initAccountCurrency(this.root_store.client.currency || this.root_store.client.default_currency);\n        return Promise.resolve();\n    }\n\n    networkStatusChangeListener(is_online) {\n        this.setTradeStatus(is_online);\n    }\n\n    themeChangeListener(is_dark_mode_on) {\n        this.updateBarrierColor(is_dark_mode_on);\n    }\n\n    resetErrorServices() {\n        this.root_store.ui.toggleServicesErrorModal(false);\n    }\n\n    onMount() {\n        if (this.is_trade_component_mounted && this.should_skip_prepost_lifecycle) {\n            return;\n        }\n        this.root_store.notifications.setShouldShowPopups(false);\n        this.onPreSwitchAccount(this.preSwitchAccountListener);\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.onLogout(this.logoutListener);\n        this.onClientInit(this.clientInitListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        this.onThemeChange(this.themeChangeListener);\n        this.setChartStatus(true);\n        runInAction(async () => {\n            this.is_trade_component_mounted = true;\n            await this.prepareTradeStore();\n            this.root_store.notifications.setShouldShowPopups(true);\n        });\n        // TODO: remove this function when the closure of MX and MLT accounts is completed.\n        this.manageMxMltRemovalNotification();\n    }\n\n    manageMxMltRemovalNotification() {\n        const { addNotificationMessage, client_notifications, notification_messages, unmarkNotificationMessage } =\n            this.root_store.notifications;\n        const get_notification_messages = JSON.parse(localStorage.getItem('notification_messages'));\n        const { has_iom_account, has_malta_account, is_logged_in } = this.root_store.client;\n        unmarkNotificationMessage({ key: 'close_mx_mlt_account' });\n        if (get_notification_messages !== null && is_logged_in && (has_iom_account || has_malta_account)) {\n            when(\n                () => is_logged_in && notification_messages.length === 0,\n                () => {\n                    const hidden_close_account_notification =\n                        parseInt(localStorage.getItem('hide_close_mx_mlt_account_notification')) === 1;\n                    const should_retain_notification =\n                        (has_iom_account || has_malta_account) && !hidden_close_account_notification;\n                    if (should_retain_notification) {\n                        addNotificationMessage(client_notifications.close_mx_mlt_account);\n                    }\n                }\n            );\n        }\n    }\n\n    setChartStatus(status) {\n        this.is_chart_loading = status;\n    }\n\n    async initAccountCurrency(new_currency) {\n        if (this.currency === new_currency) return;\n\n        await this.processNewValuesAsync({ currency: new_currency }, true, { currency: this.currency }, false);\n        this.refresh();\n        this.debouncedProposal();\n    }\n\n    onUnmount() {\n        if (this.should_skip_prepost_lifecycle) {\n            return;\n        }\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.is_trade_component_mounted = false;\n        // TODO: Find a more elegant solution to unmount contract-trade-store\n        this.root_store.contract_trade.onUnmount();\n        this.refresh();\n        this.resetErrorServices();\n        if (this.root_store.notifications.is_notifications_visible) {\n            this.root_store.notifications.toggleNotificationsModal();\n        }\n        if (this.prev_chart_layout) {\n            this.prev_chart_layout.is_used = false;\n        }\n        this.resetAccumulatorData();\n    }\n\n    prev_chart_layout = null;\n\n    get chart_layout() {\n        let layout = null;\n        if (this.prev_chart_layout && this.prev_chart_layout.is_used === false) {\n            layout = this.prev_chart_layout;\n        }\n        return layout;\n    }\n\n    get is_crypto_multiplier() {\n        return this.contract_type === 'multiplier' && /^cry/.test(this.symbol);\n    }\n\n    exportLayout(layout) {\n        delete layout.previousMaxTicks; // TODO: fix it in smartcharts\n        this.prev_chart_layout = layout;\n        this.prev_chart_layout.isDone = () => {\n            this.prev_chart_layout.is_used = true;\n            this.setChartStatus(false);\n        };\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (req, callback) => {\n        const passthrough_callback = (...args) => {\n            callback(...args);\n            if (this.is_accumulator) {\n                let current_spot_data = {};\n                if ('tick' in args[0]) {\n                    const { epoch, quote, symbol } = args[0].tick;\n                    if (this.symbol !== symbol) return;\n                    current_spot_data = {\n                        current_spot: quote,\n                        current_spot_time: epoch,\n                    };\n                } else if ('history' in args[0]) {\n                    const { prices, times } = args[0].history;\n                    const symbol = args[0].echo_req.ticks_history;\n                    if (this.symbol !== symbol) return;\n                    current_spot_data = {\n                        current_spot: prices[prices.length - 1],\n                        current_spot_time: times[times.length - 1],\n                    };\n                } else {\n                    return;\n                }\n                this.root_store.contract_trade.updateAccumulatorBarriersData(current_spot_data);\n            }\n        };\n        if (req.subscribe === 1) {\n            const key = JSON.stringify(req);\n            const subscriber = WS.subscribeTicksHistory(req, passthrough_callback);\n            g_subscribers_map[key] = subscriber;\n        }\n    };\n\n    wsForget = req => {\n        const key = JSON.stringify(req);\n        if (g_subscribers_map[key]) {\n            g_subscribers_map[key].unsubscribe();\n            delete g_subscribers_map[key];\n        }\n        // WS.forget('ticks_history', callback, match);\n    };\n\n    wsForgetStream = stream_id => {\n        WS.forgetStream(stream_id);\n    };\n\n    wsSendRequest = req => {\n        if (req.time) {\n            return ServerTime.timePromise().then(server_time => {\n                if (server_time) {\n                    return {\n                        msg_type: 'time',\n                        time: server_time.unix(),\n                    };\n                }\n                return WS.time();\n            });\n        }\n        if (req.active_symbols) {\n            return WS.activeSymbols('brief');\n        }\n        if (req.trading_times) {\n            return WS.tradingTimes(req.trading_times);\n        }\n        return WS.storage.send(req);\n    };\n\n    chartStateChange(state, option) {\n        const market_close_prop = 'isClosed';\n        switch (state) {\n            case 'MARKET_STATE_CHANGE':\n                if (option && market_close_prop in option) {\n                    if (this.is_trade_component_mounted && option[market_close_prop] !== this.is_market_closed)\n                        this.prepareTradeStore(false);\n                }\n                break;\n            default:\n        }\n    }\n\n    refToAddTick = ref => {\n        this.addTickByProposal = ref;\n    };\n\n    get has_alternative_source() {\n        return this.is_multiplier && !!this.hovered_contract_type;\n    }\n\n    get is_accumulator() {\n        return this.contract_type === 'accumulator';\n    }\n\n    get is_multiplier() {\n        return this.contract_type === 'multiplier';\n    }\n\n    get is_turbos() {\n        return isTurbosContract(this.contract_type);\n    }\n\n    get is_vanilla() {\n        return this.contract_type === 'vanilla';\n    }\n\n    setContractPurchaseToastbox(response) {\n        const list = getAvailableContractTypes(this.contract_types_list, unsupported_contract_types_list);\n\n        return (this.contract_purchase_toast_box = {\n            key: true,\n            buy_price: formatMoney(this.root_store.client.currency, response.buy_price, true, 0, 0),\n            contract_type: this.contract_type,\n            currency: getCurrencyDisplayCode(this.root_store.client.currency),\n            list,\n        });\n    }\n\n    clearContractPurchaseToastBox() {\n        this.contract_purchase_toast_box = undefined;\n    }\n\n    async getFirstOpenMarket(markets_to_search) {\n        if (this.active_symbols?.length) {\n            return findFirstOpenMarket(this.active_symbols, markets_to_search);\n        }\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n        if (error) {\n            this.root_store.common.showError({ message: localize('Trading is unavailable at this time.') });\n            return undefined;\n        }\n        return findFirstOpenMarket(active_symbols, markets_to_search);\n    }\n\n    setBarrierChoices(barrier_choices) {\n        this.barrier_choices = barrier_choices ?? [];\n        if (this.is_turbos) {\n            const stored_barriers_data = { barrier: this.barrier_1, barrier_choices };\n            if (getContractSubtype(this.contract_type) === 'Long') {\n                this.long_barriers = stored_barriers_data;\n            } else {\n                this.short_barriers = stored_barriers_data;\n            }\n        }\n    }\n\n    setStakeBoundary(type, min_stake, max_stake) {\n        if (min_stake && max_stake) this.stake_boundary[type] = { min_stake, max_stake };\n    }\n}\n","import TradeStore from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store, core_store) {\n        this.cashier = core_store.modules.cashier;\n        this.trade = new TradeStore({ root_store });\n    }\n}\n","import ModulesStore from './Modules';\n\nexport default class RootStore {\n    constructor(core_store) {\n        this.client = core_store.client;\n        this.common = core_store.common;\n        this.modules = new ModulesStore(this, core_store);\n        this.ui = core_store.ui;\n        this.gtm = core_store.gtm;\n        this.pushwoosh = core_store.pushwoosh;\n        this.notifications = core_store.notifications;\n        this.contract_replay = core_store.contract_replay;\n        this.contract_trade = core_store.contract_trade;\n        this.portfolio = core_store.portfolio;\n        this.chart_barrier_store = core_store.chart_barrier_store;\n        this.active_symbols = core_store.active_symbols;\n    }\n}\n","import { configure } from 'mobx';\nimport RootStore from 'Stores';\nimport { setWebsocket } from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\n\nconfigure({ enforceActions: 'observed' });\n\nlet root_store;\n\nconst initStore = (core_store, websocket) => {\n    if (root_store) return root_store;\n\n    ServerTime.init(core_store.common);\n    setWebsocket(websocket);\n    root_store = new RootStore(core_store);\n\n    return root_store;\n};\n\nexport default initStore;\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport Routes from 'App/Containers/Routes/routes.jsx';\nimport TradeHeaderExtensions from 'App/Containers/trade-header-extensions';\nimport TradeFooterExtensions from 'App/Containers/trade-footer-extensions.jsx';\nimport TradeSettingsExtensions from 'App/Containers/trade-settings-extensions';\nimport { NetworkStatusToastErrorPopup } from 'Modules/Trading/Containers/toast-popup.jsx';\nimport initStore from './init-store';\nimport 'Sass/app.scss';\nimport type { TCoreStores } from '@deriv/stores/types';\nimport TraderProviders from '../trader-providers';\n\ntype Apptypes = {\n    passthrough: {\n        root_store: TCoreStores;\n        WS: unknown;\n    };\n};\n\nconst TradeModals = Loadable({\n    loader: () => import(/* webpackChunkName: \"trade-modals\", webpackPrefetch: true */ './Containers/Modals'),\n    loading: () => null,\n});\n\nconst App = ({ passthrough }: Apptypes) => {\n    const root_store = initStore(passthrough.root_store, passthrough.WS);\n    React.useEffect(() => {\n        return () => root_store.ui.setPromptHandler(false);\n    }, [root_store]);\n\n    return (\n        <TraderProviders store={root_store}>\n            <Routes />\n            <TradeModals />\n            <NetworkStatusToastErrorPopup />\n            <TradeHeaderExtensions store={root_store} />\n            <TradeFooterExtensions />\n            <TradeSettingsExtensions store={root_store} />\n        </TraderProviders>\n    );\n};\n\nexport default App;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { localize, Localize } from '@deriv/translations';\n\nexport const getCardLabels = () => ({\n    APPLY: localize('Apply'),\n    BARRIER: localize('Barrier:'),\n    BUY_PRICE: localize('Buy price:'),\n    CANCEL: localize('Cancel'),\n    CLOSE: localize('Close'),\n    CONTRACT_VALUE: localize('Contract value:'),\n    CURRENT_STAKE: localize('Current stake:'),\n    DAY: localize('day'),\n    DAYS: localize('days'),\n    DEAL_CANCEL_FEE: localize('Deal cancel. fee:'),\n    DECREMENT_VALUE: localize('Decrement value'),\n    DONT_SHOW_THIS_AGAIN: localize(\"Don't show this again\"),\n    ENTRY_SPOT: localize('Entry spot:'),\n    INCREMENT_VALUE: localize('Increment value'),\n    NOT_AVAILABLE: localize('N/A'),\n    RESALE_NOT_OFFERED: localize('Resale not offered'),\n    SELL: localize('Sell'),\n    STAKE: localize('Stake:'),\n    STOP_LOSS: localize('Stop loss:'),\n    STRIKE: localize('Strike:'),\n    TICK: localize('Tick '),\n    TICKS: localize('Ticks'),\n    TOTAL_PROFIT_LOSS: localize('Total profit/loss:'),\n    PROFIT_LOSS: localize('Profit/Loss:'),\n    POTENTIAL_PROFIT_LOSS: localize('Potential profit/loss:'),\n    INDICATIVE_PRICE: localize('Indicative price:'),\n    INITIAL_STAKE: localize('Initial stake:'),\n    LOST: localize('Lost'),\n    PAYOUT: localize('Sell price:'),\n    PURCHASE_PRICE: localize('Buy price:'),\n    POTENTIAL_PAYOUT: localize('Payout limit:'),\n    TAKE_PROFIT: localize('Take profit:'),\n    TAKE_PROFIT_LOSS_NOT_AVAILABLE: localize(\n        'Take profit and/or stop loss are not available while deal cancellation is active.'\n    ),\n    WON: localize('Won'),\n});\n\nexport const getMarketNamesMap = () => ({\n    FRXAUDCAD: localize('AUD/CAD'),\n    FRXAUDCHF: localize('AUD/CHF'),\n    FRXAUDJPY: localize('AUD/JPY'),\n    FRXAUDNZD: localize('AUD/NZD'),\n    FRXAUDPLN: localize('AUD/PLN'),\n    FRXAUDUSD: localize('AUD/USD'),\n    FRXBROUSD: localize('Oil/USD'),\n    FRXEURAUD: localize('EUR/AUD'),\n    FRXEURCAD: localize('EUR/CAD'),\n    FRXEURCHF: localize('EUR/CHF'),\n    FRXEURGBP: localize('EUR/GBP'),\n    FRXEURJPY: localize('EUR/JPY'),\n    FRXEURNZD: localize('EUR/NZD'),\n    FRXEURUSD: localize('EUR/USD'),\n    FRXGBPAUD: localize('GBP/AUD'),\n    FRXGBPCAD: localize('GBP/CAD'),\n    FRXGBPCHF: localize('GBP/CHF'),\n    FRXGBPJPY: localize('GBP/JPY'),\n    FRXGBPNOK: localize('GBP/NOK'),\n    FRXGBPUSD: localize('GBP/USD'),\n    FRXNZDJPY: localize('NZD/JPY'),\n    FRXNZDUSD: localize('NZD/USD'),\n    FRXUSDCAD: localize('USD/CAD'),\n    FRXUSDCHF: localize('USD/CHF'),\n    FRXUSDJPY: localize('USD/JPY'),\n    FRXUSDNOK: localize('USD/NOK'),\n    FRXUSDPLN: localize('USD/PLN'),\n    FRXUSDSEK: localize('USD/SEK'),\n    FRXXAGUSD: localize('Silver/USD'),\n    FRXXAUUSD: localize('Gold/USD'),\n    FRXXPDUSD: localize('Palladium/USD'),\n    FRXXPTUSD: localize('Platinum/USD'),\n    OTC_AEX: localize('Netherlands 25'),\n    OTC_AS51: localize('Australia 200'),\n    OTC_DJI: localize('Wall Street 30'),\n    OTC_FCHI: localize('France 40'),\n    OTC_FTSE: localize('UK 100'),\n    OTC_GDAXI: localize('Germany 40'),\n    OTC_HSI: localize('Hong Kong 50'),\n    OTC_IBEX35: localize('Spanish Index'),\n    OTC_N225: localize('Japan 225'),\n    OTC_NDX: localize('US Tech 100'),\n    OTC_SPC: localize('US 500'),\n    OTC_SSMI: localize('Swiss 20'),\n    OTC_SX5E: localize('Euro 50'),\n    R_10: localize('Volatility 10 Index'),\n    R_25: localize('Volatility 25 Index'),\n    R_50: localize('Volatility 50 Index'),\n    R_75: localize('Volatility 75 Index'),\n    R_100: localize('Volatility 100 Index'),\n    BOOM300N: localize('Boom 300 Index'),\n    BOOM500: localize('Boom 500 Index'),\n    BOOM1000: localize('Boom 1000 Index'),\n    CRASH300N: localize('Crash 300 Index'),\n    CRASH500: localize('Crash 500 Index'),\n    CRASH1000: localize('Crash 1000 Index'),\n    RDBEAR: localize('Bear Market Index'),\n    RDBULL: localize('Bull Market Index'),\n    STPRNG: localize('Step Index'),\n    WLDAUD: localize('AUD Basket'),\n    WLDEUR: localize('EUR Basket'),\n    WLDGBP: localize('GBP Basket'),\n    WLDXAU: localize('Gold Basket'),\n    WLDUSD: localize('USD Basket'),\n    '1HZ10V': localize('Volatility 10 (1s) Index'),\n    '1HZ100V': localize('Volatility 100 (1s) Index'),\n    '1HZ150V': localize('Volatility 150 (1s) Index'),\n    '1HZ200V': localize('Volatility 200 (1s) Index'),\n    '1HZ250V': localize('Volatility 250 (1s) Index'),\n    '1HZ300V': localize('Volatility 300 (1s) Index'),\n    JD10: localize('Jump 10 Index'),\n    JD25: localize('Jump 25 Index'),\n    JD50: localize('Jump 50 Index'),\n    JD75: localize('Jump 75 Index'),\n    JD100: localize('Jump 100 Index'),\n    JD150: localize('Jump 150 Index'),\n    JD200: localize('Jump 200 Index'),\n    CRYBCHUSD: localize('BCH/USD'),\n    CRYBNBUSD: localize('BNB/USD'),\n    CRYBTCLTC: localize('BTC/LTC'),\n    CRYIOTUSD: localize('IOT/USD'),\n    CRYNEOUSD: localize('NEO/USD'),\n    CRYOMGUSD: localize('OMG/USD'),\n    CRYTRXUSD: localize('TRX/USD'),\n    CRYBTCETH: localize('BTC/ETH'),\n    CRYZECUSD: localize('ZEC/USD'),\n    CRYXMRUSD: localize('ZMR/USD'),\n    CRYXMLUSD: localize('XLM/USD'),\n    CRYXRPUSD: localize('XRP/USD'),\n    CRYBTCUSD: localize('BTC/USD'),\n    CRYDSHUSD: localize('DSH/USD'),\n    CRYETHUSD: localize('ETH/USD'),\n    CRYEOSUSD: localize('EOS/USD'),\n    CRYLTCUSD: localize('LTC/USD'),\n});\n\nexport const getUnsupportedContracts = () => ({\n    RESETCALL: {\n        name: <Localize i18n_default_text='Reset Call' />,\n        position: 'top',\n    },\n    RESETPUT: {\n        name: <Localize i18n_default_text='Reset Put' />,\n        position: 'bottom',\n    },\n    TICKHIGH: {\n        name: <Localize i18n_default_text='High Tick' />,\n        position: 'top',\n    },\n    TICKLOW: {\n        name: <Localize i18n_default_text='Low Tick' />,\n        position: 'bottom',\n    },\n    ASIANU: {\n        name: <Localize i18n_default_text='Asian Up' />,\n        position: 'top',\n    },\n    ASIAND: {\n        name: <Localize i18n_default_text='Asian Down' />,\n        position: 'bottom',\n    },\n    LBFLOATCALL: {\n        name: <Localize i18n_default_text='Close-to-Low' />,\n        position: 'top',\n    },\n    LBFLOATPUT: {\n        name: <Localize i18n_default_text='High-to-Close' />,\n        position: 'top',\n    },\n    LBHIGHLOW: {\n        name: <Localize i18n_default_text='High-to-Low' />,\n        position: 'top',\n    },\n    CALLSPREAD: {\n        name: <Localize i18n_default_text='Spread Up' />,\n        position: 'top',\n    },\n    PUTSPREAD: {\n        name: <Localize i18n_default_text='Spread Down' />,\n        position: 'bottom',\n    },\n});\n\n// Config to display trade button and their position\nexport const getSupportedContracts = is_high_low => ({\n    ACCU: {\n        button_name: <Localize i18n_default_text='Buy' />,\n        name: <Localize i18n_default_text='Accumulators' />,\n        position: 'top',\n    },\n    CALL: {\n        name: is_high_low ? <Localize i18n_default_text='Higher' /> : <Localize i18n_default_text='Rise' />,\n        position: 'top',\n    },\n    PUT: {\n        name: is_high_low ? <Localize i18n_default_text='Lower' /> : <Localize i18n_default_text='Fall' />,\n        position: 'bottom',\n    },\n    CALLE: {\n        name: <Localize i18n_default_text='Rise' />,\n        position: 'top',\n    },\n    PUTE: {\n        name: <Localize i18n_default_text='Fall' />,\n        position: 'bottom',\n    },\n    DIGITMATCH: {\n        name: <Localize i18n_default_text='Matches' />,\n        position: 'top',\n    },\n    DIGITDIFF: {\n        name: <Localize i18n_default_text='Differs' />,\n        position: 'bottom',\n    },\n    DIGITEVEN: {\n        name: <Localize i18n_default_text='Even' />,\n        position: 'top',\n    },\n    DIGITODD: {\n        name: <Localize i18n_default_text='Odd' />,\n        position: 'bottom',\n    },\n    DIGITOVER: {\n        name: <Localize i18n_default_text='Over' />,\n        position: 'top',\n    },\n    DIGITUNDER: {\n        name: <Localize i18n_default_text='Under' />,\n        position: 'bottom',\n    },\n    ONETOUCH: {\n        name: <Localize i18n_default_text='Touch' />,\n        position: 'top',\n    },\n    NOTOUCH: {\n        name: <Localize i18n_default_text='No Touch' />,\n        position: 'bottom',\n    },\n    MULTUP: {\n        name: <Localize i18n_default_text='Up' />,\n        position: 'top',\n    },\n    MULTDOWN: {\n        name: <Localize i18n_default_text='Down' />,\n        position: 'bottom',\n    },\n    TURBOSLONG: {\n        button_name: <Localize i18n_default_text='Long' />,\n        name: <Localize i18n_default_text='Turbos' />,\n        position: 'top',\n    },\n    TURBOSSHORT: {\n        button_name: <Localize i18n_default_text='Short' />,\n        name: <Localize i18n_default_text='Turbos' />,\n        position: 'bottom',\n    },\n    VANILLALONGCALL: {\n        name: <Localize i18n_default_text='Call' />,\n        position: 'top',\n    },\n    VANILLALONGPUT: {\n        name: <Localize i18n_default_text='Put' />,\n        position: 'bottom',\n    },\n    RUNHIGH: {\n        name: <Localize i18n_default_text='Only Ups' />,\n        position: 'top',\n    },\n    RUNLOW: {\n        name: <Localize i18n_default_text='Only Downs' />,\n        position: 'bottom',\n    },\n    EXPIRYMISS: {\n        name: <Localize i18n_default_text='Ends Outside' />,\n        position: 'top',\n    },\n    EXPIRYRANGE: {\n        name: <Localize i18n_default_text='Ends Between' />,\n        position: 'bottom',\n    },\n    RANGE: {\n        name: <Localize i18n_default_text='Stays Between' />,\n        position: 'top',\n    },\n    UPORDOWN: {\n        name: <Localize i18n_default_text='Goes Outside' />,\n        position: 'bottom',\n    },\n});\n\nexport const getContractConfig = is_high_low => ({\n    ...getSupportedContracts(is_high_low),\n    ...getUnsupportedContracts(),\n});\n\nexport const getContractTypeDisplay = (type, is_high_low = false, show_button_name = false) => {\n    const contract_config = getContractConfig(is_high_low)[type];\n    return (show_button_name && contract_config.button_name) || contract_config.name || '';\n};\n\nexport const getContractTypePosition = (type, is_high_low = false) =>\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].position : 'top';\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype TTicksHistoryCounter = {\n    has_progress_dots: boolean;\n    should_emphasize_last_counter?: boolean;\n    value: number;\n};\n\nconst TicksHistoryCounter = ({ has_progress_dots, value, should_emphasize_last_counter }: TTicksHistoryCounter) => {\n    const should_highlight_last_counter = should_emphasize_last_counter && has_progress_dots && value === 0;\n    return (\n        <div\n            data-testid='dt_accu_stats_history_counter'\n            className={classNames('accumulators-stats__history-counter', {\n                'accumulators-stats__history-counter--emphasized': should_highlight_last_counter,\n            })}\n        >\n            {value}\n            {has_progress_dots && (\n                <div className='accumulators-stats__progress-dots'>\n                    {[1, 2, 3].map(dot => {\n                        return <span key={`ticks-dot-counter${dot}`} className={`dot-${dot}`} />;\n                    })}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default React.memo(TicksHistoryCounter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from '@deriv/components';\nimport TicksHistoryCounter from './ticks-history-counter';\n\ntype TExpandedTicksHistoryProps = {\n    history_text_size: string;\n    rows: number[][];\n};\n\nconst ExpandedTicksHistory = ({ history_text_size, rows }: TExpandedTicksHistoryProps) => (\n    <Text size={history_text_size} className='accumulators-stats__history--expanded'>\n        {rows.map((row, i) => (\n            <div\n                key={i.toString() + row[0]}\n                data-testid='dt_accu_stats_history_row'\n                className='accumulators-stats__row'\n            >\n                {row.map((counter, idx) => (\n                    <TicksHistoryCounter\n                        key={idx.toString() + counter}\n                        value={counter}\n                        has_progress_dots={i === 0 && idx === 0}\n                    />\n                ))}\n            </div>\n        ))}\n    </Text>\n);\n\nExpandedTicksHistory.propTypes = {\n    history_text_size: PropTypes.string,\n    rows: PropTypes.array,\n};\n\nexport default React.memo(ExpandedTicksHistory);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, Loading, Modal, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getUrlBase, isMobile } from '@deriv/shared';\nimport 'Sass/app/modules/contract/accumulators-stats.scss';\n\nconst AccumulatorsStatsManualModal = ({ icon_classname, is_dark_theme, is_manual_open, title, toggleManual }) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const is_mobile = isMobile();\n    // memoize file paths for videos and open the modal only after we get them\n    const getVideoSource = React.useCallback(\n        extension => {\n            return getUrlBase(\n                `/public/videos/accumulators_manual_${is_mobile ? 'mobile' : 'desktop'}${\n                    is_dark_theme ? '_dark' : ''\n                }.${extension}`\n            );\n        },\n        [is_mobile, is_dark_theme]\n    );\n    const mp4_src = React.useMemo(() => getVideoSource('mp4'), [getVideoSource]);\n    const webm_src = React.useMemo(() => getVideoSource('webm'), [getVideoSource]);\n\n    return (\n        <React.Fragment>\n            <Icon icon='IcInfoOutline' onClick={toggleManual} size={16} className={icon_classname} />\n            <Modal\n                is_open={is_manual_open && !!mp4_src && !!webm_src}\n                should_header_stick_body={false}\n                title={title}\n                toggleModal={toggleManual}\n                width={is_mobile ? '328px' : '596px'}\n                className='accumulators-stats-manual-modal'\n            >\n                <Modal.Body className='accumulators-stats-modal-body'>\n                    <div className='accumulators-stats-modal-body__video'>\n                        {is_loading && <Loading is_fullscreen={false} />}\n                        <video\n                            autoPlay\n                            data-testid='dt_accumulators_stats_manual_video'\n                            loop\n                            onLoadedData={() => setIsLoading(false)}\n                            playsInline\n                            preload='auto'\n                            width={is_mobile ? 296 : 563}\n                        >\n                            {/* a browser will select a source with extension it recognizes */}\n                            <source src={mp4_src} type='video/mp4' />\n                            <source src={webm_src} type='video/webm' />\n                            {localize('Unfortunately, your browser does not support the video.')}\n                        </video>\n                    </div>\n                    <Text\n                        as='p'\n                        size={is_mobile ? 'xs' : 's'}\n                        color='prominent'\n                        className='accumulators-stats-modal-body__text'\n                    >\n                        {localize(\n                            'Stats show the history of consecutive tick counts, i.e. the number of ticks the price remained within range continuously.'\n                        )}\n                    </Text>\n                </Modal.Body>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nAccumulatorsStatsManualModal.propTypes = {\n    icon_classname: PropTypes.string,\n    is_dark_theme: PropTypes.bool,\n    is_manual_open: PropTypes.bool,\n    title: PropTypes.string,\n    toggleManual: PropTypes.func,\n};\n\nexport { AccumulatorsStatsManualModal };\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { DesktopWrapper, Icon, MobileDialog, MobileWrapper, Text } from '@deriv/components';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport ExpandedTicksHistory from './expanded-ticks-history';\nimport TicksHistoryCounter from './ticks-history-counter';\nimport { AccumulatorsStatsManualModal } from './accumulators-stats-manual-modal';\nimport 'Sass/app/modules/contract/accumulators-stats.scss';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const ROW_SIZES = {\n    DESKTOP_COLLAPSED: 10,\n    DESKTOP_EXPANDED: 10,\n    MOBILE_COLLAPSED: 15,\n    MOBILE_EXPANDED: 5,\n};\n\nconst AccumulatorsStats = observer(({ is_expandable = true }) => {\n    const { ui } = useStore();\n    const { ticks_history_stats = {} } = useTraderStore();\n    const { is_dark_mode_on: is_dark_theme } = ui;\n\n    const [is_collapsed, setIsCollapsed] = React.useState(true);\n    const [is_manual_open, setIsManualOpen] = React.useState(false);\n    const widget_title = localize('Stats');\n    const ticks_history = ticks_history_stats?.ticks_stayed_in || [];\n    const history_text_size = isDesktop() || !is_collapsed ? 'xxs' : 'xxxs';\n\n    const rows = ticks_history.reduce((acc, _el, index) => {\n        const desktop_row_size = is_collapsed ? ROW_SIZES.DESKTOP_COLLAPSED : ROW_SIZES.DESKTOP_EXPANDED;\n        const mobile_row_size = is_collapsed ? ROW_SIZES.MOBILE_COLLAPSED : ROW_SIZES.MOBILE_EXPANDED;\n        const row_size = isDesktop() ? desktop_row_size : mobile_row_size;\n        if (index % row_size === 0) {\n            acc.push(ticks_history.slice(index, index + row_size));\n        }\n        return acc;\n    }, []);\n\n    if (!ticks_history.length) return null;\n\n    return (\n        <div className='accumulators-stats'>\n            <div className={classNames('accumulators-stats__container--collapsed')}>\n                <div className='accumulators-stats__title'>\n                    <AccumulatorsStatsManualModal\n                        is_dark_theme={is_dark_theme}\n                        icon_classname='info'\n                        is_manual_open={is_manual_open}\n                        title={widget_title}\n                        toggleManual={() => setIsManualOpen(!is_manual_open)}\n                    />\n                    <Text weight='bold' size={isMobile() ? 'xxxs' : 'xxs'} className='accumulators-stats__title-text'>\n                        {widget_title}\n                    </Text>\n                </div>\n                <Text size={history_text_size} className='accumulators-stats__history'>\n                    {!is_collapsed ? (\n                        <div className='accumulators-stats__history-heading'>{localize('Number of ticks')}</div>\n                    ) : (\n                        rows[0]?.map((el, i) => <TicksHistoryCounter key={i} value={el} has_progress_dots={i === 0} />)\n                    )}\n                </Text>\n            </div>\n            {is_expandable && !is_collapsed && (\n                <React.Fragment>\n                    <DesktopWrapper>\n                        <ExpandedTicksHistory history_text_size={history_text_size} rows={rows} />\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <MobileDialog\n                            onClose={() => setIsCollapsed(!is_collapsed)}\n                            portal_element_id='modal_root'\n                            title={widget_title}\n                            visible={!is_collapsed}\n                            wrapper_classname='accumulators-stats'\n                        >\n                            <ExpandedTicksHistory history_text_size={history_text_size} rows={rows} />\n                        </MobileDialog>\n                    </MobileWrapper>\n                </React.Fragment>\n            )}\n            {is_expandable && (\n                <Icon\n                    icon={is_collapsed ? 'IcArrowUp' : 'IcArrowDown'}\n                    onClick={() => setIsCollapsed(!is_collapsed)}\n                    className='accordion-toggle-arrow'\n                />\n            )}\n        </div>\n    );\n});\n\nAccumulatorsStats.propTypes = {\n    is_expandable: PropTypes.bool,\n};\n\nexport default AccumulatorsStats;\n","import AccumulatorsStats from './accumulators-stats.jsx';\n\nexport default AccumulatorsStats;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Digit = ({ is_latest, is_lost, is_selected, is_won, percentage, value }) => {\n    const display_percentage = percentage && !isNaN(percentage) ? parseFloat(percentage).toFixed(1) : null;\n    return (\n        <React.Fragment>\n            <span\n                className={classNames('digits__digit-value', {\n                    'digits__digit-value--latest': is_latest,\n                    'digits__digit-value--selected': is_selected,\n                    'digits__digit-value--win': is_won && is_latest,\n                    'digits__digit-value--loss': is_lost && is_latest,\n                })}\n            >\n                <i\n                    className={classNames('digits__digit-display-value', {\n                        'digits__digit-display-value--no-stats': !display_percentage,\n                    })}\n                >\n                    {value}\n                </i>\n                {!!display_percentage && <i className='digits__digit-display-percentage'>{display_percentage}%</i>}\n            </span>\n        </React.Fragment>\n    );\n};\n\nDigit.propTypes = {\n    is_latest: PropTypes.bool,\n    is_lost: PropTypes.bool,\n    is_selected: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won: PropTypes.bool,\n    percentage: PropTypes.number,\n    value: PropTypes.number,\n};\n\nexport default Digit;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\n\nconst DigitSpot = ({ current_spot, is_selected_winning, is_lost, is_won }) => (\n    <React.Fragment>\n        <Text size='xs' align='center' weight='bold' className='digits__digit-spot-value'>\n            {current_spot.slice(0, -1)}\n        </Text>\n        <span\n            className={classNames('digits__digit-spot-last', {\n                'digits__digit-spot-last--selected-win': is_selected_winning,\n                'digits__digit-spot-last--win': is_won,\n                'digits__digit-spot-last--loss': is_lost,\n            })}\n        >\n            {current_spot.slice(-1)}\n        </span>\n    </React.Fragment>\n);\n\nDigitSpot.propTypes = {\n    current_spot: PropTypes.string,\n    is_lost: PropTypes.bool,\n    is_selected_winning: PropTypes.bool,\n    is_won: PropTypes.bool,\n};\n\nexport default DigitSpot;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst LastDigitStat = ({ is_max, is_min, is_selected, percentage }) => {\n    // interpolate color opacity within 7.5 to 12.5 range\n    let opacity = (percentage - 10) / 4;\n    opacity = Math.min(Math.max(opacity, -1), +1);\n    opacity = ((opacity + 1) / 2) * 0.85 + 0.15;\n    const w = 339.292;\n    let p = (20 * percentage - 102) / 3 / 100;\n    p = Math.max(Math.min(p, 0.66), 0.06);\n\n    return (\n        <div\n            className={classNames('digits__pie-container', {\n                'digits__pie-container--selected': is_selected,\n            })}\n        >\n            <svg className='digits__pie-progress' width='120' height='120' viewBox='0 0 120 120'>\n                <circle className='progress__bg' cx='60' cy='60' r='54' fill='none' stroke='#E8EEFC' strokeWidth='12' />\n                {percentage && (\n                    <circle\n                        className={classNames('progress__value', {\n                            'progress__value--is-max': is_max,\n                            'progress__value--is-min': is_min,\n                        })}\n                        cx='60'\n                        cy='60'\n                        r='54'\n                        fill='none'\n                        strokeOpacity={is_max || is_min ? 1 : opacity}\n                        strokeWidth='12'\n                        strokeDasharray={[w * p, w * (1 - p)]}\n                        // strokeDashoffset={(w * (1 - (0 * 3.5 * percentage / 100)))}\n                        strokeDashoffset={w * ((p + 1) / 2)}\n                    />\n                )}\n            </svg>\n        </div>\n    );\n};\n\nLastDigitStat.propTypes = {\n    is_max: PropTypes.bool,\n    is_min: PropTypes.bool,\n    is_selected: PropTypes.bool,\n    percentage: PropTypes.number,\n};\n\nexport default LastDigitStat;\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DesktopWrapper } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { Bounce } from 'App/Components/Animations';\nimport Digit from './digit.jsx';\nimport DigitSpot from './digit-spot.jsx';\nimport LastDigitStat from './last-digit-stat.jsx';\n\nconst DigitDisplay = ({\n    barrier,\n    is_digit_contract,\n    has_entry_spot,\n    is_lost,\n    is_max,\n    is_min,\n    is_won,\n    onSelect,\n    latest_digit,\n    selected_digit,\n    status,\n    stats,\n    value,\n    onLastDigitSpot,\n}) => {\n    const { digit, spot } = latest_digit;\n    const is_latest = value === digit;\n    const is_selected = value === barrier;\n    const is_selected_winning = digit === barrier;\n    const percentage = stats ? (stats * 100) / 1000 : null;\n\n    React.useEffect(() => {\n        if (onLastDigitSpot) {\n            onLastDigitSpot({ spot, is_lost, is_selected_winning, is_latest, is_won });\n        }\n    }, [latest_digit, spot, barrier, value, is_lost, is_selected_winning, is_latest, is_won, onLastDigitSpot]);\n\n    const is_digit_selectable = isMobile() && typeof onSelect === 'function' && !status;\n    const is_digit_selected = isMobile() && value === selected_digit && !status;\n    return (\n        <div\n            className={classNames('digits__digit', {\n                'digits__digit--latest': is_latest,\n                'digits__digit--win': is_won && is_latest,\n                'digits__digit--loss': is_lost && is_latest,\n                'digits__digit--is-selectable': is_digit_selectable,\n                'digits__digit--is-selected': is_digit_selected,\n            })}\n            onClick={() => {\n                if (!is_digit_selectable) return;\n                onSelect(value);\n            }}\n        >\n            <LastDigitStat is_min={is_min} is_max={is_max} is_selected={is_selected} percentage={percentage} />\n            <DesktopWrapper>\n                <Bounce\n                    is_visible={!!(is_digit_contract && is_latest && spot && status && has_entry_spot)}\n                    className='digits__digit-spot'\n                    keyname='digits__digit-spot'\n                >\n                    <DigitSpot\n                        current_spot={spot}\n                        is_lost={is_lost}\n                        is_selected_winning={is_selected_winning}\n                        is_visible={!!(is_latest && spot)}\n                        is_won={is_won}\n                    />\n                </Bounce>\n            </DesktopWrapper>\n            <Digit\n                is_latest={is_latest}\n                is_lost={is_lost}\n                is_selected={is_selected}\n                is_won={is_won}\n                percentage={percentage}\n                value={value}\n            />\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    barrier: PropTypes.number,\n    has_entry_spot: PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_lost: PropTypes.bool,\n    is_max: PropTypes.bool,\n    is_min: PropTypes.bool,\n    is_won: PropTypes.bool,\n    latest_digit: PropTypes.object,\n    onLastDigitSpot: PropTypes.func,\n    onSelect: PropTypes.func,\n    selected_digit: PropTypes.number,\n    stats: PropTypes.number,\n    status: PropTypes.string,\n    value: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\n\nconst LastDigitPointer = ({ is_lost, is_trade_page, is_won, position }) => (\n    <React.Fragment>\n        {!!position && (\n            <span\n                className='digits__pointer'\n                style={{ transform: `translate3d(calc(${position.left}px), ${position.top}px, 0px)` }}\n            >\n                <Icon\n                    icon='IcProfit'\n                    className={classNames('digits__icon', {\n                        'digits__icon--win': is_won && !is_trade_page,\n                        'digits__icon--loss': is_lost && !is_trade_page,\n                    })}\n                    color={is_won ? 'green' : 'red'}\n                    custom_color={!(is_won || is_lost) ? 'var(--brand-orange)' : undefined}\n                />\n            </span>\n        )}\n    </React.Fragment>\n);\n\nLastDigitPointer.propTypes = {\n    is_lost: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won: PropTypes.bool,\n    position: PropTypes.object,\n};\n\nexport default LastDigitPointer;\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { isMobile } from '@deriv/shared';\nimport DigitDisplay from './digit-display.jsx';\nimport LastDigitPointer from './last-digit-pointer.jsx';\n\nconst display_array = Array.from(Array(10).keys()); // digits array [0 - 9]\n\nconst LastDigitPrediction = ({\n    barrier,\n    contract_type,\n    digits,\n    digits_info,\n    dimension,\n    is_digit_contract,\n    has_entry_spot,\n    is_ended,\n    is_trade_page,\n    onDigitChange,\n    onLastDigitSpot,\n    selected_digit,\n    status,\n    tick,\n    trade_type,\n}) => {\n    const [digit_offset] = React.useState({\n        0: { left: 6, top: 0 },\n        1: { left: 6 + dimension * 1, top: 0 },\n        2: { left: 6 + dimension * 2, top: 0 },\n        3: { left: 6 + dimension * 3, top: 0 },\n        4: { left: 6 + dimension * 4, top: 0 },\n        5: { left: 6 + dimension * 5, top: 0 },\n        6: { left: 6 + dimension * 6, top: 0 },\n        7: { left: 6 + dimension * 7, top: 0 },\n        8: { left: 6 + dimension * 8, top: 0 },\n        9: { left: 6 + dimension * 9, top: 0 },\n    });\n\n    const [digit_offset_mobile] = React.useState({\n        0: { left: 6, top: -60 },\n        1: { left: 6 + dimension * 1, top: -60 },\n        2: { left: 6 + dimension * 2, top: -60 },\n        3: { left: 6 + dimension * 3, top: -60 },\n        4: { left: 6 + dimension * 4, top: -60 },\n        5: { left: 6 + dimension * 0, top: 8 },\n        6: { left: 6 + dimension * 1, top: 8 },\n        7: { left: 6 + dimension * 2, top: 8 },\n        8: { left: 6 + dimension * 3, top: 8 },\n        9: { left: 6 + dimension * 4, top: 8 },\n    });\n\n    const handleSelect = digit_value => {\n        if (!isSelectableDigitType()) return;\n        if (digit_value !== selected_digit && typeof onDigitChange === 'function') {\n            onDigitChange({ target: { name: 'last_digit', value: digit_value } });\n        }\n    };\n\n    const getBarrier = num => {\n        const barrier_map = {\n            DIGITMATCH: val => val === barrier,\n            DIGITDIFF: val => val !== barrier && !isNaN(barrier),\n            DIGITOVER: val => val > barrier,\n            DIGITUNDER: val => val < barrier,\n            DIGITODD: val => val % 2,\n            DIGITEVEN: val => !(val % 2),\n        };\n        if (!contract_type || !barrier_map[contract_type]) return null;\n        return barrier_map[contract_type](num) ? num : null;\n    };\n\n    const getOffset = () => (isMobile() ? digit_offset_mobile : digit_offset);\n\n    const isSelectableDigitType = () => (isMobile() ? trade_type !== 'even_odd' : false);\n\n    const digits_array = Object.keys(digits_info)\n        .sort()\n        .map(spot_time => digits_info[spot_time]);\n    const last_contract_digit = digits_array.slice(-1)[0] || {};\n\n    // 'won' or 'lost' status exists after contract expiry\n    const is_won = is_ended && status === 'won' && is_digit_contract;\n    // need to explicitly have is_lost condition here\n    // because negating is_won would always be true,\n    // but we only need is_lost condition only once we have the 'won' or 'lost' status\n    const is_lost = is_ended && status === 'lost' && is_digit_contract;\n\n    const min = digits ? Math.min(...digits) : null;\n    const max = digits ? Math.max(...digits) : null;\n\n    // latest last digit refers to digit and spot values from latest price\n    // latest contract digit refers to digit and spot values from last digit contract in contracts array\n    const latest_tick_pip_size = tick ? +tick.pip_size : null;\n    const latest_tick_ask_price = tick && tick.ask ? tick.ask.toFixed(latest_tick_pip_size) : null;\n    const latest_tick_digit = latest_tick_ask_price ? +latest_tick_ask_price.split('').pop() : null;\n    const position = tick ? getOffset()[latest_tick_digit] : getOffset()[last_contract_digit.digit];\n    const latest_digit = !(is_won || is_lost)\n        ? { digit: latest_tick_digit, spot: latest_tick_ask_price }\n        : last_contract_digit;\n    return (\n        <div\n            className={classNames('digits', {\n                'digits--trade': is_trade_page,\n            })}\n        >\n            {display_array.map(idx => (\n                <DigitDisplay\n                    barrier={getBarrier(idx)}\n                    has_entry_spot={has_entry_spot}\n                    is_digit_contract={is_digit_contract}\n                    is_lost={is_lost}\n                    is_trade_page={is_trade_page}\n                    is_won={is_won}\n                    key={idx}\n                    is_max={digits ? digits[idx] === max : null}\n                    is_min={digits ? digits[idx] === min : null}\n                    stats={digits ? digits[idx] : null}\n                    status={status}\n                    latest_digit={is_trade_page ? latest_digit : last_contract_digit}\n                    value={idx}\n                    onLastDigitSpot={onLastDigitSpot}\n                    onSelect={isSelectableDigitType() ? handleSelect : null}\n                    selected_digit={isSelectableDigitType() ? selected_digit : false}\n                />\n            ))}\n            <LastDigitPointer is_lost={is_lost} is_trade_page={is_trade_page} is_won={is_won} position={position} />\n        </div>\n    );\n};\n\nLastDigitPrediction.propTypes = {\n    barrier: PropTypes.number,\n    contract_type: PropTypes.string,\n    digits: PropTypes.array,\n    digits_info: PropTypes.object,\n    dimension: PropTypes.number,\n    has_entry_spot: PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_ended: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    status: PropTypes.string,\n    trade_type: PropTypes.string,\n    onDigitChange: PropTypes.func,\n    onLastDigitSpot: PropTypes.func,\n    selected_digit: PropTypes.number,\n    tick: PropTypes.object,\n};\n\nexport default observer(LastDigitPrediction);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { toJS } from 'mobx';\nimport { DesktopWrapper, MobileWrapper, Popover, Text } from '@deriv/components';\nimport { isMobile, useIsMounted, isContractElapsed } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { Bounce, SlideIn } from 'App/Components/Animations';\nimport { getMarketNamesMap } from '../../../../Constants';\nimport { DigitSpot, LastDigitPrediction } from '../LastDigitPrediction';\nimport 'Sass/app/modules/contract/digits.scss';\n\nconst DigitsWrapper = ({\n    contract_info,\n    digits_array,\n    digits_info,\n    display_status,\n    is_digit_contract,\n    is_ended,\n    is_trade_page,\n    onDigitChange,\n    selected_digit,\n    trade_type,\n    onChangeStatus,\n    ...props\n}) => {\n    const has_contract = contract_info.date_start;\n    let tick = props.tick;\n\n    const is_tick_ready = is_trade_page ? !!tick : true;\n    const is_contract_elapsed = is_trade_page ? isContractElapsed(contract_info, tick) : false;\n    const status = !is_contract_elapsed && is_tick_ready ? display_status : null;\n\n    // tick from contract_info.tick_stream has totally different\n    // format from the tick from tick_history api call.\n    if (has_contract && !is_contract_elapsed) {\n        tick = null;\n        const tick_stream = contract_info.tick_stream;\n        if (tick_stream && tick_stream.length) {\n            const t = toJS(tick_stream.slice(-1)[0]);\n            tick = {\n                ask: t.tick,\n                bid: t.tick,\n                epoch: t.epoch,\n                pip_size: t.tick_display_value.split('.')[1].length,\n                current_tick: tick_stream.length,\n            };\n        }\n    }\n\n    React.useEffect(() => {\n        if (onChangeStatus) {\n            onChangeStatus({ status, current_tick: tick ? tick.current_tick : null });\n        }\n    }, [tick, is_trade_page, display_status, onChangeStatus, status]);\n\n    return (\n        <LastDigitPrediction\n            // dimension of a single digit widget including margin/padding (number)\n            // i.e - 40px + 6px left and 6px right padding/margin = 52\n            dimension={isMobile() ? 64 : 52}\n            has_entry_spot={!!contract_info.entry_tick}\n            barrier={!is_contract_elapsed && is_tick_ready ? +contract_info.barrier : null}\n            contract_type={!is_contract_elapsed && is_tick_ready ? contract_info.contract_type : null}\n            digits={digits_array}\n            digits_info={!is_contract_elapsed && is_tick_ready ? digits_info : {}}\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            is_trade_page={is_trade_page}\n            status={status}\n            tick={tick}\n            trade_type={trade_type}\n            onDigitChange={onDigitChange}\n            selected_digit={selected_digit}\n            onLastDigitSpot={props.onLastDigitSpot}\n        />\n    );\n};\n\nconst Digits = React.memo(props => {\n    const [status, setStatus] = React.useState();\n    const [current_tick, setCurrentTick] = React.useState();\n    const [spot, setSpot] = React.useState();\n    const [is_selected_winning, setIsSelectedWinning] = React.useState();\n    const [is_latest, setIsLatest] = React.useState();\n    const [is_won, setIsWon] = React.useState();\n    const [is_lost, setIsLost] = React.useState();\n    const isMounted = useIsMounted();\n\n    const { contract_info, digits_array, is_digit_contract, is_trade_page, underlying } = props;\n\n    const onChangeStatus = params => {\n        setStatus(params.status);\n        setCurrentTick(params.current_tick);\n    };\n\n    const onLastDigitSpot = params => {\n        setSpot(params.spot);\n        setIsLost(params.is_lost);\n        setIsSelectedWinning(params.is_selected_winning);\n        setIsLatest(params.is_latest);\n        setIsWon(params.is_won);\n    };\n\n    const getPopoverMessage = () => {\n        const underlying_name = is_trade_page ? underlying : contract_info.underlying;\n\n        return localize('Last digit stats for latest 1000 ticks for {{underlying_name}}', {\n            underlying_name: getMarketNamesMap()[underlying_name.toUpperCase()],\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <SlideIn\n                    is_visible={(digits_array || is_digit_contract) && isMounted()}\n                    className='digits__container'\n                    keyname='digits'\n                    type='bottom'\n                >\n                    {is_trade_page && (\n                        <div className='digits__tooltip-container'>\n                            <Popover\n                                alignment='top'\n                                classNameBubble='digits__tooltip-bubble'\n                                icon='info'\n                                id='dt_last_digits_info_tooltip'\n                                margin={4}\n                                message={getPopoverMessage()}\n                            />\n                        </div>\n                    )}\n                    <DigitsWrapper {...props} />\n                </SlideIn>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <div className='digits__container'>\n                    <Bounce\n                        is_visible={!!(is_digit_contract && status && spot && !!contract_info.entry_tick)}\n                        className={classNames('digits__digit-spot', {\n                            'digits__digit-spot--is-trading': is_trade_page,\n                        })}\n                        keyname='digits__digit-spot'\n                    >\n                        {is_trade_page && (\n                            <Text size='xs' align='center' className='digits__digit-spot-value'>\n                                <Localize i18n_default_text='Tick {{current_tick}} - ' values={{ current_tick }} />\n                            </Text>\n                        )}\n                        <DigitSpot\n                            current_spot={spot}\n                            is_lost={is_lost}\n                            is_selected_winning={is_selected_winning}\n                            is_visible={!!(is_latest && spot)}\n                            is_won={is_won}\n                        />\n                    </Bounce>\n                    <DigitsWrapper {...props} onChangeStatus={onChangeStatus} onLastDigitSpot={onLastDigitSpot} />\n                </div>\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nDigits.displayName = 'Digits';\n\nDigits.propTypes = {\n    contract_info: PropTypes.object,\n    digits_array: PropTypes.array,\n    digits_info: PropTypes.object,\n    display_status: PropTypes.string,\n    is_digit_contract: PropTypes.bool,\n    is_ended: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    trade_type: PropTypes.string,\n    onDigitChange: PropTypes.func,\n    selected_digit: PropTypes.number,\n    underlying: PropTypes.string,\n};\n\nexport default Digits;\n","import Digits from './digits.jsx';\n\nexport default Digits;\n","import React from 'react';\nimport { PageError } from '@deriv/components';\nimport { routes, getUrlBase } from '@deriv/shared';\n\nimport { localize } from '@deriv/translations';\n\nconst Page404 = () => (\n    <PageError\n        header={localize('We couldn’t find that page')}\n        messages={[\n            localize('You may have followed a broken link, or the page has moved to a new address.'),\n            localize('Error code: {{error_code}} page not found', { error_code: 404 }),\n        ]}\n        redirect_urls={[routes.trade]}\n        redirect_labels={[localize('Return to trade')]}\n        classNameImage='page-404__image'\n        image_url={getUrlBase('/public/images/common/404.png')}\n    />\n);\n\nexport default Page404;\n","import Page404 from './Components/Page404.jsx';\n\nexport default Page404;\n","import { toJS } from 'mobx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FastMarker } from 'Modules/SmartChart';\n\nconst ChartMarker = ({ marker_config, marker_content_props, is_bottom_widget_visible }) => {\n    const { ContentComponent, ...marker_props } = marker_config;\n\n    // TODO:\n    //  - rename x to epoch\n    //  - rename y to price\n    const onRef = ref => {\n        if (ref) {\n            // NOTE: null price means vertical line.\n            if (!marker_props.y) {\n                const margin = (is_bottom_widget_visible ? 115 : 0) + 24; // digit contracts have a widget at the bottom // height of line marker icon\n\n                ref.div.style.height = `calc(100% - ${margin}px)`;\n                ref.div.style.zIndex = '-1';\n            }\n            ref.setPosition({\n                epoch: +marker_props.x,\n                price: +marker_props.y,\n            });\n        }\n    };\n\n    // memoizing the marker components data:\n    const getMemoizedComponent = React.useCallback(() => {\n        return <ContentComponent {...toJS(marker_content_props)} />;\n    }, [marker_content_props]);\n\n    return <FastMarker markerRef={onRef}>{getMemoizedComponent()}</FastMarker>;\n};\n\nChartMarker.propTypes = {\n    is_bottom_widget_visible: PropTypes.bool,\n    marker_config: PropTypes.object,\n    marker_content_props: PropTypes.object,\n};\n\nexport default ChartMarker;\n","// THIS FILE CONTAINS THE ICONS RENDERED IN CANVAS2D CONTEXT.\n\n// All path commands *MUST* be absolute (MCLVQZ).\n// Use figma.com which by default exports paths as absolute.\n// Only <path /> tags is supported.\nconst parse_svg = markup => {\n    // make tests pass\n    if (!window.DOMParser) {\n        return null;\n    }\n\n    const parser = new window.DOMParser();\n    const svg = parser.parseFromString(markup, 'image/svg+xml').children[0];\n    let { width, height } = svg.attributes;\n    width = width.value * 1;\n    height = height.value * 1;\n\n    const paths = [];\n    [].forEach.call(svg.children, p => {\n        const { d, fill, stroke } = p.attributes;\n        paths.push({\n            points: d.value\n                .match(/M|C|H|A|L|V|-?\\d*(\\.\\d+)?/g)\n                .filter(e => e)\n                .map(e => ('MCHALV'.indexOf(e) === -1 ? e * 1 : e)),\n            fill: fill && fill.value,\n            stroke: stroke && stroke.value,\n        });\n    });\n    function with_color(color, bg_color = 'white') {\n        return {\n            width,\n            height,\n            paths: paths.map(({ points, fill, stroke }) => ({\n                points,\n                stroke,\n                fill: fill !== 'white' ? color : bg_color,\n            })),\n        };\n    }\n\n    return {\n        width,\n        height,\n        paths,\n        with_color,\n    };\n};\n\nexport const START = parse_svg(`\n<svg width=\"15\" height=\"20\" viewBox=\"0 0 15 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7,20 C11.2,14.4 14,10.8659932 14,7 C14,3.13400675 10.8659932,0 7,0 C3.13400675,0 0,3.13400675 0,7 C0,10.8659932 2.8,14.4 7,20 Z\" fill=\"#333333\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"A7 7 4.2 0 6.283185307179586\" fill=\"white\" />\n</svg>`);\n\nexport const END = parse_svg(`\n<svg width=\"19\" height=\"20\" viewBox=\"0 0 19 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 2L18 2L18 12L2 12Z\" fill=\"white\" />\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2,0 L2,1 L19,1 L19,12 L2,12 L2,20 L1,20 L1,0 L2,0 Z M18,8 L15,8 L15,11 L18,11 L18,8 Z M12,8 L9,8 L9,11 L12,11 L12,8 Z M6,8 L3,8 L3,11 L6,11 L6,8 Z M15,5 L12,5 L12,8 L15,8 L15,5 Z M9,5 L6,5 L6,8 L9,8 L9,5 Z M6,2 L3,2 L3,5 L6,5 L6,2 Z M18,2 L15,2 L15,5 L18,5 L18,2 Z M12,2 L9,2 L9,5 L12,5 L12,2 Z\" fill=\"#333333\"/>\n</svg>\n`);\n","// Things to do before touching this file :P\n// 1- Please read https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial\n// 2- Please read RawMarker.jsx in https://github.com/binary-com/SmartCharts\n// 3- Please read contract-store.js & trade.jsx carefully\nimport React from 'react';\nimport { getContractStatus, getDecimalPlaces, isAccumulatorContract, isVanillaContract } from '@deriv/shared';\nimport { RawMarker } from 'Modules/SmartChart';\nimport * as ICONS from './icons';\n\nconst is_firefox = navigator.userAgent.search('Firefox') > 0;\n\nconst RawMarkerMaker = draw_callback => {\n    const Marker = ({ epoch_array, price_array, ...rest }) => (\n        <RawMarker\n            epoch_array={epoch_array}\n            price_array={price_array}\n            draw_callback={args => draw_callback({ ...args, ...rest })}\n        />\n    );\n    return Marker;\n};\n\nconst dark_theme = {\n    accu_contract_shade: '#00a79e14',\n    accu_shade: '#377cfc14',\n    accu_shade_crossed: '#cc2e3d14',\n    bg: '#0e0e0e',\n    fg: '#ffffff',\n    grey_border: '#6e6e6e',\n    lost: '#cc2e3d',\n    open: '#377cfc',\n    sold: '#ffad3a',\n    won: '#00a79e',\n};\n\nconst light_theme = {\n    accu_contract_shade: '#4bb4b314',\n    accu_shade: '#377cfc14',\n    accu_shade_crossed: '#ec3f3f14',\n    bg: '#ffffff',\n    fg: '#333333',\n    grey_border: '#999999',\n    lost: '#ec3f3f',\n    open: '#377cfc',\n    sold: '#ffad3a',\n    won: '#4bb4b3',\n};\n\nfunction getColor({ status, profit, is_dark_theme, is_vanilla }) {\n    const colors = is_dark_theme ? dark_theme : light_theme;\n    let color = colors[status || 'open'];\n    if (is_vanilla) {\n        if (status === 'open') return colors.open;\n        return colors[profit > 0 ? 'won' : 'lost'];\n    }\n    if (status === 'open' && profit) {\n        color = colors[profit > 0 ? 'won' : 'lost'];\n    }\n    return color;\n}\n\nconst calc_scale = zoom => {\n    return zoom ? Math.max(Math.min(Math.sqrt(zoom / 18), 1.2), 0.8) : 1;\n};\n\nconst hex_map = [];\nconst calc_opacity = (from, to) => {\n    if (hex_map.length === 0) {\n        for (let i = 255; i >= 0; --i) {\n            hex_map[i] = (i < 16 ? '0' : '') + i.toString(16);\n        }\n    }\n    const opacity = Math.floor(Math.min(Math.max(to - from - 10, 0) / 6, 1) * 255);\n    return hex_map[opacity];\n};\n\n/** @param {CanvasRenderingContext2D} ctx */\nconst draw_path = (ctx, { zoom, top, left, icon }) => {\n    ctx.save();\n    const scale = calc_scale(zoom);\n\n    ctx.translate(left - (icon.width * scale) / 2, top - (icon.height * scale) / 2);\n\n    ctx.scale(scale, scale);\n\n    icon.paths.forEach(({ points, fill, stroke }) => {\n        if (fill) {\n            ctx.fillStyle = fill;\n        }\n        if (stroke) {\n            ctx.strokeStyle = stroke;\n        }\n        ctx.beginPath();\n        let prev_x, prev_y;\n        for (let idx = 0; idx < points.length; idx++) {\n            let x, y, cx1, cx2, cy1, cy2, r;\n            if (points[idx] === 'M') {\n                x = points[++idx];\n                y = points[++idx];\n                ctx.moveTo(x, y);\n            } else if (points[idx] === 'L') {\n                x = points[++idx];\n                y = points[++idx];\n                ctx.lineTo(x, y);\n            } else if (points[idx] === 'V') {\n                y = points[++idx];\n                ctx.lineTo(prev_x, y);\n            } else if (points[idx] === 'H') {\n                x = points[++idx];\n                ctx.lineTo(x, prev_y);\n            } else if (points[idx] === 'Q') {\n                cx1 = points[++idx];\n                cy1 = points[++idx];\n                x = points[++idx];\n                y = points[++idx];\n                ctx.quadraticCurveTo(cx1, cy1, x, y);\n            } else if (points[idx] === 'C') {\n                cx1 = points[++idx];\n                cy1 = points[++idx];\n                cx2 = points[++idx];\n                cy2 = points[++idx];\n                x = points[++idx];\n                y = points[++idx];\n                ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x, y);\n            } else if (points[idx] === 'A') {\n                x = points[++idx];\n                y = points[++idx];\n                r = points[++idx];\n                const start_a = points[++idx];\n                const end_a = points[++idx];\n                ctx.arc(x, y, r, start_a, end_a);\n            }\n            prev_x = x;\n            prev_y = y;\n        }\n        ctx.closePath();\n        if (fill) {\n            ctx.fill();\n        }\n        if (stroke) {\n            ctx.stroke();\n        }\n    });\n    ctx.scale(1, 1);\n    ctx.restore();\n};\n\nconst draw_shaded_barriers = ({\n    ctx,\n    labels,\n    start_left,\n    top,\n    bottom,\n    stroke_color,\n    fill_color,\n    has_persistent_borders,\n    previous_tick,\n    scale,\n}) => {\n    ctx.save();\n    const end_left = ctx.canvas.offsetWidth - ctx.canvas.parentElement.stx.panels.chart.yaxisTotalWidthRight;\n    const end_top = ctx.canvas.offsetHeight - ctx.canvas.parentElement.stx.xaxisHeight;\n    const is_top_visible = top < end_top && (top >= 0 || !has_persistent_borders);\n    const is_bottom_visible = bottom < end_top;\n    // using 2 instead of 0 to distance the top barrier line from the top of the chart and make it clearly visible in C.Details:\n    const persistent_top = top < 0 && has_persistent_borders ? 2 : end_top;\n    const displayed_top = is_top_visible ? top : persistent_top;\n    const displayed_bottom = is_bottom_visible ? bottom : end_top;\n    const is_start_left_visible = start_left < end_left;\n    const middle_top = bottom - Math.abs(bottom - top) / 2;\n    if (!is_start_left_visible) return;\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = stroke_color;\n    ctx.setLineDash([]);\n    ctx.font = labels?.font;\n    ctx.textAlign = 'right';\n\n    if (is_top_visible || has_persistent_borders) {\n        ctx.fillStyle = stroke_color;\n        // draw difference between high barrier and previous spot price\n        if (labels?.top) {\n            ctx.fillText(labels?.top, end_left - 1, displayed_top - 10);\n        }\n        // draw top barrier with an arrow\n        ctx.beginPath();\n        ctx.moveTo(end_left, displayed_top);\n        ctx.lineTo(start_left - 2.5, displayed_top);\n        ctx.lineTo(start_left, displayed_top + 4.5);\n        ctx.lineTo(start_left + 2.5, displayed_top);\n        ctx.fill();\n        ctx.stroke();\n    }\n    if (middle_top < end_top && previous_tick) {\n        const { draw_line_without_tick_marker, radius, stroke_color: prev_tick_stroke_color } = previous_tick || {};\n        ctx.fillStyle = prev_tick_stroke_color;\n        ctx.globalCompositeOperation = 'destination-over';\n        if (prev_tick_stroke_color && !draw_line_without_tick_marker) {\n            // draw previous tick marker in DTrader\n            ctx.strokeStyle = prev_tick_stroke_color;\n            ctx.beginPath();\n            ctx.arc(start_left - 1 * scale, middle_top, radius, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.stroke();\n        }\n        // draw horizontal dashed line between barriers to accentuate that they're related to previous tick\n        ctx.strokeStyle = stroke_color;\n        ctx.beginPath();\n        ctx.setLineDash([2, 4]);\n        ctx.moveTo(start_left + (radius || 0), middle_top);\n        ctx.lineTo(end_left, middle_top);\n        ctx.stroke();\n        ctx.globalCompositeOperation = 'source-over';\n    }\n    if (is_bottom_visible || has_persistent_borders) {\n        ctx.fillStyle = stroke_color;\n        // draw difference between low barrier and previous spot price\n        if (labels?.bottom && displayed_bottom + 12 < end_top) {\n            ctx.fillText(labels?.bottom, end_left - 1, displayed_bottom + 12);\n        }\n        // draw bottom barrier with an arrow\n        ctx.beginPath();\n        ctx.setLineDash([]);\n        ctx.moveTo(end_left, displayed_bottom);\n        ctx.lineTo(start_left - 2.5, displayed_bottom);\n        ctx.lineTo(start_left, displayed_bottom - 4.5);\n        ctx.lineTo(start_left + 2.5, displayed_bottom);\n        ctx.fill();\n        ctx.stroke();\n    }\n    // draw shaded area between barriers\n    ctx.fillStyle = fill_color;\n    ctx.fillRect(start_left, displayed_top, end_left - start_left, Math.abs(displayed_bottom - displayed_top));\n    ctx.restore();\n};\n\nconst render_label = ({ ctx, text, tick: { zoom, left, top } }) => {\n    const scale = calc_scale(zoom);\n    const size = Math.floor(scale * 3 + 7);\n    ctx.font = `${size}px Roboto`;\n    text.split(/\\n/).forEach((line, idx) => {\n        const w = Math.ceil(ctx.measureText(line).width);\n        ctx.fillText(line, left - 5 - w, top + idx * size + 1);\n    });\n};\n\nconst shadowed_text = ({ ctx, color, is_dark_theme, text, left, top, scale }) => {\n    ctx.save();\n    ctx.textAlign = 'center';\n    const size = Math.floor(scale * 12);\n    ctx.font = `bold ${size}px BinarySymbols, Roboto`;\n    if (color) ctx.fillStyle = color;\n    if (!is_firefox) {\n        ctx.shadowColor = is_dark_theme ? 'rgba(16,19,31,1)' : 'rgba(255,255,255,1)';\n        ctx.shadowBlur = 12;\n    }\n    // fillText once in firefox due to disabling of text shadows, for default cases where its enabled, set to 5 (to add blur intensity)\n    for (let i = 0; i < (is_firefox ? 1 : 5); ++i) {\n        ctx.fillText(text, left, top);\n    }\n    ctx.restore();\n};\n\nconst TickContract = RawMarkerMaker(\n    ({\n        ctx: context,\n        canvas_height: canvas_fixed_height,\n        points: [start, ...ticks],\n        prices: [barrier, barrier_2], // TODO: support two barrier contracts\n        is_last_contract,\n        is_dark_theme,\n        is_in_contract_details,\n        granularity,\n        contract_info: {\n            accu_barriers_difference,\n            contract_type,\n            exit_tick_time,\n            status,\n            profit,\n            has_crossed_accu_barriers,\n            is_accumulator_trade_without_contract,\n            is_sold,\n            is_expired,\n            // tick_stream,\n            tick_count,\n        },\n    }) => {\n        /** @type {CanvasRenderingContext2D} */\n        const ctx = context;\n\n        const is_accumulator_contract = isAccumulatorContract(contract_type);\n        const contract_status = is_accumulator_contract\n            ? getContractStatus({ contract_type, profit, exit_tick_time, status })\n            : status;\n        const is_accu_contract_ended = is_accumulator_contract && contract_status !== 'open';\n        const color = getColor({\n            is_dark_theme,\n            status: contract_status,\n            profit: is_sold || is_accu_contract_ended ? profit : null,\n        });\n\n        const draw_start_line = is_last_contract && start.visible && !is_sold;\n        const scale = calc_scale(start.zoom);\n        const canvas_height = canvas_fixed_height / window.devicePixelRatio;\n\n        [barrier, barrier_2].filter(Boolean).forEach(b => {\n            b = Math.min(Math.max(b, 2), canvas_height - 32); // eslint-disable-line\n        });\n\n        const entry = ticks[0];\n        const exit = ticks[ticks.length - 1];\n        const previous_tick = ticks[ticks.length - 2] || exit;\n        const opacity = is_sold ? calc_opacity(start.left, exit.left) : '';\n\n        if (start && is_accumulator_trade_without_contract) {\n            // draw 2 barriers with a shade between them for ACCU trade without contracts\n            draw_shaded_barriers({\n                bottom: barrier_2,\n                ctx,\n                fill_color: getColor({\n                    status: has_crossed_accu_barriers ? 'accu_shade_crossed' : 'accu_shade',\n                    is_dark_theme,\n                }),\n                labels: accu_barriers_difference,\n                previous_tick: {\n                    stroke_color: getColor({ status: 'fg', is_dark_theme }) + opacity,\n                    radius: 1.5 * scale,\n                },\n                start_left: start.left,\n                stroke_color: getColor({ status: has_crossed_accu_barriers ? 'lost' : 'open', is_dark_theme }),\n                top: barrier,\n                scale,\n            });\n            return;\n        }\n        if (\n            barrier &&\n            barrier_2 &&\n            (((previous_tick || exit) && is_accumulator_contract && is_in_contract_details) ||\n                (!contract_type && start))\n        ) {\n            // draw 2 barriers with a shade between them for an ongoing ACCU contract:\n            const contract_details_start_left =\n                is_accumulator_contract && contract_status === 'open' ? exit?.left : previous_tick?.left;\n            draw_shaded_barriers({\n                bottom: barrier_2,\n                ctx,\n                fill_color: getColor({\n                    status:\n                        has_crossed_accu_barriers || contract_status === 'lost'\n                            ? 'accu_shade_crossed'\n                            : 'accu_contract_shade',\n                    is_dark_theme,\n                }),\n                // we should show barrier lines in contract details even when they are outside of the chart:\n                has_persistent_borders: is_in_contract_details,\n                labels: !is_in_contract_details && accu_barriers_difference,\n                previous_tick: {\n                    draw_line_without_tick_marker: is_in_contract_details,\n                    stroke_color: color + opacity,\n                    radius: 1.5 * scale,\n                },\n                scale,\n                start_left: is_in_contract_details ? contract_details_start_left : start.left,\n                stroke_color: getColor({\n                    status: has_crossed_accu_barriers || contract_status === 'lost' ? 'lost' : 'won',\n                    is_dark_theme,\n                }),\n                top: barrier,\n            });\n        }\n        if (is_in_contract_details) return;\n\n        ctx.strokeStyle = color;\n        ctx.fillStyle = color;\n\n        if (draw_start_line) {\n            render_label({\n                ctx,\n                text: 'Start\\nTime',\n                tick: { zoom: start.zoom, left: start.left - 1 * scale, top: canvas_height - 50 },\n            });\n            ctx.beginPath();\n            ctx.setLineDash([3, 3]);\n            ctx.moveTo(start.left - 1 * scale, 0);\n            if (ticks.length && barrier && !is_accumulator_contract) {\n                ctx.lineTo(start.left - 1 * scale, barrier - 34 * scale);\n                ctx.moveTo(start.left - 1 * scale, barrier + 4 * scale);\n            }\n            ctx.lineTo(start.left - 1 * scale, canvas_fixed_height);\n            ctx.stroke();\n        }\n\n        if (!ticks.length || !barrier) {\n            ctx.restore();\n            return;\n        }\n\n        // barrier line\n        if ((start.visible || entry.visible || exit.visible) && (!is_accumulator_contract || is_accu_contract_ended)) {\n            const top = is_accumulator_contract ? entry.top : barrier;\n            ctx.strokeStyle = color + opacity;\n            ctx.beginPath();\n            ctx.setLineDash([1, 1]);\n            ctx.moveTo(start.left, top);\n            ctx.lineTo(entry.left, top);\n            ctx.stroke();\n\n            ctx.beginPath();\n            ctx.setLineDash([]);\n            ctx.moveTo(entry.left, top);\n            ctx.lineTo(exit.left, top);\n            ctx.stroke();\n            ctx.strokeStyle = color;\n        }\n\n        // ticks for last contract\n        if (is_last_contract && granularity === 0 && !is_sold && !is_accumulator_contract) {\n            ticks\n                .filter(tick => tick.visible)\n                .forEach(tick => {\n                    const clr = tick === exit ? color : getColor({ status: 'fg', is_dark_theme });\n                    ctx.fillStyle = clr + opacity;\n                    ctx.beginPath();\n                    ctx.arc(tick.left - 1 * scale, tick.top, 1.5 * scale, 0, Math.PI * 2);\n                    ctx.fill();\n                });\n            ctx.fillStyle = color;\n        }\n        // entry & expiry markers\n        if (granularity === 0) {\n            [entry, is_expired || is_accu_contract_ended ? exit : null].forEach(tick => {\n                if (tick && tick.visible) {\n                    ctx.strokeStyle = color + opacity;\n                    ctx.setLineDash([2, 2]);\n                    ctx.beginPath();\n                    ctx.moveTo(tick.left - 1 * scale, tick.top);\n                    if (tick === entry && is_accumulator_contract) {\n                        // draw line to start marker having the same y-coordinates:\n                        ctx.lineTo(start.left - 1 * scale, entry.top);\n                    } else if (tick === exit && is_accumulator_contract) {\n                        // draw dashed line from end icon to exit tick:\n                        ctx.moveTo(exit.left, entry.top);\n                        ctx.lineTo(exit.left, exit.top);\n                    } else ctx.lineTo(tick.left - 1 * scale, barrier);\n                    ctx.stroke();\n\n                    ctx.fillStyle = color + opacity;\n                    ctx.beginPath();\n                    ctx.arc(tick.left - 1 * scale, tick.top, 3 * scale, 0, Math.PI * 2);\n                    ctx.fill();\n\n                    if (tick === entry) {\n                        ctx.beginPath();\n                        ctx.fillStyle = getColor({ status: 'bg', is_dark_theme }) + opacity;\n                        ctx.arc(tick.left - 1 * scale, tick.top, 2 * scale, 0, Math.PI * 2);\n                        ctx.fill();\n                    }\n                }\n            });\n            ctx.strokeStyle = color;\n            ctx.fillStyle = color;\n        }\n        // count down\n        if (start.visible && !is_sold && !is_accumulator_contract) {\n            shadowed_text({\n                ctx,\n                scale,\n                is_dark_theme,\n                text: `${ticks.length - 1}/${tick_count}`,\n                left: start.left,\n                top: barrier - 27 * scale,\n            });\n        }\n\n        // start-time marker\n        if (start.visible) {\n            draw_path(ctx, {\n                top: is_accumulator_contract ? entry.top - 9 * scale : barrier - 9 * scale,\n                left: start.left - 1 * scale,\n                zoom: start.zoom,\n                icon: ICONS.START.with_color(\n                    color + (is_sold ? opacity : ''),\n                    getColor({ status: 'bg', is_dark_theme }) + (is_sold ? opacity : '')\n                ),\n            });\n        }\n        // status marker\n        if (exit.visible && (is_sold || is_accu_contract_ended)) {\n            draw_path(ctx, {\n                top: is_accumulator_contract ? entry.top - 9 * scale : barrier - 9 * scale,\n                left: exit.left + 8 * scale,\n                zoom: exit.zoom,\n                icon: ICONS.END.with_color(color, getColor({ status: 'bg', is_dark_theme })),\n            });\n        }\n        ctx.restore();\n    }\n);\n\nconst currency_symbols = {\n    AUD: '\\u0041\\u0024',\n    EUR: '\\u20AC',\n    GBP: '\\u00A3',\n    JPY: '\\u00A5',\n    USD: '\\u0024',\n    BTC: '\\u20bf',\n    BCH: '\\ue901',\n    ETH: '\\u0045',\n    ETC: '\\ue900',\n    LTC: '\\u0141',\n    UST: '\\u20ae',\n};\n\nconst NonTickContract = RawMarkerMaker(\n    ({\n        ctx: context,\n        canvas_height: canvas_fixed_height,\n        points: [start, expiry, entry, exit],\n        is_last_contract,\n        prices: [barrier, entry_tick_top, exit_tick_top], // TODO: support two barrier contracts\n        is_dark_theme,\n        granularity,\n        currency,\n        contract_info: {\n            contract_type,\n            // exit_tick_time,\n            // is_expired,\n            is_sold,\n            status,\n            profit,\n        },\n    }) => {\n        /** @type {CanvasRenderingContext2D} */\n        const ctx = context;\n\n        // the y value reported for candles is not accurate\n        if (granularity !== 0) {\n            if (entry) {\n                entry.top = entry_tick_top;\n            }\n            if (exit) {\n                exit.top = exit_tick_top;\n            }\n        }\n\n        const color = getColor({ status, profit, is_dark_theme, is_vanilla: isVanillaContract(contract_type) });\n\n        ctx.save();\n        ctx.strokeStyle = color;\n        ctx.fillStyle = color;\n\n        const draw_start_line = is_last_contract && start.visible && !is_sold;\n        const show_profit = is_last_contract && !is_sold && profit && start.visible && barrier;\n        const scale = calc_scale(start.zoom);\n        const opacity = is_sold ? calc_opacity(start.left, expiry.left) : '';\n\n        const canvas_height = canvas_fixed_height / window.devicePixelRatio;\n        if (barrier) {\n            barrier = Math.min(Math.max(barrier, 2), canvas_height - 32); // eslint-disable-line\n        }\n\n        if (draw_start_line) {\n            render_label({\n                ctx,\n                text: 'Start\\nTime',\n                tick: {\n                    zoom: start.zoom,\n                    left: start.left - 1 * scale,\n                    top: canvas_height - 50,\n                },\n            });\n            ctx.beginPath();\n            ctx.setLineDash([3, 3]);\n            ctx.moveTo(start.left - 1 * scale, 0);\n            if (barrier) {\n                ctx.lineTo(start.left - 1 * scale, barrier - (show_profit ? 38 : 20) * scale);\n                ctx.moveTo(start.left - 1 * scale, barrier + 4 * scale);\n            }\n            ctx.lineTo(start.left - 1 * scale, canvas_fixed_height);\n            ctx.stroke();\n        }\n        // barrier line\n        if (barrier && entry && (start.visible || expiry.visible || Math.sign(start.left) !== Math.sign(expiry.left))) {\n            ctx.strokeStyle = color + opacity;\n            ctx.beginPath();\n            ctx.setLineDash([1, 1]);\n            ctx.moveTo(start.left, barrier);\n            ctx.lineTo(entry.left, barrier);\n            ctx.stroke();\n\n            ctx.beginPath();\n            ctx.setLineDash([]);\n            ctx.moveTo(entry.left, barrier);\n            ctx.lineTo(expiry.left, barrier);\n            ctx.stroke();\n            ctx.strokeStyle = color;\n        }\n\n        // entry & expiry tick markers\n        [entry, exit].forEach(tick => {\n            if (tick && tick.visible) {\n                ctx.strokeStyle = color + opacity;\n                ctx.setLineDash([2, 2]);\n                ctx.beginPath();\n                ctx.moveTo(tick.left - 1 * scale, tick.top);\n                ctx.lineTo(tick.left - 1 * scale, barrier);\n                ctx.stroke();\n\n                ctx.fillStyle = color + opacity;\n                ctx.beginPath();\n                ctx.arc(tick.left - 1 * scale, tick.top, 3 * scale, 0, Math.PI * 2);\n                ctx.fill();\n\n                if (tick === entry) {\n                    ctx.beginPath();\n                    ctx.fillStyle = getColor({ status: 'bg', is_dark_theme }) + opacity;\n                    ctx.arc(tick.left - 1 * scale, tick.top, 2 * scale, 0, Math.PI * 2);\n                    ctx.fill();\n                }\n                ctx.fillStyle = color;\n                ctx.strokeStyle = color;\n            }\n        });\n\n        // start-time marker\n        if (start && start.visible && barrier) {\n            draw_path(ctx, {\n                top: barrier - 9 * scale,\n                left: start.left - 1 * scale,\n                zoom: start.zoom,\n                icon: ICONS.START.with_color(color + opacity),\n            });\n        }\n        // show the profit\n        if (show_profit) {\n            const symbol = currency_symbols[currency] || '';\n            const decimal_places = getDecimalPlaces(currency);\n            const sign = profit < 0 ? '-' : profit > 0 ? '+' : ' '; // eslint-disable-line\n            const text = `${sign}${symbol}${Math.abs(profit).toFixed(decimal_places)}`;\n            shadowed_text({\n                ctx,\n                color: getColor({ status: 'open', profit }),\n                scale,\n                text,\n                is_dark_theme,\n                left: start.left,\n                top: barrier - 28 * scale,\n            });\n        }\n        // status marker\n        if (expiry.visible) {\n            draw_path(ctx, {\n                top: barrier - 9 * scale,\n                left: expiry.left + 8 * scale,\n                zoom: expiry.zoom,\n                icon: ICONS.END.with_color(color, getColor({ status: 'bg', is_dark_theme })),\n            });\n        }\n        ctx.restore();\n    }\n);\n\nconst DigitContract = RawMarkerMaker(\n    ({\n        ctx: context,\n        points: [start, ...ticks],\n        prices: [entry_tick_top, exit_tick_top],\n        is_last_contract,\n        is_dark_theme,\n        granularity,\n        contract_info: {\n            // contract_type,\n            status,\n            profit,\n            is_sold,\n            // barrier,\n            tick_stream,\n            tick_count,\n        },\n    }) => {\n        /** @type {CanvasRenderingContext2D} */\n        const ctx = context;\n\n        const color = getColor({\n            is_dark_theme,\n            status,\n            profit: is_sold ? profit : null,\n        });\n\n        ctx.save();\n        ctx.strokeStyle = color;\n        ctx.fillStyle = color;\n\n        const draw_start_line = is_last_contract && start.visible && !is_sold;\n        const scale = calc_scale(start.zoom);\n\n        if (granularity !== 0 && start && entry_tick_top) {\n            start.top = entry_tick_top;\n        }\n        if (draw_start_line) {\n            ctx.beginPath();\n            ctx.setLineDash([3, 3]);\n            ctx.moveTo(start.left - 1 * scale, 0);\n            if (ticks.length) {\n                ctx.lineTo(start.left - 1 * scale, start.top - 34 * scale);\n                ctx.moveTo(start.left - 1 * scale, start.top + 4 * scale);\n            }\n            ctx.lineTo(start.left - 1 * scale, ctx.canvas.height);\n            ctx.stroke();\n        }\n\n        if (!ticks.length) {\n            ctx.restore();\n            return;\n        }\n        const expiry = ticks[ticks.length - 1];\n        const opacity = is_sold ? calc_opacity(start.left, expiry.left) : '';\n        if (granularity !== 0 && expiry && exit_tick_top) {\n            expiry.top = exit_tick_top;\n        }\n\n        // count down\n        if (start.visible && start.top && !is_sold) {\n            shadowed_text({\n                ctx,\n                scale,\n                is_dark_theme,\n                text: `${ticks.length}/${tick_count}`,\n                left: start.left - 1 * scale,\n                top: start.top - 27 * scale,\n            });\n        }\n        // start-time marker\n        if (start.visible && (granularity === 0 || !is_sold)) {\n            draw_path(ctx, {\n                top: start.top - 9 * scale,\n                left: start.left - 1 * scale,\n                zoom: start.zoom,\n                icon: ICONS.START.with_color(color + opacity, getColor({ status: 'bg', is_dark_theme }) + opacity),\n            });\n        }\n        // remaining ticks\n        ticks.forEach((tick, idx) => {\n            if (tick !== expiry) {\n                return;\n            }\n            if (!tick.visible) {\n                return;\n            }\n            if (granularity !== 0 && tick !== expiry) {\n                return;\n            }\n            if (granularity !== 0 && tick === expiry && !is_sold) {\n                return;\n            }\n            const clr = tick !== expiry ? getColor({ status: 'fg', is_dark_theme }) : color;\n            ctx.beginPath();\n            ctx.fillStyle = clr;\n            ctx.arc(tick.left, tick.top, 7 * scale, 0, Math.PI * 2);\n            ctx.fill();\n\n            ctx.beginPath();\n            ctx.fillStyle = is_sold ? color : getColor({ status: 'bg', is_dark_theme });\n            ctx.arc(tick.left, tick.top, 6 * scale, 0, Math.PI * 2);\n            ctx.fill();\n\n            const last_tick = tick_stream[idx];\n            const last_digit = last_tick.tick_display_value.slice(-1);\n            ctx.fillStyle = is_sold ? 'white' : clr;\n            ctx.textAlign = 'center';\n            ctx.shadowBlur = 0;\n            ctx.font = `bold ${12 * scale}px BinarySymbols, Roboto`;\n            ctx.fillText(last_digit, tick.left, tick.top);\n        });\n        // status marker\n        if (expiry.visible && is_sold) {\n            ctx.fillStyle = color;\n            draw_path(ctx, {\n                top: expiry.top - 16 * scale,\n                left: expiry.left + 8 * scale,\n                zoom: expiry.zoom,\n                icon: ICONS.END.with_color(color, getColor({ status: 'bg', is_dark_theme })),\n            });\n        }\n        ctx.restore();\n    }\n);\n\nexport default {\n    TickContract,\n    NonTickContract,\n    DigitContract,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst BottomWidgets = ({ Widget }) => <div className='bottom-widgets'>{Widget}</div>;\n\nBottomWidgets.propTypes = {\n    Widget: PropTypes.node,\n};\n\nexport default BottomWidgets;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MobileWrapper, Toast, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { findContractCategory } from 'Modules/Trading/Helpers/contract-type';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TContractType = {\n    text?: string;\n    value: string;\n};\n\nconst BuyToastNotification = observer(() => {\n    const portal = document.getElementById('popup_root');\n    const { modules } = useStore();\n    const { trade } = modules;\n    const { contract_purchase_toast_box, clearContractPurchaseToastBox } = trade;\n\n    React.useEffect(() => {\n        const timeout = setTimeout(() => {\n            clearContractPurchaseToastBox();\n        }, 4000);\n\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [clearContractPurchaseToastBox, contract_purchase_toast_box]);\n\n    if (!portal || !contract_purchase_toast_box) return <React.Fragment />;\n\n    const { buy_price, currency, contract_type, list } = contract_purchase_toast_box;\n    const active_trade_type = { value: contract_type };\n\n    const trade_type_name = findContractCategory(list, active_trade_type)?.contract_types?.find(\n        (item: TContractType) => item.value === contract_type\n    )?.text;\n\n    return ReactDOM.createPortal(\n        <MobileWrapper>\n            <Toast\n                className='dc-toast-popup-mobile'\n                is_open={!!contract_purchase_toast_box.key}\n                timeout={0}\n                type='notification'\n            >\n                <Text as='p' size='xxs' className='dc-toast__notification'>\n                    <Localize\n                        i18n_default_text='The purchase of <0>{{trade_type_name}} contract</0> has been completed successfully for the amount of <0> {{buy_price}} {{currency}}</0>'\n                        components={[<strong key={0} />]}\n                        values={{ trade_type_name, buy_price, currency }}\n                        shouldUnescape\n                    />\n                </Text>\n            </Toast>\n        </MobileWrapper>,\n        portal\n    );\n});\n\nexport default BuyToastNotification;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DesktopWrapper, MobileWrapper, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isEnded, isAccumulatorContract, isDigitContract } from '@deriv/shared';\nimport { ChartTitle } from 'Modules/SmartChart';\nimport BuyToastNotification from './buy-toast-notification';\nimport { observer, useStore } from '@deriv/stores';\n\nconst RecentTradeInfo = observer(() => {\n    const { contract_trade } = useStore();\n    const { granularity, markers_array } = contract_trade;\n\n    const latest_tick_contract = markers_array[markers_array.length - 1];\n    if (\n        !latest_tick_contract ||\n        !latest_tick_contract.contract_info.tick_stream ||\n        isAccumulatorContract(latest_tick_contract.contract_info.contract_type)\n    )\n        return null;\n\n    const is_ended = isEnded(latest_tick_contract.contract_info);\n    if (is_ended || granularity !== 0) return null;\n\n    const { contract_type, tick_stream, tick_count } = latest_tick_contract.contract_info;\n    const current_tick = isDigitContract(contract_type) ? tick_stream.length : Math.max(tick_stream.length - 1, 0);\n    return (\n        <Text weight='bold' className='recent-trade-info'>\n            {localize('Tick')} {current_tick}/{tick_count}\n        </Text>\n    );\n});\n\nconst TopWidgets = ({\n    InfoBox,\n    is_mobile,\n    is_title_enabled = true,\n    onSymbolChange,\n    y_axis_width,\n    theme,\n    open_market,\n    open,\n    is_digits_widget_active,\n}) => {\n    const ChartTitleLocal = (\n        <ChartTitle\n            open_market={open_market}\n            open={open}\n            enabled={is_title_enabled}\n            onChange={onSymbolChange}\n            searchInputClassName='data-hj-whitelist'\n            isNestedList={is_mobile}\n            portalNodeId={is_mobile ? 'deriv_app' : undefined}\n        />\n    );\n\n    const portal = ReactDOM.createPortal(\n        <div className={`smartcharts-${theme}`}>\n            <div\n                className='top-widgets-portal'\n                style={{\n                    width: `calc(100% - ${y_axis_width ? y_axis_width + 5 : 0}px)`,\n                }}\n            >\n                {is_mobile && <BuyToastNotification />}\n                {ChartTitleLocal}\n                {!is_digits_widget_active && <RecentTradeInfo />}\n            </div>\n        </div>,\n        document.getElementById('app_contents')\n    );\n\n    return (\n        <React.Fragment>\n            {InfoBox}\n            <MobileWrapper>{portal}</MobileWrapper>\n            <DesktopWrapper>{ChartTitleLocal}</DesktopWrapper>\n        </React.Fragment>\n    );\n};\n\nTopWidgets.propTypes = {\n    InfoBox: PropTypes.node,\n    is_digits_widget_active: PropTypes.bool,\n    is_mobile: PropTypes.bool,\n    is_title_enabled: PropTypes.bool,\n    onSymbolChange: PropTypes.func,\n    open: PropTypes.bool,\n    open_market: PropTypes.object,\n    theme: PropTypes.string,\n    y_axis_width: PropTypes.number,\n};\n\nexport default TopWidgets;\n","import React from 'react';\nimport { getUrlBase, moduleLoader } from '@deriv/shared';\n\nconst Module = moduleLoader(() =>\n    import(/* webpackChunkName: \"smart_chart\", webpackPreload: true */ '@deriv/deriv-charts')\n);\n\nModule.then(({ setSmartChartsPublicPath }) => {\n    setSmartChartsPublicPath(getUrlBase('/js/smartcharts/'));\n});\n\n// React.Lazy expects a default export for the component\n// SmartChart library exports many components\nconst load = component_name => () =>\n    Module.then(module => {\n        return { default: module[component_name] };\n    });\n\nexport const SmartChart = React.lazy(load('SmartChart'));\nexport const ChartTitle = React.lazy(load('ChartTitle'));\n\nexport const ChartSize = React.lazy(load('ChartSize'));\nexport const ChartMode = React.lazy(load('ChartMode'));\nexport const DrawTools = React.lazy(load('DrawTools'));\nexport const Share = React.lazy(load('Share'));\nexport const StudyLegend = React.lazy(load('StudyLegend'));\nexport const Views = React.lazy(load('Views'));\nexport const ToolbarWidget = React.lazy(load('ToolbarWidget'));\n\nexport const FastMarker = React.lazy(load('FastMarker'));\nexport const RawMarker = React.lazy(load('RawMarker'));\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MobileWrapper, Toast } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const ToastPopup = ({ portal_id = 'popup_root', children, className, ...props }) => {\n    if (!document.getElementById(portal_id)) return null;\n    return ReactDOM.createPortal(\n        <Toast className={classNames('dc-toast-popup', className)} {...props}>\n            {children}\n        </Toast>,\n        document.getElementById(portal_id)\n    );\n};\n\n/**\n * Network status Toast components\n */\nconst NetworkStatusToastError = ({ status, portal_id, message }) => {\n    const [is_open, setIsOpen] = React.useState(false);\n\n    if (!document.getElementById(portal_id) || !message) return null;\n\n    if (!is_open && status !== 'online') {\n        setIsOpen(true); // open if status === 'blinker' or 'offline'\n    } else if (is_open && status === 'online') {\n        setTimeout(() => {\n            setIsOpen(false);\n        }, 1500);\n    }\n\n    return ReactDOM.createPortal(\n        <MobileWrapper>\n            <Toast\n                className={classNames({\n                    'dc-toast--blinker': status === 'blinker',\n                })}\n                is_open={is_open}\n                timeout={0}\n                type='error'\n            >\n                {message}\n            </Toast>\n        </MobileWrapper>,\n        document.getElementById(portal_id)\n    );\n};\n\nNetworkStatusToastError.propTypes = {\n    portal_id: PropTypes.string,\n    status: PropTypes.string,\n    message: PropTypes.string,\n};\n\nexport const NetworkStatusToastErrorPopup = observer(() => {\n    const {\n        common: { network_status },\n    } = useStore();\n    return (\n        <NetworkStatusToastError\n            portal_id='popup_root'\n            message={network_status.tooltip}\n            status={network_status.class}\n        />\n    );\n});\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { TContractType, TContractCategory, TList } from '../Components/Form/ContractType/types';\n\ntype TContractTypesList = {\n    [key: string]: {\n        name: string;\n        categories: TContractType[];\n    };\n};\n\ntype TItem = {\n    value: string;\n};\n\nexport const contract_category_icon = {\n    [localize('Ups & Downs')]: 'IcUpsDowns',\n    [localize('Highs & Lows')]: 'IcHighsLows',\n    [localize('Ins & Outs')]: 'IcInsOuts',\n    [localize('Look Backs')]: 'IcLookbacks',\n    [localize('Digits')]: 'IcDigits',\n    [localize('Multipliers')]: 'IcMultiplier',\n    [localize('Accumulators')]: 'IcCatAccumulator',\n} as const;\n\nexport const getContractTypeCategoryIcons = () =>\n    ({\n        All: 'IcCatAll',\n        Accumulators: 'IcCatAccumulator',\n        Options: 'IcCatOptions',\n        Multipliers: 'IcCatMultiplier',\n        Turbos: 'IcCatTurbos',\n    } as const);\n\n/**\n * Returns a list of contracts in the following format:\n * {\n *      label: '', // contract category label\n *      contract_types: [], // list of contract types\n *      icon: '', // contract categoty icon\n * }\n * @param {object} contract_types_list  - list of all contracts\n * @param {array}  unsupported_list - list of unsupported contract types\n */\n\nexport const getAvailableContractTypes = (contract_types_list: TContractTypesList, unsupported_list: string[]) => {\n    return Object.keys(contract_types_list)\n        .map(key => {\n            const contract_types = contract_types_list[key].categories;\n            const contract_name = contract_types_list[key].name;\n            const available_contract_types = contract_types.filter(type =>\n                type.value &&\n                // TODO: remove this check once all contract types are supported\n                !unsupported_list.includes(type.value)\n                    ? type\n                    : undefined\n            );\n\n            if (available_contract_types.length) {\n                return {\n                    key,\n                    label: contract_name,\n                    contract_types: available_contract_types,\n                    icon: contract_category_icon[contract_name],\n                    component:\n                        contract_name === localize('Accumulators') ? (\n                            <span className='dc-vertical-tab__header--new'>{localize('NEW!')}</span>\n                        ) : null,\n                };\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n};\n\n/**\n * Returns a filtered list\n * @param {object} contract_types_list  - list of all contracts\n * @param {array}  filtered_items_array - list of filtered contract category names and/or contract types names\n */\n/*export const getFilteredList = (contract_types_list, filtered_items_array: Array<string>) => {\n    return Object.keys(contract_types_list)\n        .map(key => {\n            const { label, contract_types, icon } = contract_types_list[key];\n\n            const filtered_by_contract_types = contract_types.filter(c =>\n                filtered_items_array.includes(c.text.toLowerCase())\n            );\n\n            const filtered_by_contract_category = filtered_items_array.includes(label.toLowerCase());\n\n            if (filtered_by_contract_types.length) {\n                return {\n                    label,\n                    contract_types: filtered_by_contract_types,\n                    icon,\n                };\n            } else if (filtered_by_contract_category) {\n                return {\n                    label,\n                    contract_types,\n                    icon,\n                };\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n};*/\n\n// const flatten = (arr: any) => [].concat(...arr);\n\n/**\n * Flatten list object into an array of contract category label and contract types names\n * @param {object} list\n */\n// export const getContractsList = (list: any) =>\n//     flatten(\n//         Object.keys(list).map(\n//             k => [\n//                 list[k].label.toLowerCase(), // contract category names\n//                 ...list[k].contract_types.map((c: any) => c.text.toLowerCase()),\n//             ] // contract types names\n//         )\n//     );\n\nexport const findContractCategory = (list: Partial<TList[]>, item: TItem) =>\n    list?.find(list_item => list_item?.contract_types?.some(i => i.value === item.value)) || ({} as TContractCategory);\n\nexport const getContractCategoryKey = (list: TList[], item: TItem) => findContractCategory(list, item)?.key;\n\nexport const getContractTypes = (list: TList[], item: TItem) => findContractCategory(list, item)?.contract_types;\n","const digitCategoriesMap = ['even_odd', 'match_diff', 'over_under'] as const;\nconst digitTypesMap = ['DIGITDIFF', 'DIGITMATCH', 'DIGITOVER', 'DIGITUNDER', 'DIGITEVEN', 'DIGITODD'] as const;\n\nexport const isDigitTradeType = (trade_type: string) => digitCategoriesMap.some(item => item === trade_type);\nexport const isDigitContractType = (contract_type: string) => digitTypesMap.some(item => item === contract_type);\n","import {\n    WS,\n    getPropertyValue,\n    cloneObject,\n    isTimeValid,\n    minDate,\n    toMoment,\n    shouldShowCancellation,\n    getUnitMap,\n    buildBarriersConfig,\n    buildDurationConfig,\n    hasIntradayDurationUnit,\n    buildForwardStartingConfig,\n    unsupported_contract_types_list,\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getContractSubtype,\n    getLocalizedBasis,\n} from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\nimport { localize } from '@deriv/translations';\nimport { isSessionAvailable } from './start-date';\n\nexport const ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories = {};\n    let contract_types;\n    const trading_events = {};\n    const trading_times = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = symbol =>\n        WS.storage.contractsFor(symbol).then(r => {\n            const has_contracts = getPropertyValue(r, ['contracts_for']);\n            has_only_forward_starting_contracts =\n                has_contracts && !r.contracts_for.available.find(contract => contract.start_type !== 'forward');\n            if (!has_contracts || has_only_forward_starting_contracts) return;\n            const contract_categories = getContractCategoriesConfig();\n            contract_types = getContractTypesConfig(symbol);\n            available_contract_types = {};\n            available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n            r.contracts_for.available.forEach(contract => {\n                const type = Object.keys(contract_types).find(\n                    key =>\n                        contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                        (typeof contract_types[key].barrier_count === 'undefined' ||\n                            +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n                );\n\n                if (!type) return; // ignore unsupported contract types\n\n                if (!available_contract_types[type]) {\n                    // extend contract_categories to include what is needed to create the contract list\n                    const sub_cats =\n                        available_categories[\n                            Object.keys(available_categories).find(\n                                key => available_categories[key].categories.indexOf(type) !== -1\n                            )\n                        ].categories;\n\n                    if (!sub_cats) return;\n\n                    sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                    // populate available contract types\n                    available_contract_types[type] = cloneObject(contract_types[type]);\n                }\n                const config = available_contract_types[type].config || {};\n\n                // set config values\n                config.has_spot = config.has_spot || contract.start_type === 'spot';\n                config.durations = !config.hide_duration && buildDurationConfig(contract, config.durations);\n                config.trade_types = buildTradeTypesConfig(contract, config.trade_types);\n                config.barriers = buildBarriersConfig(contract, config.barriers);\n                config.barrier_choices = contract.barrier_choices;\n                config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n                config.growth_rate_range = contract.growth_rate_range;\n                config.multiplier_range = contract.multiplier_range;\n                config.cancellation_range = contract.cancellation_range;\n\n                available_contract_types[type].config = config;\n            });\n\n            // cleanup categories\n            Object.keys(available_categories).forEach(key => {\n                available_categories[key].categories = available_categories[key].categories?.filter(\n                    item => typeof item === 'object'\n                );\n                if (available_categories[key].categories?.length === 0) {\n                    delete available_categories[key];\n                }\n            });\n        });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) =>\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0];\n\n    const getContractValues = store => {\n        const {\n            contract_expiry_type,\n            contract_type,\n            basis,\n            duration_unit,\n            expiry_type,\n            multiplier,\n            start_date,\n            cancellation_duration,\n            symbol,\n            short_barriers,\n            long_barriers,\n        } = store;\n\n        if (!contract_type) return {};\n\n        let stored_barriers_data = {};\n        if (getContractSubtype(contract_type) === 'Short') {\n            stored_barriers_data = short_barriers;\n        } else if (getContractSubtype(contract_type) === 'Long') {\n            stored_barriers_data = long_barriers;\n        }\n\n        const form_components = getComponents(contract_type);\n        const obj_basis = getBasis(contract_type, basis);\n        const obj_trade_types = getTradeTypes(contract_type);\n        const obj_start_dates = getStartDates(contract_type, start_date);\n        const obj_start_type = getStartType(obj_start_dates.start_date);\n        const obj_barrier = getBarriers(contract_type, contract_expiry_type, stored_barriers_data.barrier);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n        const obj_accumulator_range_list = getAccumulatorRange(contract_type);\n        const obj_barrier_choices = getBarrierChoices(contract_type, stored_barriers_data.barrier_choices);\n        const obj_multiplier_range_list = getMultiplierRange(contract_type, multiplier);\n        const obj_cancellation = getCancellation(contract_type, cancellation_duration, symbol);\n        const obj_expiry_type = getExpiryType(obj_duration_units_list, expiry_type);\n        const obj_equal = getEqualProps(contract_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n            ...obj_expiry_type,\n            ...obj_accumulator_range_list,\n            ...obj_barrier_choices,\n            ...obj_multiplier_range_list,\n            ...obj_cancellation,\n            ...obj_equal,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => [...k, ...list[l].categories.map(ct => ct.value)], [])\n            .filter(type => unsupported_contract_types_list.indexOf(type) === -1)\n            .sort((a, b) => (a === 'multiplier' || b === 'multiplier' ? -1 : 0));\n\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = c_type => {\n        let check = [];\n        if (contract_types[c_type]?.config?.should_override) {\n            check = [...contract_types[c_type].components];\n        } else {\n            check = ['duration', 'amount', ...contract_types[c_type].components].filter(\n                component =>\n                    !(\n                        component === 'duration' &&\n                        contract_types[c_type].config &&\n                        contract_types[c_type].config.hide_duration\n                    )\n            );\n        }\n        return (\n            contract_types && {\n                form_components: check,\n            }\n        );\n    };\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => {\n        return {\n            duration_units_list:\n                getPropertyValue(available_contract_types, [\n                    contract_type,\n                    'config',\n                    'durations',\n                    'units_display',\n                    contract_start_type,\n                ]) || [],\n        };\n    };\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units =\n            getPropertyValue(available_contract_types, [\n                contract_type,\n                'config',\n                'durations',\n                'units_display',\n                contract_start_type,\n            ]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max =\n            getPropertyValue(available_contract_types, [\n                contract_type,\n                'config',\n                'durations',\n                'min_max',\n                contract_start_type,\n            ]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = start_date => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config?.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config?.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date)\n            ? current_start_date\n            : start_dates_list[0]?.value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions = ((config.forward_starting_dates || []).find(option => option.value === start_date) || {})\n            .sessions;\n        return { sessions };\n    };\n\n    const hours = [...Array(24).keys()].map(a => `0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map(a => `0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(\n                minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm')\n            );\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(\n                    hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) ||\n                        compare_moment.format('HH')\n                );\n                compare_moment.minute(\n                    minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) ||\n                        compare_moment.format('mm')\n                );\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [hour, minute] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get())\n            .hour(hour)\n            .minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingEvents = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n        if (!(date in trading_events)) {\n            const trading_times_response = await WS.tradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                        trading_events[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                        symbol.events;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return trading_events[date][underlying];\n    };\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.tradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        open: symbol.times.open,\n                                        close: symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list) {\n            if (\n                (!expiry_type && duration_units_list.length > 0) ||\n                (duration_units_list.length === 1 && duration_units_list[0].value === 't')\n            ) {\n                return { expiry_type: 'duration' };\n            }\n            if (duration_units_list.length === 0) {\n                return {\n                    expiry_type: null,\n                };\n            }\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format(\n                    'YYYY-MM-DD'\n                );\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') ||\n                    (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [\n                    {\n                        open: start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                        close: minDate(\n                            start_moment.clone().add(24, 'hour'),\n                            buildMoment(expiry_date, market_close_time)\n                        ),\n                    },\n                ];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session =\n                        sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add(is_end_of_day || is_end_of_session ? 0 : 5, 'minutes');\n                    // Set the end_time to be multiple of 5 to be equal as the SELECTED_TIME that shown to the client.\n                    end_time = setMinuteMultipleByFive(end_time).format('HH:mm');\n                }\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n        return { expiry_time: end_time };\n    };\n\n    const setMinuteMultipleByFive = moment_obj => moment_obj.minute(Math.ceil(moment_obj.minute() / 5) * 5);\n\n    const getTradeTypes = contract_type => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type, stored_barrier_value) => {\n        const barriers = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1 = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2 = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1: stored_barrier_value || barrier_1.toString(),\n            barrier_2: barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis = getPropertyValue(available_contract_types, [contract_type, 'basis']) || [];\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => [...cur, { text: localized_basis[bas], value: bas }], []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    const getAccumulatorRange = contract_type => ({\n        accumulator_range_list:\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'growth_rate_range']) || [],\n    });\n\n    const getBarrierChoices = (contract_type, stored_barrier_choices = []) => ({\n        barrier_choices: stored_barrier_choices.length\n            ? stored_barrier_choices\n            : getPropertyValue(available_contract_types, [contract_type, 'config', 'barrier_choices']) || [],\n    });\n\n    const getMultiplierRange = (contract_type, multiplier) => {\n        const arr_multiplier =\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'multiplier_range']) || [];\n\n        return {\n            multiplier_range_list: arr_multiplier.map(m => ({ text: `x${m}`, value: m })),\n            multiplier: getArrayDefaultValue(arr_multiplier, multiplier),\n        };\n    };\n\n    const getCancellation = (contract_type, cancellation_duration, symbol) => {\n        const arr_cancellation_range =\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'cancellation_range']) || [];\n\n        const regex = new RegExp('^([0-9]+)|([a-zA-Z]+)$', 'g');\n        const getText = str => {\n            const [duration, unit] = str.match(regex);\n            const unit_map = getUnitMap();\n            return `${duration} ${unit_map[unit].name_plural}`;\n        };\n\n        const should_show_cancellation = shouldShowCancellation(symbol);\n\n        return {\n            cancellation_duration: getArrayDefaultValue(arr_cancellation_range, cancellation_duration),\n            cancellation_range_list: arr_cancellation_range.map(d => ({ text: `${getText(d)}`, value: d })),\n            ...(should_show_cancellation ? {} : { has_cancellation: false }),\n        };\n    };\n\n    const getEqualProps = contract_type => {\n        const base_contract_type = /^(.*)_equal$/.exec(contract_type)?.[1];\n\n        if (base_contract_type && !available_contract_types[base_contract_type]) {\n            return {\n                is_equal: 1,\n                has_equals_only: true,\n            };\n        }\n        return {};\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingEvents,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n        }),\n    };\n})();\n","import {\n    convertToUnix,\n    getDecimalPlaces,\n    getLocalizedBasis,\n    getPropertyValue,\n    isAccumulatorContract,\n    isTurbosContract,\n    toMoment,\n} from '@deriv/shared';\n\nconst isVisible = elem => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\nconst map_error_field = {\n    barrier: 'barrier_1',\n    barrier2: 'barrier_2',\n    date_expiry: 'expiry_date',\n};\n\nexport const getProposalErrorField = response => {\n    const error_field = getPropertyValue(response, ['error', 'details', 'field']);\n    if (!error_field) {\n        return null;\n    }\n    const error_id = map_error_field[error_field] || error_field;\n    const el_error = document.getElementsByName(error_id)[0];\n    return el_error && isVisible(el_error) ? error_id : null;\n};\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal = response.proposal || {};\n    const profit = proposal.payout - proposal.ask_price || 0;\n    const returns = (profit * 100) / (proposal.ask_price || 1);\n    const stake = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis =\n        store.is_vanilla || store.is_turbos\n            ? { text: getLocalizedBasis().payout_per_point, value: 'display_number_of_contracts' }\n            : basis_list.find(o => o.value !== store.basis) || {};\n\n    const is_stake = contract_basis.value === 'stake';\n    const price = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased = price > obj_prev_contract_basis.value;\n\n    if (!obj_prev_contract_basis.value || price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text: contract_basis.text || '',\n        value: price || '',\n    };\n\n    const commission = proposal.commission;\n    const cancellation = proposal.cancellation;\n    const accumulators_details = {\n        ...proposal.contract_details,\n        growth_rate: store.growth_rate,\n        spot_time: proposal.spot_time,\n    };\n\n    return {\n        commission,\n        cancellation,\n        id: proposal.id || '',\n        has_error: !!response.error,\n        has_error_details: !!getProposalErrorField(response),\n        error_code: response?.error?.code,\n        error_field: response?.error?.details?.field,\n        has_increased,\n        limit_order: proposal.limit_order,\n        message: proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout: proposal.payout,\n        profit: profit.toFixed(getDecimalPlaces(store.currency)),\n        returns: `${returns.toFixed(2)}%`,\n        stake,\n        spot: proposal.spot,\n        ...accumulators_details,\n    };\n};\n\nexport const createProposalRequests = store => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach(type => {\n        const new_req = createProposalRequestForContract(store, type);\n        requests[type] = new_req;\n    });\n\n    return requests;\n};\n\nconst setProposalMultiplier = (store, obj_multiplier) => {\n    obj_multiplier.multiplier = store.multiplier;\n    obj_multiplier.cancellation = store.has_cancellation ? store.cancellation_duration : undefined;\n\n    obj_multiplier.limit_order = store.has_take_profit || store.has_stop_loss ? {} : undefined;\n\n    if (store.has_take_profit && store.take_profit) {\n        obj_multiplier.limit_order.take_profit = +store.take_profit || 0; // send positive take_profit to API\n    }\n\n    if (store.has_stop_loss && store.stop_loss) {\n        obj_multiplier.limit_order.stop_loss = +store.stop_loss || 0; // send positive stop_loss to API\n    }\n};\n\nconst setProposalAccumulator = (store, obj_accumulator) => {\n    obj_accumulator.growth_rate = store.growth_rate;\n\n    obj_accumulator.limit_order = store.has_take_profit ? {} : undefined;\n\n    if (store.has_take_profit && store.take_profit) {\n        obj_accumulator.limit_order.take_profit = +store.take_profit || 0; // send positive take_profit to API\n    }\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_accumulator = {};\n    const obj_expiry = {};\n    const obj_multiplier = {};\n    let limit_order;\n\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    if (store.contract_type === 'multiplier') {\n        setProposalMultiplier(store, obj_multiplier);\n    }\n\n    if (store.contract_type === 'accumulator') {\n        setProposalAccumulator(store, obj_accumulator);\n    }\n\n    if (isTurbosContract(store.contract_type) && store.has_take_profit && store.take_profit) {\n        limit_order = { take_profit: +store.take_profit || 0 };\n    }\n\n    return {\n        proposal: 1,\n        subscribe: 1,\n        amount: parseFloat(store.amount) || 0,\n        basis: store.basis,\n        contract_type: type_of_contract,\n        currency: store.currency,\n        symbol: store.symbol,\n        ...(store.start_date && { date_start: convertToUnix(store.start_date, store.start_time) }),\n        ...(store.expiry_type === 'duration'\n            ? {\n                  duration: parseInt(store.duration),\n                  duration_unit: store.duration_unit,\n              }\n            : obj_expiry),\n        ...((store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            !isAccumulatorContract(type_of_contract) && {\n                barrier: store.barrier_1 || store.last_digit,\n            }),\n        ...(store.barrier_count === 2 && !isAccumulatorContract(type_of_contract) && { barrier2: store.barrier_2 }),\n        limit_order,\n        ...obj_accumulator,\n        ...obj_multiplier,\n    };\n};\n","import ServerTime from '_common/base/server_time';\nimport { toMoment } from '@deriv/shared';\n\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions = [],\n    compare_moment = toMoment(ServerTime.get()),\n    start_moment = toMoment(ServerTime.get()),\n    should_only_check_hour = false\n) =>\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n    (!sessions.length ||\n        !!sessions.find(session =>\n            compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')\n        ));\n","import React from 'react';\nimport { useStore } from '@deriv/stores';\nimport TradeStore from './Modules/Trading/trade-store';\n\nconst TraderStoreContext = React.createContext<TradeStore | null>(null);\n\nexport const TraderStoreProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const { modules } = useStore();\n    // const memoizedValue = useMemo(() => new TraderStore(), []);\n\n    return <TraderStoreContext.Provider value={modules?.trade}>{children}</TraderStoreContext.Provider>;\n};\n\nexport const useTraderStore = () => {\n    const store = React.useContext(TraderStoreContext);\n\n    if (!store) {\n        throw new Error('useTraderStore must be used within TraderStoreProvider');\n    }\n\n    return store;\n};\n","import { getMarketNamesMap, getContractConfig } from 'Constants/contract';\n\n/**\n * Fetch market information from shortcode\n * @param shortcode: string\n * @returns {{underlying: string, category: string}}\n */\n\n// TODO: Combine with  extractInfoFromShortcode function in shared, both are currently used\nexport const getMarketInformation = shortcode => {\n    const market_info = {\n        category: '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp(\n        '^([A-Z]+)_((1HZ[0-9-V]+)|((CRASH|BOOM)[0-9\\\\d]+[A-Z]?)|(OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)'\n    );\n    const extracted = pattern.exec(shortcode);\n    if (extracted !== null) {\n        market_info.category = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n\nexport const getMarketName = underlying => (underlying ? getMarketNamesMap()[underlying.toUpperCase()] : null);\n\nexport const getTradeTypeName = category => (category ? getContractConfig()[category.toUpperCase()]?.name : null);\n","const PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let common_store;\n\n    const init = store => {\n        if (!clock_started) {\n            common_store = store;\n            pending.resolve(common_store.server_time);\n            clock_started = true;\n        }\n    };\n\n    const get = () => (clock_started && common_store.server_time ? common_store.server_time.clone() : undefined);\n\n    return {\n        init,\n        get,\n        timePromise: () => (clock_started ? Promise.resolve(common_store.server_time) : pending.promise),\n    };\n})();\n\nmodule.exports = ServerTime;\n","const template = (string, content) => {\n    let to_replace = content;\n    if (content && !Array.isArray(content)) {\n        to_replace = [content];\n    }\n    return string.replace(/\\[_(\\d+)]/g, (s, index) => to_replace[+index - 1]);\n};\n\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach(attr => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash =\n        static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nmodule.exports = {\n    template,\n    createElement,\n    getStaticHash,\n    PromiseClass,\n};\n"],"names":["createContext","QueryClient","name","useState","is_loading","setIsLoading","is_subscribed","setSubscribed","error","setError","data","setData","subscriber","useRef","WS","useWS","subscribe","useCallback","props","prop","payload","undefined","current","response","e","unsubscribe","useEffect","store","useContext","StoreContext","Error","ExchangeRatesProvider","observer","children","useSubscription","update","useStore","exchange_rates","base_currency","prev","merge","BaseStore","onHydrationDone","makeObservable","this","observable","action","bound","unmount","makePersistable","properties","storage","window","localStorage","then","Function","stopPersisting","ExchangeRatesStore","FLAGS","foo","bar","baz","FeatureFlagsStore","Object","keys","length","old","forEach","flag","memoizedValue","useMemo","is_mock","feature_flags","values","value","Provider","BounceUp","animate","y","opacity","initial","transition","type","stiffness","damping","duration","Bounce","className","is_visible","keyname","motion","div","key","propTypes","PropTypes","SlideInFromTop","SlideInFromBottom","SlideIn","PositionsCardLoader","speed","height","width","backgroundColor","foregroundColor","x","rx","ry","TradeParamsLoader","MobileWrapper","viewBox","DesktopWrapper","addCommaToNumber","num","decimal_places","isNaN","n","String","toFixed","p","indexOf","replace","m","i","getBarrierLabel","contract_info","isDigitType","contract_type","localize","isVanillaContract","getBarrierValue","digitTypeMap","barrier","test","toLowerCase","DIGITDIFF","DIGITEVEN","DIGITMATCH","DIGITODD","DIGITOVER","DIGITUNDER","filterByContractType","trade_contract_type","shortcode","is_call_put","isCallPut","is_high_low","isHighLow","is_vanilla","trade_types","getContractTypesConfig","match","includes","data_testid","is_invisible","theme","id","classNames","invisible","Array","from","map","_x","inx","ChartLoader","is_dark","findRouteByPath","path","routes_config","result","some","route_info","match_path","matchPath","message","routes","Text","color","size","Icon","icon","align","PositionsDrawerCardItem","portfolio_position","row","measure","onHoverPosition","symbol","is_new_row","in_prop","useNewRowTransition","React","is_sold","CSSTransition","in","timeout","appear","enter","enterDone","exit","onEntered","unmountOnExit","PositionsDrawerCard","onMouseEnter","onMouseLeave","onFooterEntered","should_show_transition","PositionsDrawer","useTraderStore","client","common","contract_trade","portfolio","ui","currency","server_time","getContractById","all_positions","onMount","onClickCancel","onClickSell","onClickRemove","removePositionById","is_mobile","is_positions_drawer_on","toggleDrawer","togglePositionsDrawer","addToast","current_focus","removeToast","setCurrentFocus","should_show_cancellation_warning","toggleCancellationWarning","toggleUnsupportedContractModal","drawer_ref","list_ref","scrollbar_ref","scrollTo","scrollToTop","positions","filter","underlying","TURBOS","SHORT","LONG","body_content","DataList","data_source","rowRenderer","args","keyMapper","row_gap","weight","onClick","ref","NavLink","to","reports","onChangeContractUpdate","onClickContractUpdate","getTradingTimes","target_time","tradingTimes","api_initial_load_error","getSymbol","target_symbol","trading_times","markets","submarkets","j","symbols","find","item","calculateTimeLeft","remaining_time_to_open","difference","Date","now","days","Math","floor","hours","minutes","seconds","MarketCountdownTimer","is_main_page","setIsTimerLoading","onMarketOpen","active_symbols","isMounted","useIsMounted","when_market_opens","setWhenMarketOpens","time_left","setTimeLeft","setLoading","isMarketClosed","whenMarketOpens","days_offset","target_date","moment","add","format","api_response","times","open","close","date_str","toISOString","substring","getUTCDate","hour","opening_time","timer","setTimeout","clearTimeout","timer_components","toString","padStart","opening_time_banner","formatted_opening_time","convertTimeFormat","opening_date","opening_day","as","line_height","Localize","i18n_default_text","components","isRequired","MarketIsClosedOverlay","is_eu","is_synthetics_trading_market_available","is_timer_loading","btn_lbl","Button","text","primary","styles","container","fontSize","lineHeight","position","zIndex","background","padding","marginTop","display","overflowY","prop_name","tabs","textAlign","marginBottom","tab","border","Test","stores","trade_store","test_stores","trade","entries","setIsVisible","setStore","document","addEventListener","stateVisibility","removeEventListener","ctrlKey","keyCode","style","fontWeight","sort","k","v","JSON","stringify","toJS","symbolChange","onSymbolChange","target","DigitsWidget","digits","tick","onDigitChange","onChange","trade_type","selected_digit","last_digit","last_contract","digits_info","display_status","is_digit_contract","is_ended","Digits","digits_array","is_trade_page","ChartTopWidgets","yAxiswidth","charts_ref","is_digits_widget_active","open_market","is_dark_mode_on","chart","isMobile","y_axis_width","ChartBottomWidgets","show_accumulators_stats","Widget","AccumulatorsStats","Screen","Loadable","loader","loading","render","loaded","Component","FormLayout","is_market_closed","is_trade_enabled","ACTIONS","AccumulatorsProfitLossText","current_spot","current_spot_time","profit","is_fading_in","setIsFadingIn","is_sliding","setIsSliding","formatted_profit","formatMoney","prev_profit_tenth","split","current_profit_tenth","setCurrentProfitTenth","profit_tenth_ref","interval_id_ref","fading_in_timeout_id","sliding_timeout_id","profit_portions_array","profit_whole_number","profit_tenth","profit_hundredths","slice","won","sign","runThroughTenthDigit","interval_ms","start","end","clearInterval","interval_id","setInterval","abs","delta","markerRef","setPosition","epoch","price","getCurrencyDisplayCode","AccumulatorsProfitLossTooltip","alignment","exit_tick","exit_tick_time","high_barrier","should_show_profit_text","is_tooltip_open","setIsTooltipOpen","tooltip_timeout","onCloseDelayed","onHoverOrTapHandler","opposite_arrow_position","horizontal","el","onTouchStart","onTouchEnd","Money","amount","has_sign","show_currency","AccumulatorsChartElements","has_crossed_accu_barriers","accumulators_positions","contract_id","marker_config","ContentComponent","marker_content_props","ToolbarWidgets","updateChartType","updateGranularity","portalNodeId","onChartType","onGranularity","isDesktop","searchInputClassName","BottomWidgetsMobile","setTick","setDigits","Trade","form_components","getFirstOpenMarket","should_show_active_symbols_loading","is_chart_loading","onUnmount","prepareTradeStore","setContractTypes","setMobileDigitView","show_digits_stats","is_accumulator","is_synthetics_available","is_turbos","NotificationMessages","notification_messages_ui","is_market_unavailable_visible","has_only_forward_starting_contracts","should_show_multipliers_onboarding","is_dark_theme","network_status","try_synthetic_indices","setTrySyntheticIndices","try_open_markets","setTryOpenMarkets","category","setCategory","subcategory","setSubcategory","setIsDigitsWidgetActive","setMarket","markets_to_search","market_cat","market_subcat","selectMultipliers","bottomWidgets","d","t","onTryOtherMarkets","topWidgets","params","form_wrapper_class","chart_height_offset","Div100vhContainer","is_disabled","height_offset","fallback","ChartTrade","SwipeableWrapper","index","SmartChartWithRef","SmartChart","innerRef","ChartMarkers","config","markers_array","granularity","marker","Marker","AllMarkers","end_epoch","accumulator_barriers_data","accumulator_contract_barriers_data","chart_type","is_chart_layout_default","is_chart_countdown_visible","is_socket_opened","current_language","should_show_eu_content","chartStateChange","main_barrier","main_barrier_flattened","extra_barriers","barriers_flattened","exportLayout","setChartStatus","chart_layout","wsForget","wsForgetStream","wsSendRequest","wsSubscribe","has_alternative_source","refToAddTick","settings","assetInformation","countdown","isHighestLowestMarkerEnabled","language","barriers","max_ticks","crosshair","crosshairTooltipLeftAllow","showLastDigitStats","chartControlsWidgets","chartStatusListener","chartType","initialData","activeSymbols","parse","chartData","feedCall","enabledNavigationWidget","enabledChartFooter","maxTick","requestAPI","requestForget","requestForgetStream","requestSubscribe","allowTickChartTypeOnly","stateChangeListener","isConnectionOpened","clearChart","toolbarWidget","importedLayout","onExportLayout","shouldFetchTradingTimes","hasAlternativeSource","getMarketsOrder","synthetic_index","has_synthetic_index","s","market","a","b","display_name","reduce","arr","push","yAxisMargin","top","accumulators_high_barrier","getDecimalPlaces","routesConfig","ContractDetails","moduleLoader","route_default","component","getTitle","contract","is_authenticated","exact","BinaryLink","active_class","normalizePath","route","getRoutesConfig","activeClassName","Route","pathname","removeBranchName","location","is_valid_route","lastIndexOf","r","validateRoute","Redirect","is_logging_in","is_logged_in","redirectToLogin","getLanguage","default_subroute","has_default_subroute","isEmptyObject","title","default_title","alternateLinkTagChange","canonicalLinkTagChange","Switch","idx","checkRoutingMatch","route_list","tradePageMountingMiddleware","path_from","path_to","match_patterns","callback","pattern","UILoader","Routes","history","passthrough","setTradeMountingPolicy","setSkipPrePostLifecycle","has_error","onUnmountPortfolio","setPromptHandler","route_to","flatMap","subroute","mt5","dxtrade","has_match","withRouter","ResultMobile","is_contract_won","PositionsModalCard","contract_update","current_tick","indicative","is_sell_requested","is_unsupported","profit_loss","sell_price","status","togglePositions","loader_el","is_multiplier","isMultiplierContract","isAccumulatorContract","isTurbosContract","is_crypto","isCryptoContract","has_progress_slider","has_ended","getEndTime","fallback_result","total_profit","getTotalProfit","should_show_sell","hasContractEntered","isOpen","getSymbolDisplayName","getMarketInformation","contract_options_el","ContractCard","ContractTypeCell","getContractTypeDisplay","multiplier","Sell","getCardLabels","CurrencyBadge","isCryptocurrency","buy_price","payout","ProgressSliderMobile","start_time","date_start","expiry_time","date_expiry","ticks_count","tick_count","contract_vanilla_el","Header","bid_price","entry_spot","TOTAL_PROFIT_LOSS","Footer","custom_card_header","custom_card_body","Body","is_positions","custom_card_footer","custom_contract_el","should_show_result_overlay","contract_el","getContractPath","duration_unit","exit_spot","is_valid_to_sell","sell_time","TogglePositions","positions_count","is_open","positions_toggle_class","active_positions_count","disableApp","enableApp","filtered_positions","is_empty","hidden_positions_ids","setHiddenPositionsIds","displayed_positions","every","hidden_position_id","closed_positions_ids","closeModal","Set","TransitionGroup","Modal","toggleModal","is_vertical_top","has_close_icon","positions_currency","positions_error","onPositionsSell","onPositionsCancel","modules","populateHeaderExtensions","onMountPositions","is_populating_account_list","cashier","general_store","onMountCashier","onMountCommon","setAccountSwitchListener","show_positions_toggle","show_component","populateHeaderfunction","header_items","waitForLogin","when","wait","TradeFooterExtensions","populateFooterExtensions","populateFooter","TogglePositionsIcon","ChartSettingContainer","populateSettingsExtensions","populateSettings","menu_items","label","renderItemValue","onChangeSymbolAsync","ContractType","buildContractTypesConfig","getValidationRules","rules","min","barrier_1","condition","barrier_count","func","options","inputs","barrier_2","input","trigger","start_date","expiry_date","contract_start_type","isTimeValid","isHourValid","isMinuteValid","start_moment","toMoment","start_moment_clone","clone","h","isSessionAvailable","sessions","minute","getMultiplierValidationRules","stop_loss","has_stop_loss","take_profit","has_take_profit","processPurchase","proposal_id","buy","onChangeContractTypeList","contract_types_list","getContractType","onChangeContractType","getContractValues","onChangeExpiry","contract_expiry_type","getExpiryType","getBarriers","duration_min_max","assertDuration","getDurationMinMaxValues","max","onChangeStartDate","root_store","expiry_type","obj_contract_start_type","getStartType","obj_sessions","getSessions","obj_start_time","getStartTime","obj_duration_units_list","getDurationUnitsList","duration_units_list","obj_duration_unit","getDurationUnit","obj_expiry_type","obj_expiry_date","getExpiryDate","obj_duration_min_max","getDurationMinMax","obj_market_open_times","market_open_times","obj_market_close_times","market_close_times","obj_expiry_time","getExpiryTime","processInSequence","functions","snapshot","getSnapshot","assign","updateStore","processTradeParams","new_state","getMethodsList","duration_functions","getExpiryMethodsList","ContractTypeHelper","getContractCategories","StartDate","Duration","getHoveredColor","BARRIER_COLORS","RED","GREEN","GRAY","errors","attribute","has","prototype","hasOwnProperty","call","error_count","rule","is_rule_string","rule_object","validator","getPreBuildDVRs","error_message","template","name1","name2","ruleObject","Validator","getRuleObject","is_valid","is_ok","addFailure","check","validation_errors","validation_rules","preSwitchAccountDisposer","pre_switch_account_listener","switchAccountDisposer","switch_account_listener","logoutDisposer","logout_listener","clientInitDisposer","client_init_listener","networkStatusChangeDisposer","network_status_change_listener","themeChangeDisposer","theme_change_listener","realAccountSignupEndedDisposer","real_account_signup_ended_listener","partial_fetch_time","retrieveFromStorage","setValidationErrorMessages","setValidationRules","addRule","validateProperty","validateAllProperties","onSwitchAccount","onPreSwitchAccount","onLogout","onClientInit","onNetworkStatusChange","onThemeChange","onRealAccountSignupEnd","disposePreSwitchAccount","disposeSwitchAccount","disposeLogout","disposeClientInit","disposeNetworkStatusChange","disposeThemeChange","disposeRealAccountSignupEnd","assertHasValidCache","local_storage_properties","session_storage_properties","store_name","defineProperty","enumerable","writable","setupReactionForLocalStorage","setupReactionForSessionStorage","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","setItem","sessionStorage","local_storage_snapshot","getItem","session_storage_snapshot","propertyName","messages","concat","property","intercept","change","newValue","isPassed","get","listener","switch_broadcast","switchEndSignal","isProduction","console","pre_switch_broadcast","setPreSwitchAccount","has_logged_out","setLogout","initialized_broadcast","setInitialized","is_network_online","is_online","has_real_account_signup_ended","setRealAccountSignupEnd","loginid","reactions","act","freeze","Symbol","removeBarrier","findIndex","splice","ChartBarrierStore","low_barrier","onChartBarrierChange","line_style","not_draggable","lineStyle","shade","shadeColor","high","low","relative","draggable","hidePriceLines","hideBarrierLine","hideOffscreenLine","updateBarriers","updateBarrierShade","onBarrierChange","updateBarrierColor","computed","default_shade","BARRIER_LINE_STYLES","SOLID","bind","has_barrier","should_display","CONTRACT_SHADES","is_relative","barriers_list","barriersToString","is_dark_mode","DARK_GRAY","DEFAULT_SHADES","LIMIT_ORDER_TYPES","STOP_OUT","TAKE_PROFIT","STOP_LOSS","setLimitOrderBarriers","is_over","limit_order","isLimitOrderBarrierSupported","limit_orders","obj_limit_order","obj_barrier","ORANGE","DOTTED","showOffscreenArrows","isSingleBarrier","opacityOnOverlap","l","g_subscribers_map","TradeStore","is_trade_component_mounted","is_purchase_enabled","is_equal","has_equals_only","previous_symbol","basis","basis_list","stake_boundary","expiry_epoch","hovered_barrier","barrier_choices","Number","start_dates_list","is_mobile_digit_view_selected","proposal_info","purchase_info","accumulator_range_list","growth_rate","maximum_payout","maximum_ticks","ticks_history_stats","tick_size_barrier","multiplier_range_list","has_cancellation","commission","cancellation_price","stop_out","expiration","hovered_contract_type","cancellation_duration","cancellation_range_list","long_barriers","short_barriers","vanilla_trade_type","is_trade_params_expanded","contract_purchase_toast_box","addTickByProposal","debouncedProposal","debounce","requestProposal","proposal_requests","is_purchasing_contract","initial_barriers","is_initial_barrier_applied","should_skip_prepost_lifecycle","clearContracts","contracts","setMainBarrier","isBarrierSupported","DASHED","onPurchase","disablePurchaseButtons","el_purchase_value","getElementsByClassName","el_purchase_buttons","classList","prev_chart_layout","req","subscribeTicksHistory","current_spot_data","quote","prices","echo_req","ticks_history","updateAccumulatorBarriersData","stream_id","forgetStream","time","ServerTime","msg_type","unix","send","setHoveredBarrier","setDefaultGrowthRate","accountSwitcherListener","barrier_pipsize","changeDurationValidationRules","clearContractPurchaseToastBox","clearLimitOrderBarriers","clearPurchaseInfo","clientInitListener","enablePurchase","forgetAllProposal","initAccountCurrency","is_symbol_in_active_symbols","loadActiveSymbols","logoutListener","manageMxMltRemovalNotification","networkStatusChangeListener","onAllowEqualsChange","onChangeMultiple","onHoverPurchase","onProposalResponse","override","preSwitchAccountListener","pushPurchaseDataToGtm","refresh","resetAccumulatorData","resetErrorServices","resetPreviousSymbol","setActiveSymbols","setAllowEqual","setBarrierChoices","setContractPurchaseToastbox","setDefaultSymbol","setIsTradeParamsExpanded","setMarketStatus","setPreviousSymbol","setPurchaseSpotBarrier","setStakeBoundary","setTradeStatus","themeChangeListener","updateLimitOrderBarriers","updateSymbol","date","resetEndTimeOnVolatilityIndices","setContractType","symbol_info","exchange_is_open","clearAccumulatorBarriersData","should_skip","should_set_default_symbol","should_show_loading","contractsFor","code","pickDefaultSymbol","symbol_to_update","processNewValuesAsync","runInAction","is_on_mf_account","landing_company_shortcode","hide_close_mx_mlt_storage_flag","parseInt","clients_country","showError","showUnavailableLocationError","authorized","can_have_mx_account","can_have_mlt_account","showMxMltUnavailableError","showDigitalOptionsUnavailableError","platform_name_trader","getPlatformSettings","link","platform_name_mt5","contract_categories","setSelectedContractType","default_currency","selectCurrency","hovered_value","purchase_spot_barrier","hideOffscreenBarrier","getBarrierPipSize","isDigitTradeType","is_tick_contract","setServicesError","services_error","contract_data","longcode","extractInfoFromShortcode","isDigitContractType","toUpperCase","addContract","onBuyResponse","openPositionsDrawer","is_unwelcome","cloneObject","is_changed_by_user","obj_old_values","should_forget_first","obj_new_values","prev_chart_type","prev_granularity","savePreviousChartMode","prev_currency","has_currency_changed","should_reset_stake","getMinPayout","setHasOnlyForwardingContracts","is_advanced_duration","bool","event","bom_ui","barrier1","barrier2","positions_drawer","toolbar_position","chart_asset_info","is_chart_asset_info_visible","gtm","pushDataLayer","requests","createProposalRequests","subscribeProposal","resetPurchaseStates","forgetAll","prev_proposal_info","getPropertyValue","obj_prev_contract_basis","proposal","is_crypto_multiplier","getProposalInfo","MULTUP","cancellation","ask_price","order_amount","ACCU","barrier_spot_distance","ticks_stayed_in","last_tick_epoch","spot_time","previous_ticks_history_stats","new_ticks_history_stats","previous_history","previous_epoch","reverse","getUpdatedTicksHistoryStats","accumulators_low_barrier","error_id","getProposalErrorField","details","commission_match","field","max_stake","min_stake","limits","duration_options","convertDurationLimit","is_language_changing","Promise","resolve","toggleServicesErrorModal","notifications","setShouldShowPopups","addNotificationMessage","client_notifications","notification_messages","unmarkNotificationMessage","get_notification_messages","has_iom_account","has_malta_account","hidden_close_account_notification","close_mx_mlt_account","new_currency","is_notifications_visible","toggleNotificationsModal","is_used","layout","previousMaxTicks","isDone","state","option","market_close_prop","list","getAvailableContractTypes","unsupported_contract_types_list","findFirstOpenMarket","stored_barriers_data","getContractSubtype","ModulesStore","core_store","RootStore","pushwoosh","contract_replay","chart_barrier_store","configure","enforceActions","websocket","setWebsocket","TradeModals","initStore","APPLY","BARRIER","BUY_PRICE","CANCEL","CLOSE","CONTRACT_VALUE","CURRENT_STAKE","DAY","DAYS","DEAL_CANCEL_FEE","DECREMENT_VALUE","DONT_SHOW_THIS_AGAIN","ENTRY_SPOT","INCREMENT_VALUE","NOT_AVAILABLE","RESALE_NOT_OFFERED","SELL","STAKE","STRIKE","TICK","TICKS","PROFIT_LOSS","POTENTIAL_PROFIT_LOSS","INDICATIVE_PRICE","INITIAL_STAKE","LOST","PAYOUT","PURCHASE_PRICE","POTENTIAL_PAYOUT","TAKE_PROFIT_LOSS_NOT_AVAILABLE","WON","getMarketNamesMap","FRXAUDCAD","FRXAUDCHF","FRXAUDJPY","FRXAUDNZD","FRXAUDPLN","FRXAUDUSD","FRXBROUSD","FRXEURAUD","FRXEURCAD","FRXEURCHF","FRXEURGBP","FRXEURJPY","FRXEURNZD","FRXEURUSD","FRXGBPAUD","FRXGBPCAD","FRXGBPCHF","FRXGBPJPY","FRXGBPNOK","FRXGBPUSD","FRXNZDJPY","FRXNZDUSD","FRXUSDCAD","FRXUSDCHF","FRXUSDJPY","FRXUSDNOK","FRXUSDPLN","FRXUSDSEK","FRXXAGUSD","FRXXAUUSD","FRXXPDUSD","FRXXPTUSD","OTC_AEX","OTC_AS51","OTC_DJI","OTC_FCHI","OTC_FTSE","OTC_GDAXI","OTC_HSI","OTC_IBEX35","OTC_N225","OTC_NDX","OTC_SPC","OTC_SSMI","OTC_SX5E","R_10","R_25","R_50","R_75","R_100","BOOM300N","BOOM500","BOOM1000","CRASH300N","CRASH500","CRASH1000","RDBEAR","RDBULL","STPRNG","WLDAUD","WLDEUR","WLDGBP","WLDXAU","WLDUSD","JD10","JD25","JD50","JD75","JD100","JD150","JD200","CRYBCHUSD","CRYBNBUSD","CRYBTCLTC","CRYIOTUSD","CRYNEOUSD","CRYOMGUSD","CRYTRXUSD","CRYBTCETH","CRYZECUSD","CRYXMRUSD","CRYXMLUSD","CRYXRPUSD","CRYBTCUSD","CRYDSHUSD","CRYETHUSD","CRYEOSUSD","CRYLTCUSD","getContractConfig","button_name","CALL","PUT","CALLE","PUTE","ONETOUCH","NOTOUCH","MULTDOWN","TURBOSLONG","TURBOSSHORT","VANILLALONGCALL","VANILLALONGPUT","RUNHIGH","RUNLOW","EXPIRYMISS","EXPIRYRANGE","RANGE","UPORDOWN","getSupportedContracts","RESETCALL","RESETPUT","TICKHIGH","TICKLOW","ASIANU","ASIAND","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","CALLSPREAD","PUTSPREAD","show_button_name","contract_config","getContractTypePosition","TicksHistoryCounter","has_progress_dots","should_highlight_last_counter","should_emphasize_last_counter","dot","ExpandedTicksHistory","history_text_size","rows","counter","AccumulatorsStatsManualModal","icon_classname","is_manual_open","toggleManual","getVideoSource","extension","getUrlBase","mp4_src","webm_src","should_header_stick_body","Loading","is_fullscreen","autoPlay","loop","onLoadedData","playsInline","preload","src","ROW_SIZES","is_expandable","is_collapsed","setIsCollapsed","setIsManualOpen","widget_title","acc","_el","desktop_row_size","mobile_row_size","row_size","MobileDialog","onClose","portal_element_id","visible","wrapper_classname","Digit","is_latest","is_lost","is_selected","is_won","percentage","display_percentage","parseFloat","DigitSpot","is_selected_winning","LastDigitStat","is_max","is_min","w","cx","cy","fill","stroke","strokeWidth","strokeOpacity","strokeDasharray","strokeDashoffset","DigitDisplay","has_entry_spot","onSelect","latest_digit","stats","onLastDigitSpot","digit","spot","is_digit_selectable","is_digit_selected","LastDigitPointer","transform","left","custom_color","display_array","LastDigitPrediction","dimension","digit_offset","digit_offset_mobile","handleSelect","digit_value","isSelectableDigitType","getOffset","last_contract_digit","latest_tick_pip_size","pip_size","latest_tick_ask_price","ask","latest_tick_digit","pop","barrier_map","val","DigitsWrapper","onChangeStatus","has_contract","is_tick_ready","is_contract_elapsed","isContractElapsed","tick_stream","bid","tick_display_value","entry_tick","underlying_name","setStatus","setCurrentTick","setSpot","setIsSelectedWinning","setIsLatest","setIsWon","setIsLost","Popover","classNameBubble","margin","displayName","PageError","header","error_code","redirect_urls","redirect_labels","classNameImage","image_url","ChartMarker","is_bottom_widget_visible","marker_props","getMemoizedComponent","parse_svg","markup","DOMParser","svg","parseFromString","attributes","paths","points","with_color","bg_color","START","END","is_firefox","navigator","userAgent","search","RawMarkerMaker","draw_callback","epoch_array","price_array","rest","dark_theme","accu_contract_shade","accu_shade","accu_shade_crossed","bg","fg","grey_border","lost","sold","light_theme","getColor","colors","calc_scale","zoom","sqrt","hex_map","calc_opacity","draw_path","ctx","save","scale","translate","prev_x","prev_y","fillStyle","strokeStyle","beginPath","cx1","cx2","cy1","cy2","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","start_a","end_a","arc","closePath","restore","draw_shaded_barriers","labels","start_left","bottom","stroke_color","fill_color","has_persistent_borders","previous_tick","end_left","canvas","offsetWidth","parentElement","stx","panels","yaxisTotalWidthRight","end_top","offsetHeight","xaxisHeight","is_top_visible","is_bottom_visible","displayed_top","displayed_bottom","is_start_left_visible","middle_top","lineWidth","setLineDash","font","fillText","draw_line_without_tick_marker","radius","prev_tick_stroke_color","globalCompositeOperation","PI","fillRect","render_label","line","ceil","measureText","shadowed_text","shadowColor","shadowBlur","TickContract","context","canvas_fixed_height","canvas_height","ticks","is_last_contract","is_in_contract_details","accu_barriers_difference","is_accumulator_trade_without_contract","is_expired","is_accumulator_contract","contract_status","getContractStatus","is_accu_contract_ended","draw_start_line","devicePixelRatio","Boolean","entry","contract_details_start_left","clr","ICONS","currency_symbols","AUD","EUR","GBP","JPY","USD","BTC","BCH","ETH","ETC","LTC","UST","NonTickContract","expiry","entry_tick_top","exit_tick_top","show_profit","DigitContract","BottomWidgets","portal","getElementById","active_trade_type","trade_type_name","findContractCategory","contract_types","ReactDOM","Toast","shouldUnescape","RecentTradeInfo","latest_tick_contract","isEnded","isDigitContract","TopWidgets","InfoBox","is_title_enabled","ChartTitleLocal","enabled","isNestedList","Module","setSmartChartsPublicPath","load","component_name","module","default","ChartTitle","ChartMode","DrawTools","Share","StudyLegend","Views","ToolbarWidget","FastMarker","RawMarker","ToastPopup","portal_id","NetworkStatusToastError","setIsOpen","NetworkStatusToastErrorPopup","tooltip","contract_category_icon","getContractTypeCategoryIcons","All","Accumulators","Options","Multipliers","Turbos","unsupported_list","categories","contract_name","available_contract_types","list_item","getContractCategoryKey","getContractTypes","digitCategoriesMap","digitTypesMap","available_categories","trading_events","buildTradeTypesConfig","getArrayDefaultValue","getComponents","getStartDates","getValidTime","buildMoment","setMinuteMultipleByFive","getTradeTypes","getBasis","getAccumulatorRange","getBarrierChoices","getMultiplierRange","getCancellation","getEqualProps","contract_display","arr_new_values","c_type","should_override","hide_duration","duration_units","arr_units","obj","current_start_date","has_spot","forward_starting_dates","compare_moment","moment_obj","arr_basis","localized_basis","getLocalizedBasis","cur","bas","stored_barrier_choices","arr_multiplier","arr_cancellation_range","regex","RegExp","should_show_cancellation","shouldShowCancellation","str","unit","unit_map","getUnitMap","name_plural","base_contract_type","exec","has_contracts","contracts_for","available","start_type","getContractCategoriesConfig","sub_cats","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","growth_rate_range","multiplier_range","cancellation_range","stored_barrier_value","barrier_values","count","arr_list","ct","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_duration_units_min_max","obj_accumulator_range_list","obj_barrier_choices","obj_multiplier_range_list","obj_cancellation","obj_equal","getFullContractTypes","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","isSameOrBefore","end_time","market_close_time","end_moment","expiry_sessions","minDate","diff","is_end_of_day","is_end_of_session","subtract","getTradingEvents","trading_times_response","events","map_error_field","error_field","elem","el_error","getElementsByName","returns","stake","display_value","contract_basis","payout_per_point","o","has_increased","obj_contract_basis","accumulators_details","contract_details","has_error_details","new_req","createProposalRequestForContract","type_of_contract","obj_accumulator","obj_expiry","obj_multiplier","convertToUnix","setProposalMultiplier","setProposalAccumulator","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","TraderStoreContext","TraderStoreProvider","market_info","extracted","common_store","clock_started","pending","PromiseClass","require","init","timePromise","promise","exports","static_hash","reject","string","content","to_replace","isArray","createElement","tag_name","attr","textContent","html","setAttribute","getStaticHash","querySelector","getAttribute"],"sourceRoot":""}