{"version":3,"file":"trader/js/trader.screen-small.17844250242a812182a0.js","mappings":"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","sources":["webpack://@deriv/trader/./src/Modules/Trading/Containers/allow-equals.jsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/preview-proposal.js","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/amount-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/multiplier-amount-modal.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/RadioGroupWithInfoMobile/radio-group-with-info-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/RadioGroupWithInfoMobile/index.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/multiplier-options.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/radio-group-options-modal.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/expiration-modal.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/widgets.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-amount-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Duration/duration-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/trade-params-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/mobile-widget.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/Multiplier/cancel-deal-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/risk-management-dialog.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/Multiplier/risk-management-info.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/payout-per-point-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/screen-small.jsx"],"sourcesContent":["import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer } from '@deriv/stores';\nimport React from 'react';\nimport { Checkbox, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\n\nconst AllowEquals = ({ onChange, is_allow_equal, has_equals_only, className }) => {\n    const handleOnChange = e => {\n        e.persist();\n        const { name, checked } = e.target;\n        onChange({ target: { name, value: Number(checked) } });\n    };\n\n    return (\n        <div className={classNames('allow-equals', 'mobile-widget', className)}>\n            <Checkbox\n                label={localize('Equals')}\n                value={is_allow_equal}\n                name='is_equal'\n                onChange={handleOnChange}\n                disabled={has_equals_only}\n            />\n            <Text as='p' size='xxxs'>\n                <Localize i18n_default_text='Win payout if exit spot is also equal to entry spot.' />\n            </Text>\n        </div>\n    );\n};\n\nAllowEquals.propTypes = {\n    className: PropTypes.string,\n    is_allow_equal: PropTypes.bool,\n    has_equals_only: PropTypes.bool,\n    onChange: PropTypes.func,\n};\n\nexport default observer(() => {\n    const { is_equal, has_equals_only, onChange } = useTraderStore();\n    const allow_equals_props = {\n        is_allow_equal: !!is_equal,\n        has_equals_only,\n        onChange,\n    };\n    return <AllowEquals {...allow_equals_props} />;\n});\n","import debounce from 'lodash.debounce';\nimport { isEmptyObject, WS } from '@deriv/shared';\nimport { createProposalRequests } from './proposal';\n\nexport const requestPreviewProposal = debounce((store, override = {}, onProposalResponse) => {\n    const new_store = { ...store, ...override };\n    const requests = createProposalRequests(new_store);\n    const subscription_map = {};\n\n    const onResponse = response => {\n        if (response.error) return;\n\n        subscription_map[response.subscription.id] = true;\n        onProposalResponse(response);\n    };\n\n    if (!isEmptyObject(requests)) {\n        const proposal_requests = requests;\n\n        Object.keys(proposal_requests).forEach(type => {\n            WS.subscribeProposal(proposal_requests[type], onResponse);\n        });\n    }\n\n    return () => {\n        Object.keys(subscription_map).forEach(id => {\n            WS.forget(id);\n            delete subscription_map[id];\n        });\n    };\n}, 700);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Localize, localize } from '@deriv/translations';\nimport { Money, Numpad, Tabs } from '@deriv/components';\nimport { getDecimalPlaces, isEmptyObject } from '@deriv/shared';\nimport MinMaxStakeInfo from './min-max-stake-info';\n\nconst Basis = observer(\n    ({\n        basis,\n        duration_unit,\n        duration_value,\n        toggleModal,\n        has_duration_error,\n        selected_basis,\n        setSelectedAmount,\n        setAmountError,\n    }) => {\n        const { ui, client } = useStore();\n        const { addToast } = ui;\n        const { currency } = client;\n        const {\n            is_turbos,\n            is_vanilla,\n            onChangeMultiple,\n            trade_amount,\n            trade_basis,\n            trade_duration_unit,\n            trade_duration,\n            contract_type,\n        } = useTraderStore();\n        const user_currency_decimal_places = getDecimalPlaces(currency);\n        const onNumberChange = num => {\n            setSelectedAmount(basis, num);\n            validateAmount(num);\n        };\n        const formatAmount = value =>\n            !isNaN(value) && value !== '' ? Number(value).toFixed(user_currency_decimal_places) : value;\n        const setBasisAndAmount = amount => {\n            const on_change_obj = {};\n\n            // Check for any duration changes in Duration trade params Tab before sending onChange object\n            if (duration_unit !== trade_duration_unit && !has_duration_error)\n                on_change_obj.duration_unit = duration_unit;\n            if (duration_value !== trade_duration && !has_duration_error) on_change_obj.duration = duration_value;\n\n            if (amount !== trade_amount || basis !== trade_basis) {\n                on_change_obj.basis = basis;\n                on_change_obj.amount = amount;\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n        const zero_decimals = Number('0').toFixed(getDecimalPlaces(currency));\n        const min_amount = parseFloat(zero_decimals.toString().replace(/.$/, '1'));\n\n        const validateAmount = value => {\n            const localized_message = <Localize i18n_default_text='Should not be 0 or empty' />;\n            const selected_value = parseFloat(value.toString());\n\n            if (value.toString() === '0.' || selected_value === 0) {\n                addToast({ key: 'amount_error', content: localized_message, type: 'error', timeout: 2000 });\n                setAmountError(true);\n                return 'error';\n            } else if (isNaN(selected_value) || selected_value < min_amount || value.toString().length < 1) {\n                addToast({ key: 'amount_error', content: localized_message, type: 'error', timeout: 2000 });\n                setAmountError(true);\n                return false;\n            }\n            setAmountError(false);\n            return true;\n        };\n\n        return (\n            <React.Fragment>\n                <div className='trade-params__stake-container'>\n                    {(is_turbos || is_vanilla) && <MinMaxStakeInfo />}\n                    <div\n                        className={classNames('trade-params__amount-keypad', {\n                            strike__pos: contract_type === 'vanilla',\n                        })}\n                    >\n                        <Numpad\n                            value={selected_basis}\n                            format={formatAmount}\n                            onSubmit={setBasisAndAmount}\n                            currency={currency}\n                            min={min_amount}\n                            is_currency\n                            render={({ value, className }) => {\n                                return (\n                                    <div className={className}>\n                                        {parseFloat(value) > 0 ? (\n                                            <Money currency={currency} amount={value} should_format={false} />\n                                        ) : (\n                                            value\n                                        )}\n                                    </div>\n                                );\n                            }}\n                            reset_press_interval={450}\n                            reset_value=''\n                            pip_size={user_currency_decimal_places}\n                            onValidate={validateAmount}\n                            submit_label={localize('OK')}\n                            onValueChange={onNumberChange}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n);\n\nconst Amount = observer(\n    ({\n        toggleModal,\n        duration_value,\n        duration_unit,\n        has_duration_error,\n        amount_tab_idx,\n        setAmountError,\n        setAmountTabIdx,\n        setSelectedAmount,\n        stake_value,\n        payout_value,\n    }) => {\n        const { basis, basis_list } = useTraderStore();\n        const has_selected_tab_idx = typeof amount_tab_idx !== 'undefined';\n        const active_index = has_selected_tab_idx ? amount_tab_idx : basis_list.findIndex(b => b.value === basis);\n\n        if (basis_list.length === 1) {\n            return (\n                <Basis\n                    toggleModal={toggleModal}\n                    duration_value={duration_value}\n                    duration_unit={duration_unit}\n                    has_duration_error={has_duration_error}\n                    basis={basis_list[0].value}\n                    setAmountError={setAmountError}\n                    selected_basis={basis_list[0].value === 'stake' ? stake_value : payout_value}\n                    setSelectedAmount={setSelectedAmount}\n                />\n            );\n        }\n\n        return (\n            <div>\n                <Tabs active_index={active_index} onTabItemClick={setAmountTabIdx} top>\n                    {basis_list.map(basis_option => {\n                        switch (basis_option.value) {\n                            case 'stake':\n                                return (\n                                    <div label={basis_option.text} key={basis_option.value}>\n                                        <Basis\n                                            toggleModal={toggleModal}\n                                            duration_value={duration_value}\n                                            duration_unit={duration_unit}\n                                            has_duration_error={has_duration_error}\n                                            basis={basis_option.value}\n                                            setAmountError={setAmountError}\n                                            selected_basis={stake_value}\n                                            setSelectedAmount={setSelectedAmount}\n                                        />\n                                    </div>\n                                );\n                            case 'payout':\n                                return (\n                                    <div label={basis_option.text} key={basis_option.value}>\n                                        <Basis\n                                            toggleModal={toggleModal}\n                                            duration_value={duration_value}\n                                            duration_unit={duration_unit}\n                                            has_duration_error={has_duration_error}\n                                            basis={basis_option.value}\n                                            setAmountError={setAmountError}\n                                            selected_basis={payout_value}\n                                            setSelectedAmount={setSelectedAmount}\n                                        />\n                                    </div>\n                                );\n                            default:\n                                return null;\n                        }\n                    })}\n                </Tabs>\n            </div>\n        );\n    }\n);\n\nexport default Amount;\n","import React from 'react';\nimport { Div100vhContainer, Modal, Money, Popover, usePreventIOSZoom } from '@deriv/components';\nimport { useIsMounted, WS } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { requestPreviewProposal } from 'Stores/Modules/Trading/Helpers/preview-proposal';\nimport AmountMobile from 'Modules/Trading/Components/Form/TradeParams/amount-mobile.jsx';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst MultiplierAmountModal = observer(({ is_open, toggleModal }) => {\n    // Fix to prevent iOS from zooming in erratically on quick taps\n    usePreventIOSZoom();\n    const {\n        ui: { enableApp, disableApp },\n    } = useStore();\n\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params'\n                enableApp={enableApp}\n                is_open={is_open}\n                is_title_centered\n                should_header_stick_body={false}\n                disableApp={disableApp}\n                toggleModal={toggleModal}\n                height='auto'\n                width='calc(100vw - 32px)'\n                title={localize('Stake')}\n            >\n                <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                    <TradeParamsMobile toggleModal={toggleModal} />\n                </Div100vhContainer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default MultiplierAmountModal;\n\nconst TradeParamsMobile = observer(({ toggleModal }) => {\n    const trade_store = useTraderStore();\n    const { amount, currency, trade_stop_out } = trade_store;\n\n    const [stake_value, setStakeValue] = React.useState(amount);\n    const [commission, setCommission] = React.useState(null);\n    const [stop_out, setStopOut] = React.useState(null);\n    const stake_ref = React.useRef(amount);\n    const isMounted = useIsMounted();\n\n    React.useEffect(() => {\n        if (stake_value === amount) return undefined;\n\n        const onProposalResponse = response => {\n            const { proposal, echo_req, subscription } = response;\n            if (\n                isMounted() &&\n                proposal &&\n                echo_req.contract_type === 'MULTUP' &&\n                Number(echo_req.amount) === Number(stake_ref.current)\n            ) {\n                setCommission(proposal.commission);\n                setStopOut(proposal.limit_order?.stop_out?.order_amount);\n            } else if (subscription?.id) {\n                WS.forget(subscription.id);\n            }\n        };\n        const dispose = requestPreviewProposal(trade_store, { amount: stake_value }, onProposalResponse);\n\n        return () => {\n            dispose?.();\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [stake_value]);\n\n    const setSelectedAmount = (basis, stake) => {\n        setStakeValue(stake);\n        stake_ref.current = stake;\n    };\n\n    return (\n        <React.Fragment>\n            <div className='trade-params__multiplier-ic-info-wrapper'>\n                <Popover\n                    alignment='right'\n                    icon='info'\n                    id='dt_multiplier-stake__tooltip'\n                    zIndex={9999}\n                    is_bubble_hover_enabled\n                    message={\n                        <Localize\n                            i18n_default_text='To ensure your loss does not exceed your stake, your contract will be closed automatically when your loss equals to <0/>.'\n                            components={[\n                                <Money key={0} amount={stop_out || trade_stop_out} currency={currency} show_currency />,\n                            ]}\n                        />\n                    }\n                />\n            </div>\n            <AmountMobile\n                toggleModal={toggleModal}\n                amount_tab_idx={0}\n                setSelectedAmount={setSelectedAmount}\n                setAmountError={() => {}}\n                stake_value={stake_value}\n            />\n            <MultipliersInfo\n                className='trade-params__multiplier-trade-info'\n                should_show_tooltip\n                commission={commission}\n                stop_out={stop_out}\n                amount={stake_value}\n            />\n        </React.Fragment>\n    );\n});\n","import React from 'react';\nimport { RadioGroup, Popover } from '@deriv/components';\n\nconst RadioGroupWithInfoMobile = ({\n    items_list,\n    contract_name,\n    current_value_object,\n    onChange,\n    info,\n    is_tooltip_disabled = false,\n    popover_alignment = 'right',\n    toggleModal,\n}) => {\n    const onValueChange = e => {\n        onChange({\n            target: {\n                name: current_value_object.name,\n                value: Number(e.target.value),\n            },\n        });\n        toggleModal();\n    };\n\n    return (\n        <>\n            <div className={`trade-params__${contract_name}-ic-info-wrapper`}>\n                <Popover\n                    alignment={popover_alignment}\n                    disable_target_icon={is_tooltip_disabled}\n                    icon='info'\n                    id={`dt_${contract_name}-stake__tooltip`}\n                    is_bubble_hover_enabled\n                    zIndex={9999}\n                    message={info}\n                />\n            </div>\n            <RadioGroup\n                className={`trade-params__${contract_name}-radio-group`}\n                name={`trade-params__${contract_name}-radio`}\n                selected={!Number.isNaN(current_value_object.value) ? current_value_object.value?.toString() : ''}\n                onToggle={onValueChange}\n            >\n                {items_list.map(({ text, value }) => (\n                    <RadioGroup.Item key={value} id={text} label={text} value={value?.toString()} />\n                ))}\n            </RadioGroup>\n        </>\n    );\n};\n\nexport default RadioGroupWithInfoMobile;\n","import RadioGroupWithInfoMobile from './radio-group-with-info-mobile.jsx';\n\nexport default RadioGroupWithInfoMobile;\n","import React from 'react';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx';\nimport RadioGroupWithInfoMobile from 'Modules/Trading/Components/Form/RadioGroupWithInfoMobile';\nimport { requestPreviewProposal } from 'Stores/Modules/Trading/Helpers/preview-proposal';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useIsMounted, WS } from '@deriv/shared';\n\nconst MultiplierOptions = observer(({ toggleModal }) => {\n    const trade_store = useTraderStore();\n    const { amount, multiplier, multiplier_range_list, onChange } = trade_store;\n    const [commission, setCommission] = React.useState(null);\n    const [stop_out, setStopOut] = React.useState(null);\n    const isMounted = useIsMounted();\n\n    React.useEffect(() => {\n        if (!amount) return undefined;\n\n        const onProposalResponse = ({ echo_req, proposal, subscription }) => {\n            if (isMounted() && proposal && echo_req.contract_type === 'MULTUP' && Number(echo_req.amount) === amount) {\n                setCommission(proposal.commission);\n                setStopOut(proposal.limit_order?.stop_out?.order_amount);\n            } else if (subscription?.id) {\n                WS.forget(subscription.id);\n            }\n        };\n        const dispose = requestPreviewProposal(trade_store, { amount }, onProposalResponse);\n\n        return () => {\n            dispose?.();\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [amount]);\n\n    return (\n        <React.Fragment>\n            <RadioGroupWithInfoMobile\n                contract_name='multiplier'\n                current_value_object={{ name: 'multiplier', value: multiplier }}\n                info={localize(\n                    'Your gross profit is the percentage change in market price times your stake and the multiplier chosen here.'\n                )}\n                items_list={multiplier_range_list}\n                onChange={onChange}\n                toggleModal={toggleModal}\n            />\n            <MultipliersInfo\n                className='trade-params__multiplier-trade-info'\n                should_show_tooltip\n                commission={commission}\n                stop_out={stop_out}\n                amount={amount}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default MultiplierOptions;\n","import React from 'react';\nimport { Div100vhContainer, Modal, usePreventIOSZoom } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getGrowthRatePercentage, getTickSizeBarrierPercentage, isEmptyObject } from '@deriv/shared';\nimport MultiplierOptions from 'Modules/Trading/Containers/Multiplier/multiplier-options.jsx';\nimport RadioGroupWithInfoMobile from 'Modules/Trading/Components/Form/RadioGroupWithInfoMobile';\nimport { observer, useStore } from '@deriv/stores';\n\nconst RadioGroupOptionsModal = observer(({ is_open, modal_title, toggleModal }) => {\n    const { accumulator_range_list, growth_rate, onChange, tick_size_barrier, proposal_info } = useTraderStore();\n    const {\n        ui: { enableApp, disableApp },\n    } = useStore();\n\n    // Fix to prevent iOS from zooming in erratically on quick taps\n    usePreventIOSZoom();\n    const has_error_or_not_loaded =\n        proposal_info?.ACCU?.has_error || !proposal_info?.ACCU?.id || isEmptyObject(proposal_info);\n\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params'\n                enableApp={enableApp}\n                is_open={is_open}\n                is_title_centered\n                should_header_stick_body={false}\n                disableApp={disableApp}\n                toggleModal={toggleModal}\n                height='auto'\n                width='calc(100vw - 32px)'\n                title={modal_title}\n            >\n                <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                    {modal_title === localize('Multiplier') ? (\n                        <MultiplierOptions toggleModal={toggleModal} />\n                    ) : (\n                        <RadioGroupWithInfoMobile\n                            contract_name='accumulator'\n                            current_value_object={{ name: 'growth_rate', value: growth_rate }}\n                            info={localize(\n                                'Your stake will grow at {{growth_rate}}% per tick as long as the current spot price remains within ±{{tick_size_barrier}} from the previous spot price.',\n                                {\n                                    growth_rate: getGrowthRatePercentage(growth_rate),\n                                    tick_size_barrier: getTickSizeBarrierPercentage(tick_size_barrier),\n                                }\n                            )}\n                            is_tooltip_disabled={has_error_or_not_loaded}\n                            items_list={accumulator_range_list.map(value => ({\n                                text: `${getGrowthRatePercentage(value)}%`,\n                                value,\n                            }))}\n                            onChange={onChange}\n                            popover_alignment='bottom'\n                            toggleModal={toggleModal}\n                        />\n                    )}\n                </Div100vhContainer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default RadioGroupOptionsModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Div100vhContainer, Modal, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport Expiration from './expiration.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst MultipliersExpirationModal = observer(({ is_open, toggleModal }) => {\n    const { ui } = useStore();\n    const { enableApp, disableApp } = ui;\n    return (\n        <React.Fragment>\n            <Modal\n                enableApp={enableApp}\n                is_open={is_open}\n                disableApp={disableApp}\n                toggleModal={toggleModal}\n                has_close_icon={false}\n                should_header_stick_body={false}\n                height='auto'\n                width='calc(100vw - 3.2rem)'\n                title={localize('Expiration')}\n            >\n                <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                    <div style={{ minHeight: '120px', padding: '1.6rem' }}>\n                        <Text size='xs' color='general'>\n                            <Localize\n                                i18n_default_text='Your contract will be closed automatically at the next available asset price on <0></0>.'\n                                components={[<Expiration key={0} is_text_only text_size='xs' />]}\n                            />\n                        </Text>\n                    </div>\n                    <Modal.Footer has_separator>\n                        <Button\n                            style={{ width: '100%', height: '4rem' }}\n                            large\n                            primary\n                            has_effect\n                            text={localize('OK')}\n                            onClick={toggleModal}\n                        />\n                    </Modal.Footer>\n                </Div100vhContainer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nMultipliersExpirationModal.propTypes = {\n    is_open: PropTypes.bool,\n    toggleModal: PropTypes.func,\n};\n\nexport default MultipliersExpirationModal;\n","import React from 'react';\nimport { Money, Text } from '@deriv/components';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer } from '@deriv/stores';\nimport MultiplierAmountModal from 'Modules/Trading/Containers/Multiplier/multiplier-amount-modal.jsx';\nimport RadioGroupOptionsModal from 'Modules/Trading/Containers/radio-group-options-modal.jsx';\nimport MultipliersExpiration from 'Modules/Trading/Components/Form/TradeParams/Multiplier/expiration.jsx';\nimport MultipliersExpirationModal from 'Modules/Trading/Components/Form/TradeParams/Multiplier/expiration-modal.jsx';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx';\nimport { localize } from '@deriv/translations';\nimport { getGrowthRatePercentage } from '@deriv/shared';\n\nconst AmountWidget = ({ amount, currency, expiration, is_crypto_multiplier }) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const [is_expiration_modal_open, setIsExpirationModalOpen] = React.useState(false);\n\n    const toggleModal = () => {\n        setIsOpen(!is_open);\n    };\n\n    const toggleExpirationModal = () => {\n        setIsExpirationModalOpen(!is_expiration_modal_open);\n    };\n\n    return (\n        <React.Fragment>\n            <MultiplierAmountModal is_open={is_open} toggleModal={toggleModal} />\n            <div className='mobile-widget mobile-widget__multiplier' onClick={toggleModal}>\n                <div className='mobile-widget__multiplier-amount'>\n                    <div className='mobile-widget__item'>\n                        <Text weight='bold' size='xxs'>\n                            <Money amount={amount} currency={currency} show_currency />\n                        </Text>\n                    </div>\n                </div>\n                <MultipliersInfo\n                    className='mobile-widget__multiplier-trade-info'\n                    commission_text_size='xxxxs'\n                    stop_out_text_size='xxxxs'\n                />\n            </div>\n            {is_crypto_multiplier && (\n                <div className='mobile-widget' onClick={expiration ? toggleExpirationModal : null}>\n                    <div className='mobile-widget__multiplier-expiration'>\n                        <Text size='xxs'>{localize('Expires on')}</Text>\n                        <MultipliersExpiration is_text_only text_size='xxs' />\n                    </div>\n                    <MultipliersExpirationModal\n                        is_open={is_expiration_modal_open}\n                        toggleModal={toggleExpirationModal}\n                    />\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport const MultiplierAmountWidget = observer(() => {\n    const { amount, expiration, currency, is_crypto_multiplier, multiplier } = useTraderStore();\n    const amount_widget_props = {\n        amount,\n        expiration,\n        currency,\n        is_crypto_multiplier,\n        multiplier,\n    };\n    return <AmountWidget {...amount_widget_props} />;\n});\n\nconst RadioGroupOptionsWidget = ({ displayed_trade_param, modal_title }) => {\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const toggleModal = () => {\n        setIsOpen(!is_open);\n    };\n\n    return (\n        <React.Fragment>\n            <RadioGroupOptionsModal is_open={is_open} toggleModal={toggleModal} modal_title={modal_title} />\n            <div className='mobile-widget mobile-widget__multiplier-options' onClick={toggleModal}>\n                <div className='mobile-widget__item'>\n                    <span className='mobile-widget__item-value'>{displayed_trade_param}</span>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const MultiplierOptionsWidget = observer(() => {\n    const { multiplier } = useTraderStore();\n    const displayed_trade_param = `x${multiplier}`;\n    const modal_title = localize('Multiplier');\n    return <RadioGroupOptionsWidget displayed_trade_param={displayed_trade_param} modal_title={modal_title} />;\n});\n\nexport const AccumulatorOptionsWidget = observer(() => {\n    const { growth_rate } = useTraderStore();\n    const displayed_trade_param = `${getGrowthRatePercentage(growth_rate)}%`;\n    const modal_title = localize('Growth rate');\n    return <RadioGroupOptionsWidget displayed_trade_param={displayed_trade_param} modal_title={modal_title} />;\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { AMOUNT_MAX_LENGTH, getDecimalPlaces } from '@deriv/shared';\nimport { MobileWrapper } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport LabeledQuantityInputMobile from '../../LabeledQuantityInputMobile';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst AccumulatorsAmountMobile = observer(({ is_nativepicker }) => {\n    const { ui, client } = useStore();\n    const { current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { amount, currency, onChange } = useTraderStore();\n    return (\n        <>\n            <MobileWrapper>\n                <LabeledQuantityInputMobile\n                    input_label={localize('Stake')}\n                    className={classNames('trade-container__amount', 'trade-container__amount--accumulator')}\n                    classNameInlinePrefix='trade-container__currency'\n                    classNameInput={classNames('trade-container__input', 'trade-container__input--accumulator')}\n                    currency={currency}\n                    current_focus={current_focus}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    id='dt_amount_input'\n                    inline_prefix={is_single_currency ? currency : null}\n                    is_autocomplete_disabled\n                    is_float\n                    is_hj_whitelisted\n                    is_incrementable\n                    is_nativepicker={is_nativepicker}\n                    is_negative_disabled\n                    max_length={AMOUNT_MAX_LENGTH}\n                    name='amount'\n                    onChange={onChange}\n                    type='tel'\n                    value={amount}\n                    ariaLabel={localize('Amount')}\n                    setCurrentFocus={setCurrentFocus}\n                />\n            </MobileWrapper>\n        </>\n    );\n});\n\nAccumulatorsAmountMobile.propTypes = {\n    is_nativepicker: PropTypes.bool,\n};\n\nexport default AccumulatorsAmountMobile;\n","import React from 'react';\nimport { Tabs, TickPicker, Numpad, RelativeDatepicker, Text } from '@deriv/components';\nimport { isEmptyObject, addComma, getDurationMinMaxValues } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\n\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst submit_label = localize('OK');\n\nconst updateAmountChanges = (obj, stake_value, payout_value, basis, trade_basis, trade_amount) => {\n    // TODO: Move onChangeMultiple outside of duration and amount\n    //  and unify all trade parameter components to use same onMultipleChange func onSubmit\n    // Checks if Amount tab was changed to stake and stake value was updated\n    if (basis === 'stake' && stake_value !== trade_amount) {\n        obj.basis = 'stake';\n        obj.amount = stake_value;\n        // Checks if Amount tab was changed to payout and payout value was updated\n    } else if (basis === 'payout' && payout_value !== trade_amount) {\n        obj.basis = 'payout';\n        obj.amount = payout_value;\n        // Checks if Amount tab was changed but payout or stake value was not updated\n    } else if (trade_basis !== basis) {\n        obj.basis = basis;\n        obj.amount = trade_amount;\n    }\n};\n\nconst Ticks = observer(\n    ({\n        setDurationError,\n        basis_option,\n        toggleModal,\n        has_amount_error,\n        payout_value,\n        stake_value,\n        selected_duration,\n        setSelectedDuration,\n    }) => {\n        const {\n            duration_min_max,\n            duration: trade_duration,\n            duration_unit: trade_duration_unit,\n            basis: trade_basis,\n            amount: trade_amount,\n            onChangeMultiple,\n        } = useTraderStore();\n        React.useEffect(() => {\n            setDurationError(false);\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        const [min_tick, max_tick] = getDurationMinMaxValues(duration_min_max, 'tick', 't');\n\n        const setTickDuration = value => {\n            const { value: duration } = value.target;\n            const on_change_obj = {};\n\n            // check for any amount changes from Amount trade params tab before submitting onChange object\n            if (!has_amount_error)\n                updateAmountChanges(on_change_obj, stake_value, payout_value, basis_option, trade_basis, trade_amount);\n\n            if (trade_duration !== duration || trade_duration_unit !== 't') {\n                on_change_obj.duration_unit = 't';\n                on_change_obj.duration = duration;\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n\n        const onTickChange = tick => setSelectedDuration('t', tick);\n        const tick_duration = trade_duration < min_tick && selected_duration < min_tick ? min_tick : selected_duration;\n        return (\n            <div className='trade-params__duration-tickpicker'>\n                <TickPicker\n                    default_value={tick_duration}\n                    submit_label={submit_label}\n                    max_value={max_tick}\n                    min_value={min_tick}\n                    onSubmit={setTickDuration}\n                    onValueChange={onTickChange}\n                    singular_label={localize('Tick')}\n                    plural_label={localize('Ticks')}\n                />\n            </div>\n        );\n    }\n);\n\nconst Numbers = observer(\n    ({\n        basis_option,\n        contract_expiry = 'intraday',\n        duration_unit_option,\n        duration_values,\n        expiry_epoch,\n        has_amount_error,\n        payout_value,\n        selected_duration,\n        setDurationError,\n        setSelectedDuration,\n        stake_value,\n        show_expiry = false,\n        toggleModal,\n    }) => {\n        const { ui } = useStore();\n        const { addToast } = ui;\n        const {\n            duration_min_max,\n            duration: trade_duration,\n            duration_unit: trade_duration_unit,\n            basis: trade_basis,\n            amount: trade_amount,\n            onChangeMultiple,\n        } = useTraderStore();\n        const { value: duration_unit } = duration_unit_option;\n        const [min, max] = getDurationMinMaxValues(duration_min_max, contract_expiry, duration_unit);\n        const [has_error, setHasError] = React.useState(false);\n\n        const validateDuration = value => {\n            const localized_message = (\n                <Localize\n                    i18n_default_text='Should be between {{min}} and {{max}}'\n                    values={{\n                        min,\n                        max: addComma(max, 0, false),\n                    }}\n                />\n            );\n            if (parseInt(value) < min || parseInt(selected_duration) > max) {\n                addToast({ key: 'duration_error', content: localized_message, type: 'error', timeout: 2000 });\n                setDurationError(true);\n                setHasError(true);\n                return 'error';\n            } else if (parseInt(value) > max) {\n                addToast({ key: 'duration_error', content: localized_message, type: 'error', timeout: 2000 });\n                setHasError(true);\n                return 'error';\n            } else if (value.toString().length < 1) {\n                addToast({ key: 'duration_error', content: localized_message, type: 'error', timeout: 2000 });\n                setDurationError(true);\n                setHasError(true);\n                return false;\n            }\n\n            setDurationError(false);\n            setHasError(false);\n            return true;\n        };\n\n        const setDuration = duration => {\n            const on_change_obj = {};\n\n            // check for any amount changes from Amount trade params tab before submitting onChange object\n            if (!has_amount_error)\n                updateAmountChanges(on_change_obj, stake_value, payout_value, basis_option, trade_basis, trade_amount);\n\n            if (trade_duration !== duration || trade_duration_unit !== duration_unit) {\n                on_change_obj.duration_unit = duration_unit;\n                on_change_obj.duration = duration;\n                on_change_obj.expiry_type = 'duration';\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n\n        const setExpiryDate = (epoch, duration) => {\n            let expiry_date = new Date((epoch - trade_duration * 24 * 60 * 60) * 1000);\n\n            if (duration) {\n                expiry_date = new Date(expiry_date.getTime() + duration * 24 * 60 * 60 * 1000);\n            }\n\n            return expiry_date\n                .toUTCString()\n                .replace('GMT', 'GMT +0')\n                .substring(5)\n                .replace(/(\\d{2}) (\\w{3} \\d{4})/, '$1 $2,');\n        };\n\n        const onNumberChange = num => {\n            setSelectedDuration(duration_unit, num);\n            validateDuration(num);\n        };\n\n        return (\n            <div className='trade-params__amount-keypad'>\n                {show_expiry && (\n                    <Text as='div' size='xxxs' line_height='s' className='expiry-text-container--mobile'>\n                        <Localize\n                            i18n_default_text='Expiry: {{date}}'\n                            values={{\n                                date: !has_error ? setExpiryDate(expiry_epoch, duration_values?.d_duration) : '',\n                            }}\n                        />\n                    </Text>\n                )}\n                <Numpad\n                    value={selected_duration}\n                    onSubmit={setDuration}\n                    render={({ value: v, className }) => {\n                        return <div className={className}>{v}</div>;\n                    }}\n                    pip_size={0}\n                    submit_label={submit_label}\n                    min={min}\n                    max={max}\n                    reset_press_interval={350}\n                    reset_value=''\n                    onValidate={validateDuration}\n                    onValueChange={onNumberChange}\n                />\n            </div>\n        );\n    }\n);\n\nconst Duration = observer(\n    ({\n        amount_tab_idx,\n        d_duration,\n        duration_tab_idx,\n        expiry_epoch,\n        h_duration,\n        has_amount_error,\n        m_duration,\n        payout_value,\n        s_duration,\n        setDurationError,\n        setDurationTabIdx,\n        setSelectedDuration,\n        stake_value,\n        t_duration,\n        toggleModal,\n    }) => {\n        const { duration_units_list, duration_min_max, duration_unit, basis: trade_basis } = useTraderStore();\n        const duration_values = {\n            t_duration,\n            s_duration,\n            m_duration,\n            h_duration,\n            d_duration,\n        };\n        const has_selected_tab_idx = typeof duration_tab_idx !== 'undefined';\n        const active_index = has_selected_tab_idx\n            ? duration_tab_idx\n            : duration_units_list.findIndex(d => d.value === duration_unit);\n        const [min, max] = getDurationMinMaxValues(duration_min_max, 'daily', 'd');\n        const handleRelativeChange = date => {\n            setSelectedDuration('d', date);\n        };\n        const selected_basis_option = () => {\n            if (amount_tab_idx === 0) {\n                return 'stake';\n            } else if (amount_tab_idx === 1) {\n                return 'payout';\n            }\n            return trade_basis;\n        };\n\n        const onTabChange = index => {\n            setDurationTabIdx(index);\n            const { value: unit } = duration_units_list[index];\n            setSelectedDuration(unit, duration_values[`${unit}_duration`]);\n        };\n\n        return (\n            <div>\n                <Tabs active_index={active_index} onTabItemClick={num => onTabChange(num)} single_tab_has_no_label top>\n                    {duration_units_list.map(duration_unit_option => {\n                        switch (duration_unit_option.value) {\n                            case 't':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Ticks\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            selected_duration={t_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 's':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={s_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'm':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={m_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'h':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={h_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'd':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            contract_expiry='daily'\n                                            selected_duration={d_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            show_expiry\n                                            payout_value={payout_value}\n                                            expiry_epoch={expiry_epoch}\n                                            duration_values={duration_values}\n                                        />\n                                        <RelativeDatepicker\n                                            onChange={handleRelativeChange}\n                                            min_date={min}\n                                            max_date={max}\n                                            title={localize('Pick an end date')}\n                                        />\n                                    </div>\n                                );\n                            default:\n                                return null;\n                        }\n                    })}\n                </Tabs>\n            </div>\n        );\n    }\n);\n\nexport default Duration;\n","import 'Sass/app/modules/trading-mobile.scss';\n\nimport { Div100vhContainer, Modal, Money, Tabs, ThemedScrollbars, usePreventIOSZoom } from '@deriv/components';\n\nimport AmountMobile from 'Modules/Trading/Components/Form/TradeParams/amount-mobile.jsx';\nimport Barrier from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport DurationMobile from 'Modules/Trading/Components/Form/TradeParams/Duration/duration-mobile.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { localize } from '@deriv/translations';\n\nconst DEFAULT_DURATION = Object.freeze({\n    t: 5,\n    s: 15,\n    m: 3,\n    h: 1,\n    d: 1,\n});\n\nconst reducer = (state, payload) => {\n    return {\n        ...state,\n        ...payload,\n    };\n};\n\nconst makeGetDefaultDuration = (trade_duration, trade_duration_unit) => duration_unit =>\n    trade_duration_unit === duration_unit ? trade_duration : DEFAULT_DURATION[duration_unit];\n\nconst TradeParamsModal = observer(({ is_open, toggleModal }) => {\n    const { client, ui } = useStore();\n    const { currency } = client;\n    const { enableApp, disableApp } = ui;\n    const { amount, form_components, duration, duration_unit, duration_units_list } = useTraderStore();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const getDefaultDuration = React.useCallback(makeGetDefaultDuration(duration, duration_unit), []);\n\n    const [state, dispatch] = React.useReducer(reducer, {\n        trade_param_tab_idx: 0,\n        duration_tab_idx: undefined,\n        amount_tab_idx: undefined,\n        has_amount_error: false,\n        has_duration_error: false,\n        // duration unit values\n        curr_duration_unit: duration_unit,\n        curr_duration_value: duration,\n        t_duration: getDefaultDuration('t'),\n        s_duration: getDefaultDuration('s'),\n        m_duration: getDefaultDuration('m'),\n        h_duration: getDefaultDuration('h'),\n        d_duration: getDefaultDuration('d'),\n        // amount values\n        stake_value: amount,\n        payout_value: amount,\n    });\n\n    usePreventIOSZoom();\n\n    React.useEffect(() => {\n        setSelectedDuration(duration_unit, duration);\n        setDurationTabIdx(undefined);\n        // duration and duration_unit can be changed in trade-store when contract type is changed\n    }, [duration, duration_unit]);\n\n    const setTradeParamTabIdx = trade_param_tab_idx => dispatch({ trade_param_tab_idx });\n\n    const setDurationTabIdx = duration_tab_idx => dispatch({ duration_tab_idx });\n\n    const setAmountTabIdx = amount_tab_idx => dispatch({ amount_tab_idx });\n\n    const setSelectedAmount = (basis, selected_basis_value) => dispatch({ [`${basis}_value`]: selected_basis_value });\n\n    const setSelectedDuration = (selected_duration_unit, selected_duration) => {\n        dispatch({\n            [`${selected_duration_unit}_duration`]: selected_duration,\n            curr_duration_unit: selected_duration_unit,\n            curr_duration_value: selected_duration,\n        });\n    };\n\n    const setAmountError = has_error => {\n        dispatch({ has_amount_error: has_error });\n    };\n    const setDurationError = has_error => {\n        dispatch({ has_duration_error: has_error });\n    };\n\n    const isVisible = component_key => form_components.includes(component_key);\n\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params'\n                enableApp={enableApp}\n                is_open={is_open}\n                header={<div />}\n                disableApp={disableApp}\n                toggleModal={toggleModal}\n                height='auto'\n                width='calc(100vw - 32px)'\n            >\n                <ThemedScrollbars>\n                    <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='120px'>\n                        <TradeParamsMobile\n                            currency={currency}\n                            toggleModal={toggleModal}\n                            isVisible={isVisible}\n                            setTradeParamTabIdx={setTradeParamTabIdx}\n                            trade_param_tab_idx={state.trade_param_tab_idx}\n                            setDurationTabIdx={setDurationTabIdx}\n                            duration_tab_idx={state.duration_tab_idx}\n                            setAmountTabIdx={setAmountTabIdx}\n                            amount_tab_idx={state.amount_tab_idx}\n                            // amount\n                            setSelectedAmount={setSelectedAmount}\n                            stake_value={state.stake_value}\n                            payout_value={state.payout_value}\n                            duration_unit={state.curr_duration_unit}\n                            duration_value={state.curr_duration_value}\n                            duration_units_list={duration_units_list}\n                            has_amount_error={state.has_amount_error}\n                            setAmountError={setAmountError}\n                            // duration\n                            setSelectedDuration={setSelectedDuration}\n                            has_duration_error={state.has_duration_error}\n                            setDurationError={setDurationError}\n                            t_duration={state.t_duration}\n                            s_duration={state.s_duration}\n                            m_duration={state.m_duration}\n                            h_duration={state.h_duration}\n                            d_duration={state.d_duration}\n                        />\n                    </Div100vhContainer>\n                </ThemedScrollbars>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default TradeParamsModal;\n\nconst TradeParamsMobile = observer(\n    ({\n        currency,\n        toggleModal,\n        isVisible,\n        setAmountTabIdx,\n        amount_tab_idx,\n        setTradeParamTabIdx,\n        trade_param_tab_idx,\n        setDurationTabIdx,\n        duration_unit,\n        duration_units_list,\n        duration_value,\n        duration_tab_idx,\n        has_amount_error,\n        has_duration_error,\n        // amount\n        setAmountError,\n        setSelectedAmount,\n        stake_value,\n        payout_value,\n        // duration\n        setDurationError,\n        setSelectedDuration,\n        t_duration,\n        s_duration,\n        m_duration,\n        h_duration,\n        d_duration,\n    }) => {\n        const { basis_list, basis, expiry_epoch, is_turbos, is_vanilla } = useTraderStore();\n        const getDurationText = () => {\n            const duration = duration_units_list.find(d => d.value === duration_unit);\n            return `${duration_value} ${\n                duration && (duration_value > 1 ? localize(duration.text) : localize(duration.text.slice(0, -1)))\n            }`;\n        };\n\n        const getAmountText = () => {\n            const has_selected_tab_idx = typeof amount_tab_idx !== 'undefined';\n            const active_index = has_selected_tab_idx ? amount_tab_idx : basis_list.findIndex(b => b.value === basis);\n\n            return <Money currency={currency} show_currency amount={active_index === 1 ? payout_value : stake_value} />;\n        };\n\n        const getHeaderContent = tab_key => {\n            switch (tab_key) {\n                case 'duration':\n                    return (\n                        <div className='trade-params__header'>\n                            <div className='trade-params__header-label'>{localize('Duration')}</div>\n                            <div\n                                className={classNames('trade-params__header-value', {\n                                    'trade-params__header-value--has-error': has_duration_error,\n                                })}\n                            >\n                                {has_duration_error ? localize('Error') : getDurationText()}\n                            </div>\n                        </div>\n                    );\n                case 'amount':\n                    return (\n                        <div className='trade-params__header'>\n                            <div className='trade-params__header-label'>\n                                {is_turbos || is_vanilla ? localize('Stake') : localize('Amount')}\n                            </div>\n                            <div\n                                className={classNames('trade-params__header-value', {\n                                    'trade-params__header-value--has-error': has_amount_error,\n                                })}\n                            >\n                                {has_amount_error ? localize('Error') : getAmountText()}\n                            </div>\n                        </div>\n                    );\n                default:\n                    return null;\n            }\n        };\n        return (\n            <Tabs\n                active_index={trade_param_tab_idx}\n                className='trade-params-duration-amount'\n                onTabItemClick={setTradeParamTabIdx}\n                top\n            >\n                {isVisible('duration') && (\n                    <div data-header-content={getHeaderContent('duration')}>\n                        <DurationMobile\n                            toggleModal={toggleModal}\n                            amount_tab_idx={amount_tab_idx}\n                            duration_tab_idx={duration_tab_idx}\n                            setDurationTabIdx={setDurationTabIdx}\n                            setSelectedDuration={setSelectedDuration}\n                            setDurationError={setDurationError}\n                            has_amount_error={has_amount_error}\n                            t_duration={t_duration}\n                            s_duration={s_duration}\n                            m_duration={m_duration}\n                            h_duration={h_duration}\n                            d_duration={d_duration}\n                            stake_value={stake_value}\n                            payout_value={payout_value}\n                            expiry_epoch={expiry_epoch}\n                        />\n                    </div>\n                )}\n                {isVisible('amount') && (\n                    <div data-header-content={getHeaderContent('amount')}>\n                        <AmountMobile\n                            duration_unit={duration_unit}\n                            duration_value={duration_value}\n                            toggleModal={toggleModal}\n                            amount_tab_idx={amount_tab_idx}\n                            setAmountTabIdx={setAmountTabIdx}\n                            has_duration_error={has_duration_error}\n                            setSelectedAmount={setSelectedAmount}\n                            setAmountError={setAmountError}\n                            stake_value={stake_value}\n                            payout_value={payout_value}\n                        />\n                    </div>\n                )}\n            </Tabs>\n        );\n    }\n);\n\nexport const LastDigitMobile = observer(() => {\n    const { form_components } = useTraderStore();\n    return form_components.includes('last_digit') && <LastDigit />;\n});\n\nexport const BarrierMobile = observer(() => {\n    const { form_components } = useTraderStore();\n    return form_components.includes('barrier') && <Barrier />;\n});\n","import React from 'react';\nimport { Money } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { getExpiryType, getDurationMinMaxValues, getLocalizedBasis } from '@deriv/shared';\nimport { MultiplierAmountWidget } from 'Modules/Trading/Components/Form/TradeParams/Multiplier/widgets.jsx';\nimport TradeParamsModal from '../../Containers/trade-params-mobile.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst MobileWidget = observer(({ toggleDigitsWidget, is_collapsed }) => {\n    const { ui } = useStore();\n    const { onChangeUiStore } = ui;\n    const trade_store = useTraderStore();\n    const {\n        amount,\n        basis,\n        currency,\n        duration,\n        duration_min_max,\n        duration_unit,\n        form_components,\n        is_multiplier,\n        last_digit,\n        onChange,\n    } = trade_store;\n\n    const [is_open, setIsOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        assertDurationIsWithinBoundary();\n    });\n\n    const assertDurationIsWithinBoundary = () => {\n        const contract_expiry_type = getExpiryType(trade_store);\n        const [min_value, max_value] = getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (contract_expiry_type === 'tick' && duration < min_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: min_value });\n            onChange({ target: { name: 'duration', value: min_value } });\n        }\n        if (!(duration < min_value) && duration > max_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: max_value });\n            onChange({ target: { name: 'duration', value: max_value } });\n        }\n    };\n\n    const toggleWidget = () => setIsOpen(!is_open);\n\n    const getHumanReadableDuration = () => {\n        if (!duration_unit) return '';\n        const lookup = {\n            t: [localize('tick'), localize('ticks')],\n            s: [localize('second'), localize('seconds')],\n            m: [localize('min'), localize('mins')],\n            h: [localize('hour'), localize('hours')],\n            d: [localize('day'), localize('days')],\n        };\n\n        try {\n            if (!duration_unit) return '';\n            const formatted_duration_unit = +duration === 1 ? lookup[duration_unit][0] : lookup[duration_unit][1];\n\n            return `${duration} ${formatted_duration_unit}`;\n        } catch (e) {\n            return '';\n        }\n    };\n\n    const isVisible = component => {\n        return form_components.includes(component);\n    };\n\n    const localized_basis = getLocalizedBasis();\n\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake':\n                return localized_basis.stake;\n            case 'payout':\n                return localized_basis.payout;\n            default:\n                return basis;\n        }\n    };\n\n    return (\n        <div className='mobile-widget__wrapper'>\n            {is_multiplier ? (\n                <MultiplierAmountWidget />\n            ) : (\n                <div id='duration_amount_selector' className='mobile-widget' onClick={toggleWidget}>\n                    <div className='mobile-widget__duration'>{getHumanReadableDuration()}</div>\n                    <div className='mobile-widget__amount'>\n                        <Money amount={amount} currency={currency} show_currency />\n                    </div>\n                    <div className='mobile-widget__type'>{stakeOrPayout()}</div>\n                </div>\n            )}\n            <TradeParamsModal is_open={is_open} toggleModal={toggleWidget} />\n            {isVisible('last_digit') && is_collapsed && (\n                <div className='mobile-widget' onClick={toggleDigitsWidget}>\n                    <div className='mobile-widget__amount'>\n                        <Localize i18n_default_text='Digit: {{last_digit}} ' values={{ last_digit }} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default MobileWidget;\n","import React from 'react';\nimport { Checkbox, RadioGroup, Dialog, Popover, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { onToggleCancellation, onChangeCancellationDuration } from 'Stores/Modules/Trading/Helpers/multiplier';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst DealCancellationWarningDialog = observer(({ is_visible, onConfirm, onCancel }) => {\n    const { ui } = useStore();\n    const { disableApp, enableApp, should_show_cancellation_warning, toggleCancellationWarning } = ui;\n    return (\n        <Dialog\n            className='trade-params__multiplier-deal-cancellation-dialog'\n            title={localize('About deal cancellation')}\n            confirm_button_text={localize('Got it')}\n            cancel_button_text={localize('Cancel')}\n            onConfirm={onConfirm}\n            onCancel={onCancel}\n            is_mobile_full_width={false}\n            is_visible={is_visible}\n            disableApp={disableApp}\n            enableApp={enableApp}\n            portal_element_id='modal_root'\n        >\n            <Text size='xxxs' color='general'>\n                <Localize i18n_default_text='Take profit and/or stop loss are not available while deal cancellation is active.' />\n            </Text>\n            <Checkbox\n                defaultChecked={!should_show_cancellation_warning}\n                onChange={() => toggleCancellationWarning()}\n                name={'should_show_cancellation_warning'}\n                label={localize(\"Don't show this again\")}\n            />\n        </Dialog>\n    );\n});\n\nconst CancelDeal = observer(\n    ({ has_cancellation, has_take_profit, has_stop_loss, onChangeMultiple, cancellation_duration }) => {\n        const { ui } = useStore();\n        const { should_show_cancellation_warning } = ui;\n        const { cancellation_range_list } = useTraderStore();\n        const [is_deal_cancel_warning_visible, setDealCancelWarningVisibility] = React.useState(false);\n\n        const canToggleDealCancel = () => {\n            const should_show_popover = (has_take_profit || has_stop_loss) && should_show_cancellation_warning;\n            if (should_show_popover) setDealCancelWarningVisibility(should_show_popover);\n            return !should_show_popover;\n        };\n\n        return (\n            <React.Fragment>\n                <DealCancellationWarningDialog\n                    is_visible={is_deal_cancel_warning_visible}\n                    onCancel={() => setDealCancelWarningVisibility(false)}\n                    onConfirm={() => {\n                        setDealCancelWarningVisibility(false);\n                        onToggleCancellation({ has_cancellation, onChangeMultiple });\n                    }}\n                />\n                <Fieldset className='trade-container__fieldset'>\n                    <div className='dc-input-wrapper--inline'>\n                        <Checkbox\n                            id='dt_cancellation-checkbox_input'\n                            onChange={() => {\n                                if (canToggleDealCancel()) {\n                                    onToggleCancellation({ has_cancellation, onChangeMultiple });\n                                }\n                            }}\n                            name='has_cancellation'\n                            label={localize('Deal cancellation')}\n                            defaultChecked={has_cancellation}\n                        />\n                        <Popover\n                            alignment='left'\n                            icon='info'\n                            id='dt_multiplier-stake__tooltip'\n                            is_bubble_hover_enabled\n                            classNameBubble='trade-container__deal-cancellation-popover'\n                            zIndex={9999}\n                            message={localize(\n                                'Cancel your trade anytime within a chosen time-frame. Triggered automatically if your trade reaches the stop out level within the chosen time-frame.'\n                            )}\n                        />\n                    </div>\n                    {has_cancellation && (\n                        <React.Fragment>\n                            <RadioGroup\n                                className='trade-params__multiplier-radio-group'\n                                name='trade-params__multiplier-radio'\n                                selected={cancellation_duration}\n                                onToggle={event => onChangeCancellationDuration({ event, onChangeMultiple })}\n                            >\n                                {cancellation_range_list.map(({ text, value }) => (\n                                    <RadioGroup.Item key={value} id={text} label={text} value={value.toString()} />\n                                ))}\n                            </RadioGroup>\n                        </React.Fragment>\n                    )}\n                </Fieldset>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default CancelDeal;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { MobileDialog, Button, Div100vhContainer } from '@deriv/components';\nimport { isDeepEqual, pick } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport StopLoss from 'Modules/Trading/Components/Form/TradeParams/Multiplier/stop-loss.jsx';\nimport TakeProfit from 'Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit.jsx';\nimport CancelDeal from 'Modules/Trading/Components/Elements/Multiplier/cancel-deal-mobile.jsx';\n\nconst RiskManagementDialog = observer(({ is_open, onClose, toggleDialog }) => {\n    const {\n        is_turbos,\n        take_profit,\n        has_take_profit,\n        has_stop_loss,\n        stop_loss,\n        has_cancellation,\n        cancellation_range_list,\n        cancellation_duration,\n        onChangeMultiple,\n    } = useTraderStore();\n    const applied_risk_management_state = {\n        take_profit,\n        stop_loss,\n        has_take_profit,\n        has_stop_loss,\n        has_cancellation,\n        cancellation_duration,\n    };\n    const [state, setState] = React.useState(applied_risk_management_state);\n\n    const [validation_errors, setValidationErrors] = React.useState({});\n\n    const should_show_deal_cancellation = cancellation_range_list?.length > 0;\n\n    const getStateToCompare = _state => {\n        const props_to_pick = [\n            'has_take_profit',\n            'has_stop_loss',\n            'has_cancellation',\n            _state.has_take_profit && 'take_profit',\n            _state.has_stop_loss && 'stop_loss',\n            _state.has_cancellation && 'cancellation_duration',\n        ];\n\n        return pick(_state, props_to_pick);\n    };\n\n    const isStateUnchanged = () => {\n        return isDeepEqual(getStateToCompare(state), getStateToCompare(applied_risk_management_state));\n    };\n\n    const validate = new_state => {\n        setValidationErrors({\n            take_profit:\n                new_state.has_take_profit && !new_state.take_profit\n                    ? [localize('Please enter a take profit amount.')]\n                    : [],\n            stop_loss:\n                new_state.has_stop_loss && !new_state.stop_loss ? [localize('Please enter a stop loss amount.')] : [],\n        });\n    };\n\n    const onChange = e => {\n        const { name, value } = e.target;\n        const new_state = { ...state };\n        new_state[name] = value;\n        setState(new_state);\n        validate(new_state);\n    };\n\n    const onChangeMultipleLocal = props => {\n        const new_state = { ...state };\n        Object.assign(new_state, props);\n        setState(new_state);\n        validate(new_state);\n    };\n\n    const apply = () => {\n        onChangeMultiple(state);\n        toggleDialog();\n    };\n\n    const resetAndClose = (...args) => {\n        setState(applied_risk_management_state);\n        onClose(...args);\n    };\n\n    return (\n        <React.Fragment>\n            <MobileDialog portal_element_id='modal_root' visible={is_open} has_content_scroll onClose={resetAndClose}>\n                <Div100vhContainer\n                    className={classNames('trade-params__multiplier-risk-management-dialog', {\n                        'trade-params__multiplier-risk-management-dialog--no-cancel': !should_show_deal_cancellation,\n                    })}\n                    height_offset='54px'\n                >\n                    <TakeProfit\n                        take_profit={state.take_profit}\n                        has_take_profit={state.has_take_profit}\n                        onChange={onChange}\n                        onChangeMultiple={onChangeMultipleLocal}\n                        validation_errors={validation_errors}\n                    />\n                    {!is_turbos && (\n                        <StopLoss\n                            stop_loss={state.stop_loss}\n                            has_stop_loss={state.has_stop_loss}\n                            onChange={onChange}\n                            onChangeMultiple={onChangeMultipleLocal}\n                            validation_errors={validation_errors}\n                        />\n                    )}\n                    {should_show_deal_cancellation && (\n                        <CancelDeal\n                            has_take_profit={state.has_take_profit}\n                            has_stop_loss={state.has_stop_loss}\n                            has_cancellation={state.has_cancellation}\n                            cancellation_duration={state.cancellation_duration}\n                            onChangeMultiple={onChangeMultipleLocal}\n                        />\n                    )}\n                    <div className='trade-params__multiplier-risk-management-dialog-bottom-separator' />\n                    <div className='trade-params__multiplier-risk-management-dialog-apply-button'>\n                        <Button\n                            text={localize('Apply')}\n                            onClick={apply}\n                            primary\n                            is_disabled={\n                                validation_errors.take_profit?.length > 0 ||\n                                validation_errors.stop_loss?.length > 0 ||\n                                isStateUnchanged()\n                            }\n                        />\n                    </div>\n                </Div100vhContainer>\n            </MobileDialog>\n        </React.Fragment>\n    );\n});\n\nexport default RiskManagementDialog;\n","import React from 'react';\nimport { Money } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport RiskManagementDialog from 'Modules/Trading/Containers/Multiplier/risk-management-dialog.jsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst RiskManagementInfo = observer(() => {\n    const {\n        currency,\n        stop_loss,\n        take_profit,\n        has_take_profit,\n        has_stop_loss,\n        cancellation_duration,\n        cancellation_range_list,\n        has_cancellation,\n    } = useTraderStore();\n    const [is_dialog_open, setDialogOpen] = React.useState(false);\n    const has_risk_management = has_take_profit || has_stop_loss || has_cancellation;\n    const toggleDialog = () => {\n        setDialogOpen(!is_dialog_open);\n    };\n    const cancellation_label = cancellation_range_list.find(r => r.value === cancellation_duration)?.text;\n\n    return (\n        <React.Fragment>\n            <RiskManagementDialog\n                is_open={is_dialog_open}\n                toggleDialog={toggleDialog}\n                onClose={() => setDialogOpen(false)}\n            />\n            <div\n                className='mobile-widget mobile-widget__multiplier-risk-management'\n                onClick={() => setDialogOpen(!is_dialog_open)}\n            >\n                {!has_risk_management && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Risk management')}</div>\n                        <div className='mobile-widget__item-value'>{localize('Not set')}</div>\n                    </div>\n                )}\n                {has_take_profit && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Take profit')}</div>\n                        <div className='mobile-widget__item-value'>\n                            <Money amount={take_profit} currency={currency} show_currency />\n                        </div>\n                    </div>\n                )}\n                {has_stop_loss && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Stop loss')}</div>\n                        <div className='mobile-widget__item-value'>\n                            <Money amount={stop_loss} currency={currency} show_currency />\n                        </div>\n                    </div>\n                )}\n                {has_cancellation && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Deal Cancellation')}</div>\n                        <div className='mobile-widget__item-value'>{cancellation_label}</div>\n                    </div>\n                )}\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default RiskManagementInfo;\n","import React from 'react';\nimport { Icon, Money, Text, Popover } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { observer } from '@deriv/stores';\nimport { getContractSubtype, isVanillaContract } from '@deriv/shared';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TProposalInfo = {\n    [key: string]: {\n        has_error?: boolean;\n        id: string;\n        has_increased?: boolean;\n        message?: string;\n        cancellation?: {\n            ask_price: number;\n            date_expiry: number;\n        };\n        growth_rate?: number;\n        obj_contract_basis?: Record<'text' | 'value', string>;\n        returns?: string;\n        stake: string;\n    };\n};\n\nconst PayoutPerPointMobile = observer(() => {\n    const { currency, proposal_info, contract_type, vanilla_trade_type } = useTraderStore();\n    const contract_key = isVanillaContract(contract_type) ? vanilla_trade_type : contract_type?.toUpperCase();\n    // remove assertion and local TProposalInfo type after TS migration for trade package is complete\n    const { has_error, has_increased, id, message, obj_contract_basis } =\n        (proposal_info as TProposalInfo)?.[contract_key] || {};\n    const { text: label, value: payout_per_point } = obj_contract_basis || {};\n    const has_error_or_not_loaded = has_error || !id;\n    const turbos_titles = {\n        Long: localize('For Long:'),\n        Short: localize('For Short:'),\n    };\n    const tooltip_text = isVanillaContract(contract_type) ? (\n        <Localize i18n_default_text='The payout at expiry is equal to the payout per point multiplied by the difference between the final price and the strike price.' />\n    ) : (\n        <Localize\n            i18n_default_text='<0>{{title}}</0> {{message}}'\n            components={[<Text key={0} weight='bold' size='xxs' />]}\n            values={{\n                title: turbos_titles[getContractSubtype(contract_key) as keyof typeof turbos_titles],\n                message,\n            }}\n        />\n    );\n    if (!payout_per_point) return <Fieldset className='payout-per-point' />;\n    return (\n        <Fieldset className='payout-per-point'>\n            <div className='payout-per-point__label-wrapper'>\n                <Text size='xs' color='less-prominent' className='payout-per-point__label'>\n                    {label}\n                </Text>\n                <Popover\n                    alignment='top'\n                    icon='info'\n                    is_bubble_hover_enabled\n                    margin={0}\n                    zIndex='9999'\n                    message={message ? tooltip_text : ''}\n                />\n            </div>\n            <Text size='xs' weight='bold' className='payout-per-point__value'>\n                <Money amount={payout_per_point} currency={currency} show_currency should_format={false} />\n                <span className='trade-container__price-info-movement'>\n                    {!has_error_or_not_loaded && has_increased !== null && has_increased ? (\n                        <Icon icon='IcProfit' />\n                    ) : (\n                        <Icon icon='IcLoss' />\n                    )}\n                </span>\n            </Text>\n        </Fieldset>\n    );\n});\n\nexport default PayoutPerPointMobile;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Collapsible } from '@deriv/components';\nimport { TradeParamsLoader } from 'App/Components/Elements/ContentLoader';\nimport AllowEqualsMobile from 'Modules/Trading/Containers/allow-equals.jsx';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual,\n} from 'Stores/Modules/Trading/Helpers/allow-equals';\nimport {\n    AccumulatorOptionsWidget,\n    MultiplierOptionsWidget,\n} from 'Modules/Trading/Components/Form/TradeParams/Multiplier/widgets.jsx';\nimport AccumulatorsAmountMobile from 'Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-amount-mobile.jsx';\nimport AccumulatorsInfoDisplay from 'Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-info-display.jsx';\nimport { BarrierMobile, LastDigitMobile } from 'Modules/Trading/Containers/trade-params-mobile.jsx';\nimport ContractType from 'Modules/Trading/Containers/contract-type.jsx';\nimport MobileWidget from 'Modules/Trading/Components/Elements/mobile-widget.jsx';\nimport Purchase from 'Modules/Trading/Containers/purchase.jsx';\nimport RiskManagementInfo from 'Modules/Trading/Components/Elements/Multiplier/risk-management-info.jsx';\nimport TakeProfit from 'Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit.jsx';\nimport 'Sass/app/_common/mobile-widget.scss';\nimport classNames from 'classnames';\nimport AccumulatorsStats from 'Modules/Contract/Components/AccumulatorsStats';\nimport Strike from 'Modules/Trading/Components/Form/TradeParams/strike.jsx';\nimport BarrierSelector from 'Modules/Trading/Components/Form/TradeParams/Turbos/barrier-selector';\nimport PayoutPerPointMobile from 'Modules/Trading/Components/Elements/payout-per-point-mobile';\nimport TradeTypeTabs from 'Modules/Trading/Components/Form/TradeParams/trade-type-tabs';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst CollapsibleTradeParams = ({\n    form_components,\n    has_allow_equals,\n    has_take_profit,\n    previous_symbol,\n    is_allow_equal,\n    is_accumulator,\n    is_multiplier,\n    is_trade_params_expanded,\n    is_turbos,\n    is_vanilla,\n    onChange,\n    take_profit,\n    setIsTradeParamsExpanded,\n}) => {\n    React.useEffect(() => {\n        if (previous_symbol && is_allow_equal && has_allow_equals) setIsTradeParamsExpanded(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [previous_symbol]);\n\n    const is_collapsed = !is_trade_params_expanded;\n\n    const onClick = e => {\n        setIsTradeParamsExpanded(e);\n    };\n\n    const toggleDigitsWidget = () => {\n        setIsTradeParamsExpanded(true);\n    };\n\n    const isVisible = component => form_components.includes(component);\n\n    return (\n        <Collapsible position='top' is_collapsed={is_collapsed} onClick={onClick}>\n            {is_accumulator && is_collapsed && <AccumulatorsStats />}\n            <div className='trade-params__contract-type-container'>\n                <ContractType />\n                {is_multiplier && <MultiplierOptionsWidget />}\n                {isVisible('trade_type_tabs') && <TradeTypeTabs />}\n                {is_accumulator && <AccumulatorOptionsWidget />}\n            </div>\n            {isVisible('last_digit') && (\n                <div data-collapsible='true'>\n                    <LastDigitMobile />\n                </div>\n            )}\n            {isVisible('barrier') && (\n                <div data-collapsible='true'>\n                    <BarrierMobile />\n                </div>\n            )}\n            {isVisible('barrier_selector') && (\n                <div data-collapsible='true'>\n                    <BarrierSelector />\n                </div>\n            )}\n            {isVisible('strike') && (\n                <div data-collapsible='true'>\n                    <Strike />\n                </div>\n            )}\n\n            {!is_accumulator && <MobileWidget is_collapsed={is_collapsed} toggleDigitsWidget={toggleDigitsWidget} />}\n            {has_allow_equals && (\n                <div data-collapsible='true'>\n                    <AllowEqualsMobile />\n                </div>\n            )}\n            {(is_multiplier || is_turbos) && (\n                <div data-collapsible='true'>\n                    <RiskManagementInfo />\n                </div>\n            )}\n            {is_accumulator && [\n                <AccumulatorsAmountMobile key='accu_amount' />,\n                <div\n                    data-collapsible='true'\n                    key='accu_take_profit'\n                    className={classNames('take-profit', 'mobile-widget')}\n                >\n                    <TakeProfit\n                        take_profit={take_profit}\n                        has_take_profit={has_take_profit}\n                        onChange={onChange}\n                        has_info={false}\n                    />\n                </div>,\n                <div data-collapsible='true' key='accu_info'>\n                    <AccumulatorsInfoDisplay />\n                </div>,\n            ]}\n            {(is_turbos || is_vanilla) && <PayoutPerPointMobile />}\n            <div\n                className={classNames({\n                    'purchase-container': !is_vanilla,\n                    [`purchase-container__${is_accumulator ? 'accumulator' : 'turbos'}`]: is_accumulator || is_turbos,\n                })}\n            >\n                <Purchase />\n            </div>\n        </Collapsible>\n    );\n};\n\nconst ScreenSmall = observer(({ is_trade_enabled }) => {\n    const trade_store = useTraderStore();\n    const {\n        is_accumulator,\n        is_multiplier,\n        is_turbos,\n        is_vanilla,\n        duration_unit,\n        contract_types_list,\n        contract_type,\n        expiry_type,\n        contract_start_type,\n        form_components,\n        has_take_profit,\n        onChange,\n        previous_symbol,\n        is_trade_params_expanded,\n        setIsTradeParamsExpanded,\n        take_profit,\n    } = trade_store;\n    const is_allow_equal = !!trade_store.is_equal;\n\n    const collapsible_trade_params_props = {\n        is_accumulator,\n        is_multiplier,\n        is_turbos,\n        is_vanilla,\n        form_components,\n        has_take_profit,\n        onChange,\n        previous_symbol,\n        is_trade_params_expanded,\n        setIsTradeParamsExpanded,\n        take_profit,\n        is_allow_equal,\n    };\n\n    const has_callputequal_duration = hasDurationForCallPutEqual(\n        contract_types_list,\n        duration_unit,\n        contract_start_type\n    );\n\n    const has_callputequal = hasCallPutEqual(contract_types_list);\n    const has_allow_equals =\n        isRiseFallEqual(contract_type) && (has_callputequal_duration || expiry_type === 'endtime') && has_callputequal;\n\n    return !is_trade_enabled ? (\n        <div className='mobile-wrapper__content-loader'>\n            <TradeParamsLoader speed={2} />\n        </div>\n    ) : (\n        <CollapsibleTradeParams has_allow_equals={has_allow_equals} {...collapsible_trade_params_props} />\n    );\n});\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n"],"names":["AllowEquals","onChange","is_allow_equal","has_equals_only","className","classNames","Checkbox","label","localize","value","name","e","persist","target","checked","Number","disabled","Text","as","size","Localize","i18n_default_text","propTypes","PropTypes","observer","useTraderStore","allow_equals_props","is_equal","requestPreviewProposal","debounce","store","override","onProposalResponse","new_store","requests","createProposalRequests","subscription_map","onResponse","response","error","subscription","id","isEmptyObject","proposal_requests","Object","keys","forEach","type","WS","subscribeProposal","forget","Basis","basis","duration_unit","duration_value","toggleModal","has_duration_error","selected_basis","setSelectedAmount","setAmountError","useStore","ui","client","addToast","currency","is_turbos","is_vanilla","onChangeMultiple","trade_amount","trade_basis","trade_duration_unit","trade_duration","contract_type","user_currency_decimal_places","getDecimalPlaces","zero_decimals","toFixed","min_amount","parseFloat","toString","replace","validateAmount","localized_message","selected_value","key","content","timeout","isNaN","length","strike__pos","Numpad","format","onSubmit","amount","on_change_obj","duration","min","is_currency","render","Money","should_format","reset_press_interval","reset_value","pip_size","onValidate","submit_label","onValueChange","num","amount_tab_idx","setAmountTabIdx","stake_value","payout_value","basis_list","active_index","findIndex","b","Tabs","onTabItemClick","top","map","basis_option","text","is_open","usePreventIOSZoom","enableApp","disableApp","Modal","is_title_centered","should_header_stick_body","height","width","title","Div100vhContainer","max_autoheight_offset","TradeParamsMobile","trade_store","trade_stop_out","React","setStakeValue","commission","setCommission","stop_out","setStopOut","stake_ref","isMounted","useIsMounted","dispose","proposal","echo_req","current","limit_order","order_amount","Popover","alignment","icon","zIndex","is_bubble_hover_enabled","message","components","show_currency","stake","should_show_tooltip","items_list","contract_name","current_value_object","info","is_tooltip_disabled","popover_alignment","disable_target_icon","RadioGroup","selected","onToggle","Item","MultiplierOptions","multiplier","multiplier_range_list","modal_title","accumulator_range_list","growth_rate","tick_size_barrier","proposal_info","has_error_or_not_loaded","ACCU","has_error","getGrowthRatePercentage","getTickSizeBarrierPercentage","MultipliersExpirationModal","has_close_icon","style","minHeight","padding","color","is_text_only","text_size","Footer","has_separator","Button","large","primary","has_effect","onClick","AmountWidget","expiration","is_crypto_multiplier","setIsOpen","is_expiration_modal_open","setIsExpirationModalOpen","toggleExpirationModal","weight","commission_text_size","stop_out_text_size","MultiplierAmountWidget","amount_widget_props","RadioGroupOptionsWidget","displayed_trade_param","MultiplierOptionsWidget","AccumulatorOptionsWidget","AccumulatorsAmountMobile","is_nativepicker","current_focus","setCurrentFocus","is_single_currency","MobileWrapper","LabeledQuantityInputMobile","input_label","classNameInlinePrefix","classNameInput","fractional_digits","inline_prefix","is_autocomplete_disabled","is_float","is_hj_whitelisted","is_incrementable","is_negative_disabled","max_length","AMOUNT_MAX_LENGTH","ariaLabel","updateAmountChanges","obj","Ticks","setDurationError","has_amount_error","selected_duration","setSelectedDuration","duration_min_max","getDurationMinMaxValues","min_tick","max_tick","tick_duration","TickPicker","default_value","max_value","min_value","tick","singular_label","plural_label","Numbers","epoch","expiry_date","contract_expiry","duration_unit_option","duration_values","expiry_epoch","show_expiry","max","setHasError","validateDuration","values","addComma","parseInt","line_height","date","d_duration","Date","getTime","toUTCString","substring","expiry_type","v","duration_tab_idx","h_duration","m_duration","s_duration","setDurationTabIdx","t_duration","duration_units_list","d","handleRelativeChange","selected_basis_option","index","unit","onTabChange","single_tab_has_no_label","RelativeDatepicker","min_date","max_date","DEFAULT_DURATION","freeze","t","s","m","h","reducer","state","payload","form_components","getDefaultDuration","trade_param_tab_idx","undefined","curr_duration_unit","curr_duration_value","dispatch","selected_duration_unit","header","ThemedScrollbars","isVisible","component_key","includes","setTradeParamTabIdx","selected_basis_value","getHeaderContent","tab_key","find","slice","LastDigitMobile","BarrierMobile","MobileWidget","toggleDigitsWidget","is_collapsed","onChangeUiStore","is_multiplier","last_digit","assertDurationIsWithinBoundary","component","contract_expiry_type","getExpiryType","toggleWidget","localized_basis","getLocalizedBasis","lookup","formatted_duration_unit","getHumanReadableDuration","payout","stakeOrPayout","DealCancellationWarningDialog","is_visible","onConfirm","onCancel","should_show_cancellation_warning","toggleCancellationWarning","Dialog","confirm_button_text","cancel_button_text","is_mobile_full_width","portal_element_id","defaultChecked","has_cancellation","has_take_profit","has_stop_loss","cancellation_duration","cancellation_range_list","is_deal_cancel_warning_visible","setDealCancelWarningVisibility","onToggleCancellation","should_show_popover","classNameBubble","event","onChangeCancellationDuration","onClose","toggleDialog","take_profit","stop_loss","applied_risk_management_state","setState","validation_errors","setValidationErrors","should_show_deal_cancellation","getStateToCompare","_state","props_to_pick","pick","validate","new_state","onChangeMultipleLocal","props","assign","MobileDialog","visible","has_content_scroll","height_offset","is_disabled","isDeepEqual","is_dialog_open","setDialogOpen","has_risk_management","cancellation_label","r","PayoutPerPointMobile","vanilla_trade_type","contract_key","isVanillaContract","toUpperCase","has_increased","obj_contract_basis","payout_per_point","turbos_titles","Long","Short","tooltip_text","getContractSubtype","margin","Icon","CollapsibleTradeParams","has_allow_equals","previous_symbol","is_accumulator","is_trade_params_expanded","setIsTradeParamsExpanded","Collapsible","position","AccumulatorsStats","has_info","ScreenSmall","is_trade_enabled","contract_types_list","contract_start_type","collapsible_trade_params_props","has_callputequal_duration","hasDurationForCallPutEqual","has_callputequal","hasCallPutEqual","isRiseFallEqual","speed"],"sourceRoot":""}