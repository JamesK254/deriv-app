{"version":3,"file":"reports/js/reports.two-month-picker.d08f1654f631e7cd3d73.js","mappings":"i3CAWA,IAAMA,EAAiBC,IAAAA,MAAW,YAA4D,IAAzDC,EAAQ,EAARA,SAAUC,EAAgB,EAAhBA,iBAAkBC,EAAK,EAALA,MACyC,IAA5DH,IAAAA,UAAeI,EAAAA,EAAAA,UAASD,GAAOE,QAAQC,SAAS,EAAG,UAAS,GAA/FC,EAAc,KAAEC,EAAe,KAC2B,IAArBR,IAAAA,SAAeG,GAAM,GAA1DM,EAAe,KAAEC,EAAgB,KAgDlCC,EAAoB,SAACC,GACvB,OAAOV,EAAiBU,EAC5B,EAQMC,EAAqB,SAACC,GACxBb,EAASc,IAAAA,IAAWD,EAAEE,cAAcC,QAAQL,KAAM,cACtD,EAEA,OACI,kBAAC,aAAc,KACX,yBAAKM,UAAU,eACX,kBAAC,EAAAC,SAASC,OAAM,CACZC,cAAed,EACfe,cAAc,OACdC,WA7DK,SAACX,GAClBJ,EAAgBI,GAChBF,GAAiBc,EAAAA,EAAAA,WAAUZ,EAAKa,cAAe,GACnD,EA2DgBvB,iBA1CW,SAACU,GACxB,OAAyD,KAAlDc,EAAAA,EAAAA,eAAatB,EAAAA,EAAAA,UAASG,GAAiBK,EAClD,EAyCgBe,uBAAuB,EACvBC,WAAY,iBAAO,CAAC,CAAC,IAEzB,kBAAC,EAAAT,SAASU,KAAI,CACVP,cAAc,OACdD,cAAed,EACfuB,cAAe3B,EACf4B,YAAY,aACZ7B,iBAAkBS,EAClBqB,aAAa,EACbC,eAAgBpB,KAGxB,yBAAKK,UAAU,gBACX,kBAAC,EAAAC,SAASC,OAAM,CACZC,cAAeZ,EACfa,cAAc,OACdpB,iBAlDS,SAACU,GACtB,IAAMsB,GAAS9B,EAAAA,EAAAA,UAASK,GAAiB0B,QAAQ,SACjD,OAA0D,KAAtDT,EAAAA,EAAAA,eAAatB,EAAAA,EAAAA,YAAW+B,QAAQ,SAAUD,IACR,KAA/BR,EAAAA,EAAAA,cAAaQ,EAAQtB,EAChC,EA+CgBW,WAvEG,SAACX,GAChBJ,GAAgB4B,EAAAA,EAAAA,WAAUxB,EAAKa,cAAe,IAC9Cf,GAAiBN,EAAAA,EAAAA,UAASQ,GAC9B,EAqEgBe,uBAAqB,EACrBC,WAAY,iBAAO,CAAC,CAAC,IAEzB,kBAAC,EAAAT,SAASU,KAAI,CACVP,cAAc,OACdD,cAAeZ,EACfqB,cAAe3B,EACf4B,YAAY,aACZ7B,iBAAkBS,EAClBqB,aAAW,EACXC,eAAgBpB,IAEpB,kBAAC,EAAAM,SAASkB,OAAM,CAACC,SAAS,yBAAyBC,eAAe,EAAMC,QAjDzD,WACvB,IAAMC,GAAgBrC,EAAAA,EAAAA,YAAWsC,MAAM,SACvClC,GAAgBJ,EAAAA,EAAAA,UAASqC,GAAeC,MAAM,SAASpC,SAAS,EAAG,UACnEI,EAAiB+B,EACrB,KAiDJ,IAEA1C,EAAe4C,YAAc,iBAE7B,S","sources":["webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/two-month-picker.tsx"],"sourcesContent":["import moment from 'moment';\nimport React from 'react';\nimport { Calendar } from '@deriv/components';\nimport { addMonths, diffInMonths, subMonths, toMoment } from '@deriv/shared';\n\ntype TTwoMonthPicker = {\n    onChange: (date: moment.MomentInput) => void;\n    isPeriodDisabled: (date: moment.Moment) => boolean;\n    value: moment.Moment;\n};\n\nconst TwoMonthPicker = React.memo(({ onChange, isPeriodDisabled, value }: TTwoMonthPicker) => {\n    const [left_pane_date, setLeftPaneDate] = React.useState(toMoment(value).clone().subtract(1, 'month'));\n    const [right_pane_date, setRightPaneDate] = React.useState(value);\n\n    /**\n     * Navigate from date\n     *\n     * @param {moment.Moment} date\n     */\n    const navigateFrom = (date: moment.Moment) => {\n        setLeftPaneDate(date);\n        setRightPaneDate(addMonths(date.toISOString(), 1));\n    };\n\n    /**\n     * Navigate to date\n     *\n     * @param {moment.Moment} date\n     */\n    const navigateTo = (date: moment.Moment) => {\n        setLeftPaneDate(subMonths(date.toISOString(), 1));\n        setRightPaneDate(toMoment(date));\n    };\n\n    /**\n     * Only allow previous months to be available to navigate. Disable other periods\n     *\n     * @param {moment.Moment} date\n     */\n    const validateFromArrows = (date: moment.Moment) => {\n        return diffInMonths(toMoment(left_pane_date), date) !== -1;\n    };\n\n    /**\n     * Only allow next month to be available to navigate (unless next month is in the future).\n     * Disable other periods\n     *\n     * @param {moment.Moment} date\n     */\n    const validateToArrows = (date: moment.Moment) => {\n        const r_date = toMoment(right_pane_date).startOf('month');\n        if (diffInMonths(toMoment().startOf('month'), r_date) === 0) return true; // future months are disallowed\n        return diffInMonths(r_date, date) !== 1;\n    };\n\n    /**\n     * Validate values to be date_from < date_to\n     *\n     * @param {moment.Moment} date\n     */\n    const shouldDisableDate = (date: moment.Moment) => {\n        return isPeriodDisabled(date);\n    };\n\n    const jumpToCurrentMonth = () => {\n        const current_month = toMoment().endOf('month');\n        setLeftPaneDate(toMoment(current_month).endOf('month').subtract(1, 'month'));\n        setRightPaneDate(current_month);\n    };\n\n    const updateSelectedDate = (e: React.MouseEvent<HTMLElement>) => {\n        onChange(moment.utc(e.currentTarget.dataset.date, 'YYYY-MM-DD'));\n    };\n\n    return (\n        <React.Fragment>\n            <div className='first-month'>\n                <Calendar.Header\n                    calendar_date={left_pane_date}\n                    calendar_view='date'\n                    navigateTo={navigateFrom}\n                    isPeriodDisabled={validateFromArrows}\n                    hide_disabled_periods={true}\n                    switchView={() => ({})}\n                />\n                <Calendar.Body\n                    calendar_view='date'\n                    calendar_date={left_pane_date}\n                    selected_date={value}\n                    date_format='YYYY-MM-DD'\n                    isPeriodDisabled={shouldDisableDate}\n                    hide_others={true}\n                    updateSelected={updateSelectedDate}\n                />\n            </div>\n            <div className='second-month'>\n                <Calendar.Header\n                    calendar_date={right_pane_date}\n                    calendar_view='date'\n                    isPeriodDisabled={validateToArrows}\n                    navigateTo={navigateTo}\n                    hide_disabled_periods\n                    switchView={() => ({})}\n                />\n                <Calendar.Body\n                    calendar_view='date'\n                    calendar_date={right_pane_date}\n                    selected_date={value}\n                    date_format='YYYY-MM-DD'\n                    isPeriodDisabled={shouldDisableDate}\n                    hide_others\n                    updateSelected={updateSelectedDate}\n                />\n                <Calendar.Footer use_icon='IcCalendarForwardToday' has_today_btn={true} onClick={jumpToCurrentMonth} />\n            </div>\n        </React.Fragment>\n    );\n});\n\nTwoMonthPicker.displayName = 'TwoMonthPicker';\n\nexport default TwoMonthPicker;\n"],"names":["TwoMonthPicker","React","onChange","isPeriodDisabled","value","toMoment","clone","subtract","left_pane_date","setLeftPaneDate","right_pane_date","setRightPaneDate","shouldDisableDate","date","updateSelectedDate","e","moment","currentTarget","dataset","className","Calendar","Header","calendar_date","calendar_view","navigateTo","addMonths","toISOString","diffInMonths","hide_disabled_periods","switchView","Body","selected_date","date_format","hide_others","updateSelected","r_date","startOf","subMonths","Footer","use_icon","has_today_btn","onClick","current_month","endOf","displayName"],"sourceRoot":""}